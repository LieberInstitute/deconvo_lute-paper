df.unadj <- df.unadj[order(df.unadj$prop.true, df.unadj$offset),]
df.adj <- df.adj[order(df.adj$prop.true, df.unadj$offset),]
identical(df.unadj$prop.true, df.adj$prop.true)
dfp <- data.frame(unadj = df.unadj$bias, adj = df.adj$bias,
offset = df.unadj$offset, type = df.unadj$type.index)
dfp$celltype <- ifelse(dfp$type==1, "Neuron", "Non-neuron")
ggpt <- ggplot(dfp, aes(x = unadj, y = adj, color = celltype)) + theme_bw() +
geom_point(alpha = 0.5, size = 2) +
geom_abline(slope = 1, intercept = 0, color = "black") +
geom_hline(yintercept = 0, color = "black") +
geom_vline(xintercept = 0, color = "black")
ggpt + facet_wrap(~offset) + ggtitle("Bias by offset amount")
p1v <- seq(0.6, 0.9, 1e-3)
offset.levels <- c(1, 10, 50)
loff <- lapply(offset.levels, function(offi){rep(offi, length(p1v))})
dfres <- do.call(rbind, lapply(loff, function(ii){
do.call(rbind, lapply(seq(length(ii)), function(jj){
offi <- ii[jj]; p1i <- p1v[jj]
lbi <- donor_marker_biasexpt(offsetv = offi, P = c(p1i, 1-p1i),
donor.adj.method = "combat")
lbi$dfres
}))
}))
dfp <- dfres
dfp$offset <- as.numeric(dfp$offset)
dfp$celltype <- ifelse(dfp$type.index==1, "Neuron", "Non-neuron")
ggpt <- ggplot(dfp, aes(x = prop.true, y = prop.pred,
color = celltype, shape = celltype)) +
theme_bw() + geom_point(alpha = 0.5) +
geom_abline(slope = 1, intercept = 0, color = "black")
ggpt + facet_wrap(~prop.type+offset)
dfp <- dfres
dfp$offset <- paste0("offset=",dfp$offset)
dfp$celltype <- ifelse(dfp$type.index==1, "Neuron", "Non-neuron")
ggpt <- ggplot(dfp, aes(x = prop.true, y = prop.pred,
color = celltype, shape = celltype)) +
theme_bw() + geom_point(alpha = 0.5) +
geom_abline(slope = 1, intercept = 0, color = "black")
ggpt + facet_wrap(~prop.type+offset)
dfp <- dfres
dfp$prop.type <- ifelse(dfp$prop.type=="padj", "Bias-adjusted", "Unadjusted")
dfp$offset <- paste0("offset=",dfp$offset)
dfp$celltype <- ifelse(dfp$type.index==1, "Neuron", "Non-neuron")
ggpt <- ggplot(dfp, aes(x = prop.true, y = prop.pred,
color = celltype, shape = celltype)) +
theme_bw() + geom_point(alpha = 0.5) +
geom_abline(slope = 1, intercept = 0, color = "black")
ggpt + facet_wrap(~prop.type+offset)
ggpt + facet_wrap(~prop.type+offset)
# match results for each expt group/adj type
df.unadj <- dfres[dfres$prop.type == "punadj",]
df.adj <- dfres[dfres$prop.type == "padj",]
df.unadj <- df.unadj[order(df.unadj$prop.true, df.unadj$offset),]
df.adj <- df.adj[order(df.adj$prop.true, df.unadj$offset),]
identical(df.unadj$prop.true, df.adj$prop.true)
# get plot data
dfp <- data.frame(unadj = df.unadj$bias, adj = df.adj$bias,
offset = df.unadj$offset, type = df.unadj$type.index)
dfp$offset = paste0("offset=",dfp$offset)
dfp$celltype <- ifelse(dfp$type==1, "Neuron", "Non-neuron")
# make new plot
ggpt <- ggplot(dfp, aes(x = unadj, y = adj, color = celltype)) + theme_bw() +
geom_point(alpha = 0.5, size = 2) +
geom_abline(slope = 1, intercept = 0, color = "black") +
geom_hline(yintercept = 0, color = "black") +
geom_vline(xintercept = 0, color = "black") +
xlab("Unadjusted") + ylab("Bias-adjusted")
ggpt + facet_wrap(~offset) + ggtitle("Bias by offset amount")
ggpt + facet_wrap(~offset) + ggtitle("Bias by offset amount")
offsetv <- c(1, 10)
df <- do.call(rbind, lapply(offsetv, function(offi){
rand_donor_marker_table(ndonor = 10, gindexv = c(1, 2), sd.offset.pos = offi,
sd.offset.neg = offi)
}))
offsetv <- c(1, 10)
df.unadj <- do.call(rbind, lapply(offsetv, function(offi){
dfi <- rand_donor_marker_table(ndonor = 10, gindexv = c(1, 2),
sd.offset.pos = offi, sd.offset.neg = offi)
dfi$outset <- offi; return(dfi)
}))
df.adj <- do.call(rbind, lapply(offsetv, function(offi){
dfi <- donoradj_combat(df, return.type = "donordf", verbose = T)
dfi$offset <- offi; return(dfi)
}))
df.adj <- do.call(rbind, lapply(offsetv, function(offi){
dfi <- donoradj_combat(df, return.type = "donordf")
dfi$offset <- offi; return(dfi)
}))
# add df type
df.unadj$expt.type <- "unadj"
df.adj$expt.type <- "adj"
# order colnames
order.cnv <- order(match(colnames(df.adj), colnames(df.unadj)))
df.adj <- df.adj[,order.cnv]
# bind together
df <- rbind(df.unadj, df.adj)
colnames(df.adj)
colnames(df.adj)
colnames(df.unadj)
# add df type
df.unadj$expt.type <- "unadj"
df.adj$expt.type <- "adj"
# order colnames
order.cnv <- order(match(colnames(df.adj), colnames(df.unadj)))
df.adj <- df.adj[,order.cnv]
colnames(df.adj)
colnames(df.unadj)
offsetv <- c(1, 10)
df.unadj <- do.call(rbind, lapply(offsetv, function(offi){
dfi <- rand_donor_marker_table(ndonor = 10, gindexv = c(1, 2),
sd.offset.pos = offi, sd.offset.neg = offi)
dfi$offset <- offi; return(dfi)
}))
df.adj <- do.call(rbind, lapply(offsetv, function(offi){
dfi <- donoradj_combat(df, return.type = "donordf")
dfi$offset <- offi; return(dfi)
}))
# add df type
df.unadj$expt.type <- "unadj"
df.adj$expt.type <- "adj"
# order colnames
order.cnv <- order(match(colnames(df.adj), colnames(df.unadj)))
df.adj <- df.adj[,order.cnv]
# bind together
df <- rbind(df.unadj, df.adj)
df
head(df)
df$expt.group <- paste0(df$offset, ";", df$expt.type)
exptv <- unique(df$expt.group)
lpca <- lapply(exptv, function(ei){
dti <- df[df$expt.group==ei,]
pcai <- pcaplots_donor(dt = dti)
pcai$pca.bydonortype$scatterplot.pc1.pc2
})
ei = exptv[1]
dti <- df[df$expt.group==ei,]
dti
cai <- pcaplots_donor(dt = dti)
pcai <- pcaplots_donor(dt = dti)
pcai$pca.bydonortype$scatterplot.pc1.pc2
df$expt.group <- paste0(df$offset, ";", df$expt.type)
exptv <- unique(df$expt.group)
lpca <- lapply(exptv, function(ei){
message(ei)
dti <- df[df$expt.group==ei,]
pcai <- pcaplots_donor(dt = dti)
pcai$pca.bydonortype$scatterplot.pc1.pc2
})
ei = exptv[3]
message(ei)
dti <- df[df$expt.group==ei,]
pcai <- pcaplots_donor(dt = dti)
dti
dim(dti)
df.adh
df.adj
colnames(df)
head(df.unadj)
dim(df)
df = df.unadj
head(df)
cnv <- colnames(df); donorcol <- cnv[grepl("^donor\\d+$", cnv)]
dff <- df[,donorcol]
mexpr <- mexpr_from_donordf(df) # make expr matrix
cnv <- colnames(mexpr)
pheno <- data.frame(donor = gsub(";.*", "", cnv),
type = gsub(".*;", "", cnv))
mod <- model.matrix(~type, data = pheno)
batch <- pheno$donor
head(mexpr)
head(df)
filt.donor <- grepl("donor\\d", colnames(df)) # get donor signals
filt.donor
head(df)
mexpr <- do.call(rbind, lapply(unique(df$marker), function(mi){
dff <- df[df$marker==mi, ]
unlist(lapply(unique(dff[dff$marker==mi,]$type), function(ti){
datv <- dff[dff$type==ti, filt.donor]
names(datv) <- paste0(colnames(dff[,filt.donor]), ";", ti)
datv
}))
}))
colnames(mexpr)
mi = unique(df$marker)[1]
mi
dff <- df[df$marker==mi, ]
dff
ti = unique(dff[dff$marker==mi,]$type)[1]
ti
datv <- dff[dff$type==ti, filt.donor]
datv
paste0(colnames(dff[,filt.donor]), ";", ti)
unlist(lapply(unique(dff[dff$marker==mi,]$type), function(ti){
datv <- dff[dff$type==ti, filt.donor]
names(datv) <- paste0(colnames(dff[,filt.donor]), ";", ti)
datv
}))
ld <- lapply(unique(dff[dff$marker==mi,]$type), function(ti){
datv <- dff[dff$type==ti, filt.donor]
names(datv) <- paste0(colnames(dff[,filt.donor]), ";", ti)
datv
})
length(ld)
ld[[1]]
ld[[2]]
dim(dff)
dim(df)
df
datv <- dff[dff$type==ti, filt.donor]
nrow(datv)
devtools::document()
df.unadj.1 <- rand_donor_marker_table(ndonor = 10, gindexv = c(1, 2),
sd.offset.pos = 1, sd.offset.neg = 1)
df.unadj.10 <- rand_donor_marker_table(ndonor = 10, gindexv = c(1, 2),
sd.offset.pos = 10, sd.offset.neg = 10)
df.adj.1 <- donoradj_combat(df.unadj.1, return.type = "donordf")
df.adj.10 <- donoradj_combat(df.unadj.10, return.type = "donordf")
df.unadj.1 <- rand_donor_marker_table(ndonor = 10, gindexv = c(1, 2),
sd.offset.pos = 1, sd.offset.neg = 1)
df.unadj.10 <- rand_donor_marker_table(ndonor = 10, gindexv = c(1, 2),
sd.offset.pos = 10, sd.offset.neg = 10)
df.adj.1 <- donoradj_combat(df.unadj.1, return.type = "donordf")
df.adj.10 <- donoradj_combat(df.unadj.10, return.type = "donordf")
ggpca.unadj.1 <- pcaplots_donor(dt = df.unadj.1)$pca.bydonortype$scatterplot.pc1.pc2
ggpca.unadj.10 <- pcaplots_donor(dt = df.unadj.1)$pca.bydonortype$scatterplot.pc1.pc2
ggpca.adj.1 <- pcaplots_donor(dt = df.adj.1)$pca.bydonortype$scatterplot.pc1.pc2
ggpca.adj.10 <- pcaplots_donor(dt = df.adj.10)$pca.bydonortype$scatterplot.pc1.pc2
layout_matrix(c(rep(seq(4), each = 2), rep(5, 1)), nrow = 2)
matrix(c(rep(seq(4), each = 2), rep(5, 1)), nrow = 2)
lm <- matrix(c(1, 2, 1, 2, 3, 4, 3, 4, 5, 5), nrow = 2)
grid.arrange(pc1, pc2, pc3, pc4, pca.leg, layout_matrix = lm)
pca.leg <- get_legend(ggpca.unadj.1)
pc1 <- ggpca.unadj.1 + theme(legend.position = "none")
pc2 <- ggpca.unadj.10 + theme(legend.position = "none")
pc3 <- ggpca.adj.1 + theme(legend.position = "none")
pc4 <- ggpca.adj.10 + theme(legend.position = "none")
lm <- matrix(c(1, 2, 1, 2, 3, 4, 3, 4, 5, 5), nrow = 2)
grid.arrange(pc1, pc2, pc3, pc4, pca.leg, layout_matrix = lm)
lm <- matrix(c(1, 2, 1, 2, 3, 4, 3, 4, 5, 5, 5, 5), nrow = 2)
grid.arrange(pc1, pc2, pc3, pc4, pca.leg, layout_matrix = lm)
pca.leg <- get_legend(ggpca.unadj.1)
pc1 <- ggpca.unadj.1 + theme(legend.position = "none") +
ggtitle("Offset = 1; Unadjusted")
pc2 <- ggpca.unadj.10 + theme(legend.position = "none") +
ggtitle("Offset = 10; Unadjusted")
pc3 <- ggpca.adj.1 + theme(legend.position = "none") +
ggtitle("Offset = 1; Bias-adjusted")
pc4 <- ggpca.adj.10 + theme(legend.position = "none") +
ggtitle("Offst = 10; Bias-adjusted")
lm <- matrix(c(1, 2, 1, 2, 3, 4, 3, 4, 5, 5, 5, 5), nrow = 2)
grid.arrange(pc1, pc2, pc3, pc4, pca.leg, layout_matrix = lm)
lm <- matrix(c(1, 3, 1, 3, 2, 4, 2, 4, 5, 5, 5, 5), nrow = 2)
grid.arrange(pc1, pc2, pc3, pc4, pca.leg, layout_matrix = lm)
ggpca.unadj.1 <- pcaplots_donor(dt = df.unadj.1)$pca.bydonortype$scatterplot.pc1.pc2
ggpca.unadj.10 <- pcaplots_donor(dt = df.unadj.10)$pca.bydonortype$scatterplot.pc1.pc2
ggpca.adj.1 <- pcaplots_donor(dt = df.adj.1)$pca.bydonortype$scatterplot.pc1.pc2
ggpca.adj.10 <- pcaplots_donor(dt = df.adj.10)$pca.bydonortype$scatterplot.pc1.pc2
pca.leg <- get_legend(ggpca.unadj.1)
pc1 <- ggpca.unadj.1 + theme(legend.position = "none") +
ggtitle("Offset = 1; Unadjusted")
pc2 <- ggpca.unadj.10 + theme(legend.position = "none") +
ggtitle("Offset = 10; Unadjusted")
pc3 <- ggpca.adj.1 + theme(legend.position = "none") +
ggtitle("Offset = 1; Bias-adjusted")
pc4 <- ggpca.adj.10 + theme(legend.position = "none") +
ggtitle("Offset = 10; Bias-adjusted")
lm <- matrix(c(1, 3, 1, 3, 2, 4, 2, 4, 5, 5, 5, 5), nrow = 2)
grid.arrange(pc1, pc2, pc3, pc4, pca.leg, layout_matrix = lm)
plot.fname <- "ggpca-composite_donor-offset-1-10_lutesim.jpg"
jpeg(plot.fname, width = 8, height = 5, units = "in", res = 400)
grid.arrange(pc1, pc2, pc3, pc4, pca.leg, layout_matrix = lm)
dev.off()
plot.fname <- "ggpca-composite_donor-offset-1-10_lutesim.jpg"
jpeg(plot.fname, width = 8, height = 5, units = "in", res = 400)
grid.arrange(pc1, pc2, pc3, pc4, pca.leg, layout_matrix = lm)
dev.off()
p1v <- seq(0.6, 0.9, 1e-3)
p1v
offset.levels <- c(1, 10)
loff <- lapply(offset.levels, function(offi){rep(offi, length(p1v))})
dfres <- do.call(rbind, lapply(loff, function(ii){
do.call(rbind, lapply(seq(length(ii)), function(jj){
donor_marker_biasexpt(offsetv = ii[jj], P = c(p1v[jj], 1-p1v[jj]))$dfres
}))
}))
dfp <- dfres
dfp$prop.type <- ifelse(dfp$prop.type=="padj", "Bias-adjusted", "Unadjusted")
dfp$offset <- paste0("offset=",dfp$offset)
dfp$celltype <- ifelse(dfp$type.index==1, "Neuron", "Non-neuron")
ggpt <- ggplot(dfp, aes(x = prop.true, y = prop.pred,
color = celltype, shape = celltype)) +
theme_bw() + geom_point(alpha = 0.5) +
geom_abline(slope = 1, intercept = 0, color = "black")
ggpt + facet_wrap(~prop.type+offset)
head(dfres)
table(dfres$prop.true)
head(dfres)
table(dfres$prop.type)
?donor_marker_biasexpt
dfres <- do.call(rbind, lapply(loff, function(ii){
do.call(rbind, lapply(seq(length(ii)), function(jj){
donor_marker_biasexpt(offsetv = ii[jj], P = c(p1v[jj], 1-p1v[jj]),
donor.adj.method = "combat")$dfres
}))
}))
dfp <- dfres
dfp$prop.type <- ifelse(dfp$prop.type=="padj", "Bias-adjusted", "Unadjusted")
dfp$offset <- paste0("offset=",dfp$offset)
dfp$celltype <- ifelse(dfp$type.index==1, "Neuron", "Non-neuron")
ggpt <- ggplot(dfp, aes(x = prop.true, y = prop.pred,
color = celltype, shape = celltype)) +
theme_bw() + geom_point(alpha = 0.5) +
geom_abline(slope = 1, intercept = 0, color = "black")
ggpt + facet_wrap(~prop.type+offset)
# match results for each expt group/adj type
df.unadj <- dfres[dfres$prop.type == "punadj",]
df.adj <- dfres[dfres$prop.type == "padj",]
df.unadj <- df.unadj[order(df.unadj$prop.true, df.unadj$offset),]
df.adj <- df.adj[order(df.adj$prop.true, df.unadj$offset),]
identical(df.unadj$prop.true, df.adj$prop.true)
# get plot data
dfp <- data.frame(unadj = df.unadj$bias, adj = df.adj$bias,
offset = df.unadj$offset, type = df.unadj$type.index)
dfp$offset = paste0("offset=",dfp$offset)
dfp$celltype <- ifelse(dfp$type==1, "Neuron", "Non-neuron")
# make new plot
ggpt <- ggplot(dfp, aes(x = unadj, y = adj, color = celltype)) + theme_bw() +
geom_point(alpha = 0.5, size = 2) +
geom_abline(slope = 1, intercept = 0, color = "black") +
geom_hline(yintercept = 0, color = "black") +
geom_vline(xintercept = 0, color = "black") +
xlab("Unadjusted") + ylab("Bias-adjusted")
ggpt + facet_wrap(~offset) + ggtitle("Bias by offset amount")
setwd("~/GitHub/deconvo_method-paper/outputs/08_lute-simulations")
plot.fname <- "ggpt-biasamt_donorbias-1-10_lutesim.jpg"
jpeg(plot.fname, width = 6, height = 2.5, units = "in", res = 400)
ggpt + facet_wrap(~offset) + ggtitle("Bias by offset amount"); dev.off()
plot.fname <- "ggpt-bias_donorbias-1-10_lutesim.jpg"
jpeg(plot.fname, width = 6, height = 4, units = "in", res = 400)
ggpt + facet_wrap(~prop.type+offset); dev.off()
dfp <- dfres
dfp$prop.type <- ifelse(dfp$prop.type=="padj", "Bias-adjusted", "Unadjusted")
dfp$offset <- paste0("offset=",dfp$offset)
dfp$celltype <- ifelse(dfp$type.index==1, "Neuron", "Non-neuron")
ggpt <- ggplot(dfp, aes(x = prop.true, y = prop.pred,
color = celltype, shape = celltype)) +
theme_bw() + geom_point(alpha = 0.5) +
geom_abline(slope = 1, intercept = 0, color = "black")
ggpt + facet_wrap(~prop.type+offset)
plot.fname <- "ggpt-bias_donorbias-1-10_lutesim.jpg"
jpeg(plot.fname, width = 6, height = 4, units = "in", res = 400)
ggpt + facet_wrap(~prop.type+offset); dev.off()
plot.fname <- "ggpt-bias_donorbias-1-10_lutesim.jpg"
jpeg(plot.fname, width = 6, height = 4, units = "in", res = 400)
ggpt + facet_wrap(~prop.type+offset); dev.off()
dfp <- dfres
dfp$prop.type <- ifelse(dfp$prop.type=="padj", "Bias-adjusted", "Unadjusted")
dfp$offset <- paste0("offset=",dfp$offset)
dfp$celltype <- ifelse(dfp$type.index==1, "Neuron", "Non-neuron")
ggpt <- ggplot(dfp, aes(x = prop.true, y = prop.pred,
color = celltype, shape = celltype)) +
theme_bw() + geom_point(alpha = 0.5) +
geom_abline(slope = 1, intercept = 0, color = "black")
ggpt + facet_wrap(~prop.type+offset)
plot.fname <- "ggpt-bias_donorbias-1-10_lutesim.jpg"
jpeg(plot.fname, width = 6, height = 4, units = "in", res = 400)
ggpt + facet_wrap(~prop.type+offset); dev.off()
pca.leg <- get_legend(ggpca.unadj.1) +
scale_shape_discrete(labels = c("Neuron", "Non-neuron"))
pc1 <- ggpca.unadj.1 + theme(legend.position = "none") +
ggtitle("Offset = 1; Unadjusted")
pc2 <- ggpca.unadj.10 + theme(legend.position = "none") +
ggtitle("Offset = 10; Unadjusted")
pc3 <- ggpca.adj.1 + theme(legend.position = "none") +
ggtitle("Offset = 1; Bias-adjusted")
pc4 <- ggpca.adj.10 + theme(legend.position = "none") +
ggtitle("Offset = 10; Bias-adjusted")
lm <- matrix(c(1, 3, 1, 3, 2, 4, 2, 4, 5, 5, 5, 5), nrow = 2)
plot.fname <- "ggpca-composite_donor-offset-1-10_lutesim.jpg"
jpeg(plot.fname, width = 8, height = 5, units = "in", res = 400)
grid.arrange(pc1, pc2, pc3, pc4, pca.leg, layout_matrix = lm)
dev.off()
grid.arrange(pc1, pc2, pc3, pc4, pca.leg, layout_matrix = lm)
pca.leg
pca.leg <- get_legend(ggpca.unadj.1) +
scale_shape_discrete(labels = c("Neuron", "Non-neuron"))
pc1 <- ggpca.unadj.1 + theme(legend.position = "none") +
ggtitle("Offset = 1; Unadjusted")
pc2 <- ggpca.unadj.10 + theme(legend.position = "none") +
ggtitle("Offset = 10; Unadjusted")
pc3 <- ggpca.adj.1 + theme(legend.position = "none") +
ggtitle("Offset = 1; Bias-adjusted")
pc4 <- ggpca.adj.10 + theme(legend.position = "none") +
ggtitle("Offset = 10; Bias-adjusted")
lm <- matrix(c(1, 3, 1, 3, 2, 4, 2, 4, 5, 5, 5, 5), nrow = 2)
plot.fname <- "ggpca-composite_donor-offset-1-10_lutesim.jpg"
jpeg(plot.fname, width = 8, height = 5, units = "in", res = 400)
grid.arrange(pc1, pc2, pc3, pc4, pca.leg, layout_matrix = lm)
dev.off()
pca.leg <- get_legend(
ggpca.unadj.1 + scale_shape_discrete(labels = c("Neuron", "Non-neuron"))
)
pc1 <- ggpca.unadj.1 + theme(legend.position = "none") +
ggtitle("Offset = 1; Unadjusted")
pc2 <- ggpca.unadj.10 + theme(legend.position = "none") +
ggtitle("Offset = 10; Unadjusted")
pc3 <- ggpca.adj.1 + theme(legend.position = "none") +
ggtitle("Offset = 1; Bias-adjusted")
pc4 <- ggpca.adj.10 + theme(legend.position = "none") +
ggtitle("Offset = 10; Bias-adjusted")
lm <- matrix(c(1, 3, 1, 3, 2, 4, 2, 4, 5, 5, 5, 5), nrow = 2)
plot.fname <- "ggpca-composite_donor-offset-1-10_lutesim.jpg"
jpeg(plot.fname, width = 8, height = 5, units = "in", res = 400)
grid.arrange(pc1, pc2, pc3, pc4, pca.leg, layout_matrix = lm)
dev.off()
pc1 <- ggpca.unadj.1 + scale_shape_discrete(labels = c("Neuron", "Non-neuron"))
pca.leg <- get_legend(pc1)
pc1 <- ggpca.unadj.1 + theme(legend.position = "none") +
ggtitle("Offset = 1; Unadjusted")
pc2 <- ggpca.unadj.10 + theme(legend.position = "none") +
ggtitle("Offset = 10; Unadjusted")
pc3 <- ggpca.adj.1 + theme(legend.position = "none") +
ggtitle("Offset = 1; Bias-adjusted")
pc4 <- ggpca.adj.10 + theme(legend.position = "none") +
ggtitle("Offset = 10; Bias-adjusted")
lm <- matrix(c(1, 3, 1, 3, 2, 4, 2, 4, 5, 5, 5, 5), nrow = 2)
plot.fname <- "ggpca-composite_donor-offset-1-10_lutesim.jpg"
jpeg(plot.fname, width = 8, height = 5, units = "in", res = 400)
grid.arrange(pc1, pc2, pc3, pc4, pca.leg, layout_matrix = lm)
dev.off()
ggpca.unadj.1
ggpca.unadj.1 + scale_shape_discrete(labels = c("Neuron", "Non-neuron"))
pc1 <- ggpca.unadj.1 + scale_shape_discrete(name = "celltype",
labels = c("Neuron", "Non-neuron"))
pca.leg <- get_legend(pc1)
pc1 <- ggpca.unadj.1 + theme(legend.position = "none") +
ggtitle("Offset = 1; Unadjusted")
pc2 <- ggpca.unadj.10 + theme(legend.position = "none") +
ggtitle("Offset = 10; Unadjusted")
pc3 <- ggpca.adj.1 + theme(legend.position = "none") +
ggtitle("Offset = 1; Bias-adjusted")
pc4 <- ggpca.adj.10 + theme(legend.position = "none") +
ggtitle("Offset = 10; Bias-adjusted")
lm <- matrix(c(1, 3, 1, 3, 2, 4, 2, 4, 5, 5, 5, 5), nrow = 2)
plot.fname <- "ggpca-composite_donor-offset-1-10_lutesim.jpg"
jpeg(plot.fname, width = 8, height = 5, units = "in", res = 400)
grid.arrange(pc1, pc2, pc3, pc4, pca.leg, layout_matrix = lm)
dev.off()
grid.arrange(pc1, pc2, pc3, pc4, pca.leg, layout_matrix = lm)
# match results for each expt group/adj type
df.unadj <- dfres[dfres$prop.type == "punadj",]
df.adj <- dfres[dfres$prop.type == "padj",]
df.unadj <- df.unadj[order(df.unadj$prop.true, df.unadj$offset),]
df.adj <- df.adj[order(df.adj$prop.true, df.unadj$offset),]
identical(df.unadj$prop.true, df.adj$prop.true)
# get plot data
dfp <- data.frame(unadj = df.unadj$bias, adj = df.adj$bias,
offset = df.unadj$offset, type = df.unadj$type.index)
dfp$offset = paste0("offset=",dfp$offset)
dfp$celltype <- ifelse(dfp$type==1, "Neuron", "Non-neuron")
# make new plot
ggpt <- ggplot(dfp, aes(x = unadj, y = adj, color = celltype)) + theme_bw() +
geom_point(alpha = 0.5, size = 2) +
geom_abline(slope = 1, intercept = 0, color = "black") +
geom_hline(yintercept = 0, color = "black") +
geom_vline(xintercept = 0, color = "black") +
xlab("Unadjusted") + ylab("Bias-adjusted")
ggpt + facet_wrap(~offset) + ggtitle("Bias by offset amount")
plot.fname <- "ggpt-biasamt_donorbias-1-10_lutesim.jpg"
jpeg(plot.fname, width = 6, height = 2.5, units = "in", res = 400)
ggpt + facet_wrap(~offset) + ggtitle("Deconvolution bias"); dev.off()
plot.fname <- "ggpt-biasamt_donorbias-1-10_lutesim.jpg"
jpeg(plot.fname, width = 6, height = 2.5, units = "in", res = 400)
ggpt + facet_wrap(~offset) + ggtitle("Deconvolution bias") + ylab("Donor-adjusted")
dev.off()
ggpt <- ggplot(dfp, aes(x = unadj, y = adj, color = celltype,
shape = celltype)) + theme_bw() +
geom_point(alpha = 0.5, size = 2) +
scale_color_manual(values = c("blue", "red")) +
geom_abline(slope = 1, intercept = 0, color = "black") +
geom_hline(yintercept = 0, color = "black") +
geom_vline(xintercept = 0, color = "black") +
xlab("Unadjusted") + ylab("Bias-adjusted")
ggpt + facet_wrap(~offset) + ggtitle("Bias by offset amount")
plot.fname <- "ggpt-biasamt_donorbias-1-10_lutesim.jpg"
jpeg(plot.fname, width = 4, height = 2, units = "in", res = 400)
ggpt + facet_wrap(~offset) + ggtitle("Deconvolution bias") + ylab("Donor-adjusted")
dev.off()
plot.fname <- "ggpt-biasamt_donorbias-1-10_lutesim.jpg"
jpeg(plot.fname, width = 5, height = 2.1, units = "in", res = 400)
ggpt + facet_wrap(~offset) + ggtitle("Deconvolution bias") + ylab("Donor-adjusted")
dev.off()
plot.fname <- "ggpt-biasamt_donorbias-1-10_lutesim.jpg"
jpeg(plot.fname, width = 5, height = 2.1, units = "in", res = 400)
ggpt + facet_wrap(~offset) + ggtitle("Deconvolution bias") +
ylab("Donor-adjusted") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
dev.off()
plot.fname <- "ggpt-biasamt_donorbias-1-10_lutesim.jpg"
jpeg(plot.fname, width = 4, height = 2.1, units = "in", res = 400)
ggpt + facet_wrap(~offset) + ggtitle("Deconvolution bias") +
ylab("Donor-adjusted") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
dev.off()
plot.fname <- "ggpt-biasamt_donorbias-1-10_lutesim.jpg"
jpeg(plot.fname, width = 4.5, height = 2.1, units = "in", res = 400)
ggpt + facet_wrap(~offset) + ggtitle("Deconvolution bias") +
ylab("Donor-adjusted") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
dev.off()
plot.fname <- "ggpt-biasamt_donorbias-1-10_lutesim.jpg"
jpeg(plot.fname, width = 4.5, height = 2.2, units = "in", res = 400)
ggpt + facet_wrap(~offset) + ggtitle("Deconvolution bias") +
ylab("Donor-adjusted") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
dev.off()
