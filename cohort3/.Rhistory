value1
value2
sum(as.numeric(value1), as.numeric(value2))
listComponents <- strsplit(value1, "")
listComponents <- strsplit(value1, "")
listComponents
value1=20
listComponents
listComponents <- strsplit(value1, "")
listComponents <- strsplit(inputObject, "")
inputObject = 12
listComponents <- strsplit(inputObject, "")
inputObject
inputObject <- as.integer(12)
inputObject
strsplit(inputObject, "")
listComponents <- strsplit(as.character(inputObject), "")
listComponents
listComponents[1]
listComponents <- strsplit(as.character(inputObject), "")
value1 <- as.numeric(listComponents[[1]]))
listComponents[[1]]
listComponents[[1]][1]
as.numeric(listComponents[[1]][1]))
as.numeric(listComponents[[1]][1])
listComponents <- strsplit(as.character(inputObject), "")
value1 <- as.numeric(listComponents[[1]][1])
value1
listComponents
listComponents[[1]][1]
listComponents[[1]][2]
listComponents <- strsplit(as.character(inputObject), "")
value1 <- as.numeric(listComponents[[1]][1])
value2 <- as.numeric(listComponents[[1]][2])
value1
value2
value1+value2
value1+value2
setwd("C:/Users/User/Documents/GitHub/deconvo_commentary-paper")
library(ggplot2)
library(dplyr)
library(scales)
#----------
# load data
#----------
csv.name <- "table-s1_tissue-references.csv"
csv.path <- file.path("deconvo_commentary-paper", "data", csv.name)
csv <- read.csv(csv.path)
setwd("C:/Users/User/Documents/GitHub")
library(ggplot2)
library(dplyr)
library(scales)
#----------
# load data
#----------
csv.name <- "table-s1_tissue-references.csv"
csv.path <- file.path("deconvo_commentary-paper", "data", csv.name)
csv <- read.csv(csv.path)
# year
csv$year <- gsub(".* ", "", csv$citation)
# set all tissues
csv$tissues <- paste0(csv$tissues, ";all_tissues")
# format tissues
unique.tissues <- strsplit(csv$tissues, ";") %>% unlist() %>% unique()
tx.filter <- c("")
unique.tissues <- unique.tissues[!unique.tissues %in% tx.filter]
tx.counts.list <- lapply(unique.tissues, function(tx){
nrow(csv[grepl(paste0("(^|;)", tx, "(;|$)"), csv[,3]),])
})
tx.counts.table <- do.call(rbind, tx.counts.list) %>% as.data.frame()
colnames(tx.counts.table) <- "references"
tx.counts.table$tx <- unique.tissues
# get plot data
plot.data <- tx.counts.table
plot.data$references <- as.numeric(plot.data$references)
ref.order <- order(plot.data$references) %>% rev()
ref.levels <- plot.data$tx[ref.order]
plot.data$tx <- factor(plot.data$tx, levels = ref.levels)
plot.data <- plot.data[seq(15),]
jpeg("lineplot_cumulative-refs-by-tissue.jpg", width = 5, height = 2.5,
units = "in", res = 600)
ggplot(df.cumul, aes(x = year, y = references,
color = "gray", shape = Tissue, lty = Tissue)) + theme_bw() +
geom_point(size = 2) + geom_line(linewidth = 0.5) +
scale_x_continuous(breaks=pretty_breaks()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Year") + ylab("Cumulative literature\nreferences")
seq.year <- seq(min(csv$year), max(csv$year), 1)
ref.all.vector <- c()
df.cumul <- lapply(seq.year, function(year.iter){
year.filter <- csv$year <= year.iter
csvf <- csv[year.filter,]
tx.counts.list <- lapply(unique.tissues, function(tx){
tx.filter <- grepl(paste0("(^|;)", tx, "(;|$)"), csvf[,3])
csvf[tx.filter,] %>% nrow()
})
tx.counts.table <- do.call(rbind, tx.counts.list) %>% as.data.frame()
colnames(tx.counts.table) <- "references"
tx.counts.table$tx <- unique.tissues
tx.counts.table$year <- year.iter
tx.counts.table
})
df.cumul <- do.call(rbind, df.cumul) %>% as.data.frame()
tx.filter <- c("all_tissues", "tumor", "brain", "immune_cell", "blood", "pancreas")
df.cumul <- df.cumul[df.cumul$tx %in% tx.filter,]
# convert all
df.cumul$year <- as.integer(df.cumul$year)
df.cumul$Tissue <- df.cumul$tx
# save new plot
jpeg("lineplot_cumulative-refs-by-tissue.jpg", width = 5, height = 2.5,
units = "in", res = 600)
ggplot(df.cumul, aes(x = year, y = references,
color = "gray", shape = Tissue, lty = Tissue)) + theme_bw() +
geom_point(size = 2) + geom_line(linewidth = 0.5) +
scale_x_continuous(breaks=pretty_breaks()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Year") + ylab("Cumulative literature\nreferences")
dev.off()
ggplot(df.cumul, aes(x = year, y = references,
color = "gray", shape = Tissue, lty = Tissue)) + theme_bw() +
geom_point(size = 2) + geom_line(linewidth = 0.5) +
scale_x_continuous(breaks=pretty_breaks()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Year") + ylab("Cumulative literature\nreferences")
df.cumul
ggplot(df.cumul,
aes(x = year, y = references, color = "gray",
shape = Tissue, lty = Tissue)) + theme_bw() +
geom_point(size = 2) + geom_line(linewidth = 0.5) +
scale_x_continuous(breaks=pretty_breaks()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Year") + ylab("Cumulative literature\nreferences")
dev.off()
dev.off()
dev.off()
ggplot(df.cumul,
aes(x = year, y = references, color = "gray",
shape = Tissue, lty = Tissue)) + theme_bw() +
geom_point(size = 2) + geom_line(linewidth = 0.5) +
scale_x_continuous(breaks=pretty_breaks()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Year") + ylab("Cumulative literature\nreferences")
ggplot(df.cumul,
aes(
x = year, y = references, shape = Tissue, lty = Tissue)) + theme_bw() +
geom_point(size = 2) + geom_line(linewidth = 0.5) +
scale_x_continuous(breaks=pretty_breaks()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Year") + ylab("Cumulative literature\nreferences")
jpeg("lineplot_cumulative-refs-by-tissue.jpg", width = 5, height = 2.5,
units = "in", res = 600)
ggplot(df.cumul,
aes(
x = year, y = references, shape = Tissue, lty = Tissue)) + theme_bw() +
geom_point(size = 2) + geom_line(linewidth = 0.5) +
scale_x_continuous(breaks=pretty_breaks()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Year") + ylab("Cumulative literature\nreferences")
dev.off()
setwd("C:/Users/User/Documents/GitHub/deconvo_method-paper/cohort3")
knitr::opts_chunk$set(echo = TRUE)
setwd("..")
setwd("..")
load("./env/05_summaries/01_run_script.RData")
source("./source/00_cell_type_management.R")
y <- experimentData$y.table
z <- experimentData$z
ptrue <- experimentData$p.true
dim(y)
colnames(y)
colnames(y)[grepl("PBMC", colnames(y))]
length(colnames(y)[grepl("PBMC", colnames(y))])
df <- data.frame(
label = c("y.table", "z", "p.true"),
filename =
c("GSE107011_Processed_data_TPM.txt",
"abisseq_rnaseq_cell_types_references_k17.csv",
"flow_cytometry_true_cell_type_proportions_s13.csv"),
deconvoLabel =
c("Y", "z", "p.true"),
varName =
c("experimentData$y.table", "experimentData$z"),
description =
c("S13 RNA-seq expression TPM matrix, from GEO",
"ABIS-seq RNA-seq cell type reference, from S4.",
"S13 true proportions from flow cytometry"),
s13_samples = c(13, 0, 13)
)
df <- data.frame(
label = c("y.table", "z", "p.true"),
filename =
c("GSE107011_Processed_data_TPM.txt",
"abisseq_rnaseq_cell_types_references_k17.csv",
"flow_cytometry_true_cell_type_proportions_s13.csv",
"experimentData$p.true"),
deconvoLabel =
c("Y", "z", "p.true"),
varName =
c("experimentData$y.table", "experimentData$z"),
description =
c("S13 RNA-seq expression TPM matrix, from GEO",
"ABIS-seq RNA-seq cell type reference, from S4.",
"S13 true proportions from flow cytometry"),
s13_samples = c(13, 0, 13)
)
df <- data.frame(
label = c("y.table", "z", "p.true"),
filename =
c("GSE107011_Processed_data_TPM.txt",
"abisseq_rnaseq_cell_types_references_k17.csv",
"flow_cytometry_true_cell_type_proportions_s13.csv"),
deconvoLabel =
c("Y", "z", "p.true"),
varName =
c("experimentData$y.table", "experimentData$z", "experimentData$p.true"),
description =
c("S13 RNA-seq expression TPM matrix, from GEO",
"ABIS-seq RNA-seq cell type reference, from S4.",
"S13 true proportions from flow cytometry"),
s13_samples = c(13, 0, 13)
)
knitr::kable(df)
head(ptrue)
rownames(ptrue)
dim(ptrue)
head(colnames(y))
y.s13 <- y[,grepl("PBMC", colnames(y))]
y.s13.sampleid <- gsub(".*_", "", colnames(y.s13))
y.s13.sampleid
y.s13.sampleid <- gsub("_.*", "", colnames(y.s13))
y.s13.sampleid
colnames(y.s13)
head(p)
pPath <- "./data/monaco_et_al_2019/manuscript/flow_cytometry_true_cell_type_proportions_s13.csv"
p <- read.csv(path)
path = pPath
p <- read.csv(path)
dim(p)
rownames(p) <- p[,1]
p <- p[,seq(2,ncol(p))]
colnames(p)
colnames(z)
intersect(colnames(p), colnames(z))
zFilter = z
p <- read.csv(path)
# process
# set sample labels as row names
rownames(p) <- p[,1]
p <- p[,seq(2,ncol(p))]
# subset cell types
p <- p[,colnames(p) %in% colnames(zFilter)]
# convert fractions
sampleIdVector <- rownames(p)
cellTypeVector <- colnames(p)
p <- apply(p, 1, function(ri){ri/sum(ri)}) |> as.data.frame()
p
processP <- function(path, zFilter){
# processP
# Get proportions from file.
#
p <- read.csv(path)
# process
# set sample labels as row names
rownames(p) <- p[,1]
p <- p[,seq(2,ncol(p))]
# subset cell types
p <- p[,colnames(p) %in% colnames(zFilter)]
# convert fractions
sampleIdVector <- rownames(p)
cellTypeVector <- colnames(p)
p <- apply(p, 1, function(ri){ri/sum(ri)}) |> as.data.frame()
colnames(p) <- cellTypeVector
rownames(p) <- sampleIdVector
return(p)
}
#!/usr/bin/env R
# Author: Sean Maden
#
# Summarize dataset elements.
#
# * "GSE107011_Processed_data_TPM.txt", GEO record.
#
#
#
#
libv <- c("SummarizedExperiment", "biomaRt")
sapply(libv, library, character.only = TRUE)
source("./source/00_read_experiment_data.R")
experimentData <- getExperimentData()
gc()
gc()
gc()
gc()
#!/usr/bin/env R
# Author: Sean Maden
#
# Summarize dataset elements.
#
# * "GSE107011_Processed_data_TPM.txt", GEO record.
#
#
#
#
libv <- c("SummarizedExperiment", "biomaRt")
sapply(libv, library, character.only = TRUE)
source("./source/00_read_experiment_data.R")
experimentData <- getExperimentData()
# get Y
yPath <- "./data/monaco_et_al_2019/geo/GSE107011_Processed_data_TPM.txt"
yList <- processY(yPath)
# get Z
zPath <- "./data/monaco_et_al_2019/manuscript/abisseq_rnaseq_cell_types_references_k17.csv"
zref <- processZ(zPath)
# get P
pPath <- "./data/monaco_et_al_2019/manuscript/flow_cytometry_true_cell_type_proportions_s13.csv"
ptrue <- processP(pPath, zref)
path = pPath
p <- read.csv(path)
# process
# set sample labels as row names
rownames(p) <- p[,1]
p <- p[,seq(2,ncol(p))]
# subset cell types
p <- p[,colnames(p) %in% colnames(zFilter)]
zFilter = z
zFilter = zref
p <- read.csv(path)
# process
# set sample labels as row names
rownames(p) <- p[,1]
p <- p[,seq(2,ncol(p))]
# subset cell types
p <- p[,colnames(p) %in% colnames(zFilter)]
# convert fractions
sampleIdVector <- rownames(p)
cellTypeVector <- colnames(p)
p <- apply(p, 1, function(ri){ri/sum(ri)}) |> as.data.frame()
colnames(p) <- cellTypeVector
cellTypeVector
gc()
gc()
gc()
gc()
#!/usr/bin/env R
# Author: Sean Maden
#
# Summarize dataset elements.
#
# * "GSE107011_Processed_data_TPM.txt", GEO record.
#
#
#
#
libv <- c("SummarizedExperiment", "biomaRt")
sapply(libv, library, character.only = TRUE)
source("./source/00_read_experiment_data.R")
experimentData <- getExperimentData()
save.image("./env/05_summaries/01_run_script.RData")
y <- experimentData$y.table
z <- experimentData$z
ptrue <- experimentData$p.true
ptrue
dim(zre)
dim(zref)
dim(z)
dim)y
dim(y)
dim(ptrue)
p <- read.csv(path)
gc()
gc()
knitr::opts_chunk$set(echo = TRUE)
setwd("..")
setwd("..")
load("./env/05_summaries/01_run_script.RData")
source("./source/00_cell_type_management.R")
y <- experimentData$y.table
z <- experimentData$z
ptrue <- experimentData$p.true
df <- data.frame(
label = c("y.table", "z", "p.true"),
filename =
c("GSE107011_Processed_data_TPM.txt",
"abisseq_rnaseq_cell_types_references_k17.csv",
"flow_cytometry_true_cell_type_proportions_s13.csv"),
deconvoLabel =
c("Y", "z", "p.true"),
varName =
c("experimentData$y.table", "experimentData$z", "experimentData$p.true"),
description =
c("S13 RNA-seq expression TPM matrix, from GEO",
"ABIS-seq RNA-seq cell type reference, from S4.",
"S13 true proportions from flow cytometry"),
s13_samples = c(13, 0, 12)
)
knitr::kable(df)
rownames(ptrue)
colnames(ptrue)
data <- z
cellTypes <- colnames(data)
cellTypes
length(unique(cellTypes))
data <- ptrue
cellTypes <- colnames(ptrue)
cellTypes
length(unique(cellTypes))
data <- z
cellTypes <- colnames(data)
cellTypes
length(unique(cellTypes))
zCellTypes <- colnames(z)
zSummaries <- cellCategorySummaries(zCellTypes)
zSummaries
pCellTypes <- colnames(ptrue)
pSummaries <- cellCategorySummaries(pCellTypes)
pSummaries
yCellTypes <- unique(experimentData$y.se)
ySummaries <- cellCategorySummaries(yCellTypes)
unique(experimentData$y.se)
unique(colnames(experimentData$y.se))
yCellTypes <- unique(colnames(experimentData$y.se))
ySummaries <- cellCategorySummaries(yCellTypes)
ySummaries
allSummaries <- rbind(
zSummaries, rbind(pSummaries, ySummaries)
) |> as.data.frame()
allSummaries$data <- c(
rep("Z", 3), rep("p", 3), rep("y", 3)
)
knitr::kable(allSummaries, align = "c")
colData(experimentData$y.se)
knitr::opts_chunk$set(echo = TRUE)
setwd("..")
setwd("..")
load("./env/05_summaries/01_run_script.RData")
# get experiment data
ptrue <- experimentData$p.true
# read original csv
path <- "./data/monaco_et_al_2019/manuscript/flow_cytometry_true_cell_type_proportions_s13.csv"
pcsv <- read.csv(path)
rownames(pcsv) <- pcsv[,1]
pcsv <- pcsv[,seq(2,ncol(pcsv))]
pcsv
dim(pcsv)
pcsv <- pcsv[,colnames(pcsv) %in% colnames(ptrue)] # filter overlapping
dim(pcsv)
knitr::opts_chunk$set(echo = TRUE)
setwd("..")
setwd("..")
load("./env/05_summaries/01_run_script.RData")
# get experiment data
ptrue <- experimentData$p.true
# read original csv
path <- "./data/monaco_et_al_2019/manuscript/flow_cytometry_true_cell_type_proportions_s13.csv"
pcsv <- read.csv(path)
rownames(pcsv) <- pcsv[,1]
pcsv <- pcsv[,seq(2,ncol(pcsv))]
pcsv <- t(pcsv) |> as.data.frame(pcsv)
pcsv <- pcsv[,colnames(pcsv) %in% colnames(ptrue)] # filter overlapping
summary(pcsv)
summary(ptrue)
colSums(pcsv)
dfPlot <- data.frame(
sample.id = names(colSumsVector), sum = as.numeric(colSumsVector))
colSumsVector <- colSums(pcsv)
colSumsVector
dfPlot <- data.frame(
sample.id = names(colSumsVector), sum = as.numeric(colSumsVector))
dfPlot$sample.id <- factor(dfPlot$sample.id, levels = dfPlot$sample.id[order(dfPlot$sum)])
plot1 <- ggplot(dfPlot, aes(x = sum)) + geom_hist()
dfPlot
libv <- c("ggplot2")
sapply(libv, library, character.only = TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd("..")
setwd("..")
load("./env/05_summaries/01_run_script.RData")
# get experiment data
ptrue <- experimentData$p.true
# read original csv
path <- "./data/monaco_et_al_2019/manuscript/flow_cytometry_true_cell_type_proportions_s13.csv"
pcsv <- read.csv(path)
rownames(pcsv) <- pcsv[,1]
pcsv <- pcsv[,seq(2,ncol(pcsv))]
pcsv <- t(pcsv) |> as.data.frame(pcsv)
pcsv <- pcsv[,colnames(pcsv) %in% colnames(ptrue)] # filter overlapping
summary(pcsv)
summary(ptrue)
colSumsVector <- colSums(pcsv)
colSumsVector
dfPlot <- data.frame(
sample.id = names(colSumsVector), sum = as.numeric(colSumsVector))
dfPlot$sample.id <- factor(dfPlot$sample.id, levels = dfPlot$sample.id[order(dfPlot$sum)])
plot1 <- ggplot(dfPlot, aes(x = sum)) + geom_hist()
dfPlot <- data.frame(
sample.id = names(colSumsVector), sum = as.numeric(colSumsVector))
dfPlot$sample.id <- factor(dfPlot$sample.id, levels = dfPlot$sample.id[order(dfPlot$sum)])
plot1 <- ggplot(dfPlot, aes(x = sum)) + geom_histogram()
plot2 <- ggplot(dfPlot, aes(x = sample.id, y = sum)) + geom_bar(stat = "identity")
plot1
plot2
dfPlot <- data.frame(
sample.id = names(colSumsVector), sum = as.numeric(colSumsVector))
dfPlot$sample.id <- factor(dfPlot$sample.id, levels = dfPlot$sample.id[order(dfPlot$sum)])
plot1 <- ggplot(dfPlot, aes(x = sum)) + geom_histogram() +
ylab("Sample count") + xlab("Sum of signals")
plot2 <- ggplot(dfPlot, aes(x = sample.id, y = sum)) +
geom_bar(stat = "identity") + ylab("Sum of signals")
plot1
plot2
dim(bulkExpression)
dim(experimentData$y.table)
