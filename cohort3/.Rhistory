plot()
setwd("C:/Users/User/Documents/GitHub/deconvo_method-paper/cohort3")
libv <- c("lute", "ggplot2", "gridExtra", "reshape2", "ggforce")
sapply(libv, library, character.only = TRUE)
setwd("..")
setwd("..")
load("./env/08_improvement/01_run_script.RData")
load("./env/08_improvement/02_simulation_script.RData")
knitr::opts_chunk$set(echo = FALSE)
dfPlot <- dfPseudobulkA
plot1 <- ggplot(dfPseudobulkA, aes(x = true.plasmablasts, y = Plasmablasts)) +
geom_point(size = 4, alpha = 0.5) + geom_abline(slope = 1, intercept = 0) +
facet_wrap(~condition) + xlim(0, 0.15) + ylim(0, 0.15) +
ylab("Predicted") + xlab("True")
plot2 <- ggplot(dfPseudobulkA, aes(x = true.plasmablasts, y = Plasmablasts)) +
geom_point(size = 4, alpha = 0.5) + geom_abline(slope = 1, intercept = 0) +
facet_wrap(~condition) + xlim(0, 0.5) + ylim(0, 0.5) +
ylab("Predicted") + xlab("True")
plot3 <- ggplot(dfPseudobulkA, aes(x = true.plasmablasts, y = Plasmablasts)) +
geom_point(size = 4, alpha = 0.5) + geom_abline(slope = 1, intercept = 0) +
facet_wrap(~condition) + xlim(0, 1) + ylim(0, 1) +
ylab("Predicted") + xlab("True")
plot1
plot2
plot3
dfPlot <- dfPseudobulkA
plot1 <- ggplot(dfPseudobulkA, aes(x = true.plasmablasts, y = Plasmablasts)) +
geom_point(size = 4, alpha = 0.5) + geom_abline(slope = 1, intercept = 0) +
facet_wrap(~condition) + xlim(0, 0.15) + ylim(0, 0.15) +
ylab("Predicted") + xlab("True")
plot2 <- ggplot(dfPseudobulkA, aes(x = true.plasmablasts, y = Plasmablasts)) +
geom_point(size = 4, alpha = 0.5) + geom_abline(slope = 1, intercept = 0) +
facet_wrap(~condition) + xlim(0, 0.5) + ylim(0, 0.5) +
ylab("Predicted") + xlab("True")
plot3 <- ggplot(dfPseudobulkA, aes(x = true.plasmablasts, y = Plasmablasts)) +
geom_point(size = 4, alpha = 0.5) + geom_abline(slope = 1, intercept = 0) +
facet_wrap(~condition) + xlim(0, 1) + ylim(0, 1) +
ylab("Predicted") + xlab("True")
plot1
plot2
plot3
# multiplot
textSize <- 30
plot1 <-
plot1 + xlab("") + ylab("") + ggtitle("Zoom1") +
theme(text = element_text(size=textSize),
axis.text.x = element_text(angle=45,hjust=1))
plot2 <-
plot2 + xlab("") + ylab("Predicted") + ggtitle("Zoom2") +
theme(text = element_text(size=textSize),
axis.text.x = element_text(angle=45,hjust=1))
plot3 <-
plot3 + xlab("") + ylab("True") + ggtitle("Zoom3") +
theme(text = element_text(size=textSize),
axis.text.x = element_text(angle=45,hjust=1))
grid.arrange(plot1, plot2, plot3, ncol = 1, top = "Plasmablasts")
jpeg("figures/04_transform/supplemental_figure2b.jpg",
width = 4, height = 2.5, units = "in", res = 400)
ggplot(dfPlot, aes(x = true.plasmablasts, y = Plasmablasts)) +
geom_point(size = 4, alpha = 0.5) + theme_bw() +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(~condition2) + xlim(0, 1) + ylim(0, 1) +
ylab("Predicted") + xlab("Known") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
dfPlot <- dfPseudobulkA
dfPlot$condition2 <-
ifelse(dfPlot$condition=="scaled", "withscale", "noscale")
dfPlot$condition2 <-
factor(dfPlot$condition2, levels = c("noscale", "withscale"))
rlang::last_trace()
jpeg("figures/04_transform/supplemental_figure2b.jpg",
width = 4, height = 2.5, units = "in", res = 400)
ggplot(dfPlot, aes(x = true.plasmablasts, y = Plasmablasts)) +
geom_point(size = 4, alpha = 0.5) + theme_bw() +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(~condition2) + xlim(0, 1) + ylim(0, 1) +
ylab("Predicted") + xlab("Known") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
dev.off()
jpeg("figures/04_transform/supplemental_figure2b.jpg",
width = 4, height = 2.5, units = "in", res = 400)
ggplot(dfPlot, aes(x = true.plasmablasts, y = Plasmablasts)) +
geom_point(size = 4, alpha = 0.5) + theme_bw() +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(~condition2) + xlim(0, 1) + ylim(0, 1) +
ylab("Predicted") + xlab("Known") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
dev.off()
dev.off()
dev.off()
dev.off()
jpeg("figures/04_transform/supplemental_figure2b.jpg",
width = 4, height = 2.5, units = "in", res = 400)
ggplot(dfPlot, aes(x = true.plasmablasts, y = Plasmablasts)) +
geom_point(size = 4, alpha = 0.5) + theme_bw() +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(~condition2) + xlim(0, 1) + ylim(0, 1) +
ylab("Predicted") + xlab("Known") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
dev.off()
dev.off()
