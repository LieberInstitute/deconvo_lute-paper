matrix(nrow=1) |>
cbind(newSummaryTablePre)
# out
newSummaryTableOut <- newSummaryTablePre[,c(4,5,1,2,3)]
colnames(newSummaryTableOut)[seq(3,5)] <- unique(
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos)[
order(
unique(
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))]
newSummaryTableOut
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos |>
list() |>
sapply(function(item){table(item)}) |>
as.data.frame() |> sapply(function(value){value/numDonors.snRNASeq}) |>
as.vector()
unique(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos)[
order(unique(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))]
table(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos)
names(table(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))
names(table(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))
fractRegionByDonor.snRNAseq <-
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos |>
list() |>
sapply(function(item){table(item)}) |>
as.data.frame() |> sapply(function(value){value/numDonors.snRNASeq}) |>
as.vector()
fractRegionByDonor.snRNAseq
unique(
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos)[
order(unique(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))]
namesFractRegion <- unique(
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos)[
order(unique(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))]
namesFractRegion
fractRegionByDonor.snRNAseq <-
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos |>
list() |>
sapply(function(item){table(item)}) |>
as.data.frame() |> sapply(function(value){value/numDonors.snRNASeq}) |>
as.vector()
fractRegionByDonor.snRNAseq
unique(
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos)[
order(unique(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))]
paste0("Fract", namesFractRegion)
?upper
namesFractRegion <- unique(
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos)[
order(unique(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))]
namesFractRegion <- paste0(namesFractRegion, "Fraction")
namesFractRegion
numDonors.snRNASeq <- unique(snRNASeq$BrNum) |> length()
numSamples.snRNASeq <- unique(snRNASeq$SAMPLE_ID) |> length()
# fract region
# CHECK/CONVINCE
# as.data.frame(table(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))[,1]
#
fractRegionByDonor.snRNAseq <-
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos |>
list() |>
sapply(function(item){table(item)}) |>
as.data.frame() |> sapply(function(value){value/numDonors.snRNASeq}) |>
as.vector()
# names fract region
# CHECK/CONVINCE
# names(table(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))==unique(
# snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos)[
#  order(unique(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))]
#
#
namesFractRegion <- unique(
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos)[
order(unique(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))]
namesFractRegion <- paste0(namesFractRegion, "Fraction")
namesFractRegion
newSummaryTablePre <- data.frame(
numDonors.snRNASeq,
numSamples.snRNASeq
)
newSummaryTablePre <- fractRegionByDonor.snRNAseq |>
matrix(nrow=1) |>
cbind(newSummaryTablePre)
# out
newSummaryTableOut <- newSummaryTablePre[,c(4,5,1,2,3)]
colnames(newSummaryTableOut)[seq(3,5)] <- unique(
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos)[
order(
unique(
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))]
newSummaryTableOut
colnames(newSummaryTableOut)[seq(3,5)] <- fractRegionByDonor.snRNAseq
newSummaryTableOut
colnames(newSummaryTableOut)[seq(3,5)] <- namesFractRegion
newSummaryTableOut
newSummaryTableOut
nuSummaryTable <- function(snRNASeq){
numDonors.snRNASeq <- unique(snRNASeq$BrNum) |> length()
numSamples.snRNASeq <- unique(snRNASeq$SAMPLE_ID) |> length()
# fract region
# CHECK/CONVINCE
# as.data.frame(table(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))[,1]
#
fractRegionByDonor.snRNAseq <-
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos |>
list() |>
sapply(function(item){table(item)}) |>
as.data.frame() |> sapply(function(value){value/numDonors.snRNASeq}) |>
as.vector()
# names fract region
# CHECK/CONVINCE
# names(table(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))==unique(
# snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos)[
#  order(unique(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))]
#
#
namesFractRegion <- unique(
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos)[
order(unique(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))]
namesFractRegion <- paste0(namesFractRegion, "Fraction")
# fractRegionByDonor.snRNAseq
newSummaryTablePre <- data.frame(
numDonors.snRNASeq,
numSamples.snRNASeq
)
newSummaryTablePre <- fractRegionByDonor.snRNAseq |>
matrix(nrow=1) |>
cbind(newSummaryTablePre)
# out
newSummaryTableOut <- newSummaryTablePre[,c(4,5,1,2,3)]
#colnames(newSummaryTableOut)[seq(3,5)] <- unique(
#  snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos)[
#    order(
#      unique(
#        snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))]
colnames(newSummaryTableOut)[seq(3,5)] <- namesFractRegion
newSummaryTableOut
return(newSummaryTableOut)
}
nuSummaryTable(snRNASeq)
nuSummaryTable2 <- function(snRNASeq){
# donors map samples
numSamples.snRNASeq <- unique(snRNASeq$BrNum) |> length()
# fract region
# CHECK/CONVINCE
# as.data.frame(table(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))[,1]
#
fractRegionByDonor.snRNAseq <-
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos |>
list() |>
sapply(function(item){table(item)}) |>
as.data.frame() |> sapply(function(value){value/numDonors.snRNASeq}) |>
as.vector()
# names fract region
# CHECK/CONVINCE
# names(table(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))==unique(
# snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos)[
#  order(unique(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))]
#
#
namesFractRegion <- unique(
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos)[
order(unique(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))]
namesFractRegion <- paste0(namesFractRegion, "Fraction")
# fractRegionByDonor.snRNAseq
newSummaryTablePre <- data.frame(
numDonors.snRNASeq,
numSamples.snRNASeq
)
newSummaryTablePre <- fractRegionByDonor.snRNAseq |>
matrix(nrow=1) |>
cbind(newSummaryTablePre)
# out
newSummaryTableOut <- newSummaryTablePre[,c(4,5,1,2,3)]
#colnames(newSummaryTableOut)[seq(3,5)] <- unique(
#  snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos)[
#    order(
#      unique(
#        snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))]
colnames(newSummaryTableOut)[seq(3,5)] <- namesFractRegion
newSummaryTableOut
return(newSummaryTableOut)
}
nuSummaryTable2(snRNASeq)
write.csv(nuSummaryTable2, "./outputs/02_summarize_mae/TABLE_S1.csv")
nuSummaryTable2 <- function(snRNASeq){
# donors map samples
numSamples.snRNASeq <- unique(snRNASeq$BrNum) |> length()
# fract region
# CHECK/CONVINCE
# as.data.frame(table(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))[,1]
#
fractRegionByDonor.snRNAseq <-
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos |>
list() |>
sapply(function(item){table(item)}) |>
as.data.frame() |> sapply(function(value){value/numDonors.snRNASeq}) |>
as.vector()
# names fract region
# CHECK/CONVINCE
# names(table(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))==unique(
# snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos)[
#  order(unique(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))]
#
#
namesFractRegion <- unique(
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos)[
order(unique(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))]
namesFractRegion <- paste0(namesFractRegion, "Fraction")
# fractRegionByDonor.snRNAseq
newSummaryTablePre <- data.frame(
numDonors.snRNASeq,
numSamples.snRNASeq
)
newSummaryTablePre <- fractRegionByDonor.snRNAseq |>
matrix(nrow=1) |>
cbind(newSummaryTablePre)
# out
newSummaryTableOut <- newSummaryTablePre[,c(4,5,1,2,3)]
#colnames(newSummaryTableOut)[seq(3,5)] <- unique(
#  snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos)[
#    order(
#      unique(
#        snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))]
colnames(newSummaryTableOut)[seq(3,5)] <- namesFractRegion
newSummaryTableOut
return(newSummaryTableOut)
}
nuSummaryTable2snRNASeq <- nuSummaryTable2(snRNASeq)
write.csv(nuSummaryTable2snRNASeq, "./outputs/02_summarize_mae/TABLE_S1.csv")
nuSummaryTable2snRNASeq
data.table::fwrite(nuSummaryTable2snRNASeq, "./outputs/02_summarize_mae/TABLE_S1.csv")
write.csv(nuSummaryTable2snRNASeq, file = "./outputs/02_summarize_mae/TABLE_S1.csv")
setwd("..")
setwd("..")
write.csv(nuSummaryTable2snRNASeq, file = "./outputs/02_summarize_mae/TABLE_S1.csv")
setwd("..")
setwd("..")
write.csv(nuSummaryTable2snRNASeq, file = "./outputs/02_summarize_mae/TABLE_S1.csv", row.names = FALSE)
setwd("..")
setwd("..")
write.csv(nuSummaryTable2snRNASeq, file = "./outputs/02_summarize_mae/TABLE_S1.csv", row.names = FALSE)
nuSummaryTable2snRNASeq
colnames(snRNAseq)
colnames(colData(snRNASeq))
colnames(colData(snRNASeq$sex))
colnames(colData(snRNASeq)$sex)
snRNASeq$sex
snRNASeq[,!duplicated(snRNASeq$BrNum)]$sex |>
list() |>
sapply(function(item){table(item)}) |>
as.data.frame() |> sapply(function(value){value/numDonors.snRNASeq}) |>
as.vector()
as.data.frame(table(snRNASeq[,!duplicated(snRNASeq$BrNum)]$sex))[,1]
cnames(fractSexByDonor) <- as.data.frame(table(snRNASeq[,!duplicated(snRNASeq$BrNum)]$sex))[,1]
fractSexByDonor <-
snRNASeq[,!duplicated(snRNASeq$BrNum)]$sex |>
list() |>
sapply(function(item){table(item)}) |>
as.data.frame() |> sapply(function(value){value/numDonors.snRNASeq}) |>
as.vector()
names(fractSexByDonor) <- as.data.frame(table(snRNASeq[,!duplicated(snRNASeq$BrNum)]$sex))[,1]
fractSexByDonor
fractSexByDonor
unique(
snRNASeq[,!duplicated(snRNASeq$BrNum)]$sex)
namesFractSex <- unique(
snRNASeq[,!duplicated(snRNASeq$BrNum)]$sex)
names(fractSexByDonor) <- namesFractSex
fractSexByDonor
newSummaryTablePre <- fractRegionByDonor.snRNAseq |>
matrix(nrow=1) |>
cbind(newSummaryTablePre)
newSummaryTablePre <- fractSexByDonor |>
matrix(nrow=1) |>
cbind(newSummaryTablePre)
newSummaryTablePre
newSummaryTablePre
fractSexByDonor.snRNASeq <-
snRNASeq[,!duplicated(snRNASeq$BrNum)]$sex |>
list() |>
sapply(function(item){table(item)}) |>
as.data.frame() |>
sapply(function(value){value/numDonors.snRNASeq}) |>
as.vector()
fractSexByDonor.snRNASeq
namesFractSex.snRNASeq <- unique(
snRNASeq[,!duplicated(snRNASeq$BrNum)]$sex)
namesFractSex.snRNASeq
newSummaryTablePre <- data.frame(
numDonors.snRNASeq,
numSamples.snRNASeq
)
newSummaryTablePre <- fractRegionByDonor.snRNAseq |>
matrix(nrow=1) |>
cbind(newSummaryTablePre)
newSummaryTablePre <- namesFractSex.snRNAseq |>
matrix(nrow=1) |>
cbind(newSummaryTablePre)
libv <- c("MultiAssayExperiment", "SummarizedExperiment")
sapply(libv, library, character.only = TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd("..")
setwd("..")
list.files()
load('./env/02_summarize_mae/01_data_summaries_script.RData')
dfFilterAll <- df.filter.all
maeAll <- mae.all
snRNASeq <- maeAll[["snrnaseq.k2.all"]]
nuSummaryTable <- function(snRNASeq){
# donors map donors
numDonors.snRNASeq <- unique(snRNASeq$BrNum) |> length()
numSamples.snRNASeq <- unique(snRNASeq$SAMPLE_ID) |> length()
# fract region
# CHECK/CONVINCE
# as.data.frame(table(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))[,1]
#
fractRegionByDonor.snRNAseq <-
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos |>
list() |>
sapply(function(item){table(item)}) |>
as.data.frame() |> sapply(function(value){value/numDonors.snRNASeq}) |>
as.vector()
# names fract region
# CHECK/CONVINCE
# names(table(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))==unique(
# snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos)[
#  order(unique(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))]
#
#
namesFractRegion <- unique(
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos)[
order(unique(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))]
namesFractRegion <- paste0(namesFractRegion, "Fraction")
# fractRegionByDonor.snRNAseq
newSummaryTablePre <- data.frame(
numDonors.snRNASeq,
numSamples.snRNASeq
)
newSummaryTablePre <- fractRegionByDonor.snRNAseq |>
matrix(nrow=1) |>
cbind(newSummaryTablePre)
# out
newSummaryTableOut <- newSummaryTablePre[,c(4,5,1,2,3)]
#colnames(newSummaryTableOut)[seq(3,5)] <- unique(
#  snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos)[
#    order(
#      unique(
#        snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))]
colnames(newSummaryTableOut)[seq(3,5)] <- namesFractRegion
newSummaryTableOut
return(newSummaryTableOut)
}
nuSummaryTable(snRNASeq)
# donors map samples
numSamples.snRNASeq <- unique(snRNASeq$BrNum) |> length()
# fract region
# CHECK/CONVINCE
# as.data.frame(table(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))[,1]
#
fractRegionByDonor.snRNAseq <-
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos |>
list() |>
sapply(function(item){table(item)}) |>
as.data.frame() |> sapply(function(value){value/numDonors.snRNASeq}) |>
as.vector()
# donors map samples
numSamples.snRNASeq <- unique(snRNASeq$BrNum) |> length()
# fract region
# CHECK/CONVINCE
# as.data.frame(table(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))[,1]
#
fractRegionByDonor.snRNAseq <-
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos |>
list() |>
sapply(function(item){table(item)}) |>
as.data.frame() |> sapply(function(value){value/numDonors.snRNASeq}) |>
as.vector()
fractSexByDonor.snRNASeq
snRNASeq[,!duplicated(snRNASeq$BrNum)]$sex |>
list() |>
sapply(function(item){table(item)}) |>
as.data.frame() |>
sapply(function(value){value/numDonors.snRNASeq}) |>
as.vector()
snRNASeq[,!duplicated(snRNASeq$BrNum)]$sex |>
list() |>
sapply(function(item){table(item)}) |>
as.data.frame() |>
sapply(function(value){value/numDonors.snRNASeq}) |>
as.vector()
snRNASeq[,!duplicated(snRNASeq$BrNum)]$sex |>
list() |>
sapply(function(item){table(item)}) |>
as.data.frame() |>
sapply(function(value){value/numDonors.snRNASeq}) |>
as.vector()
# donors map samples
numSamples.snRNASeq <- unique(snRNASeq$BrNum) |> length()
# fract region
# CHECK/CONVINCE
# as.data.frame(table(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))[,1]
#
fractRegionByDonor.snRNAseq <-
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos |>
list() |>
sapply(function(item){table(item)}) |>
as.data.frame() |> sapply(function(value){value/numSamples.snRNASeq}) |>
as.vector()
fractRegionByDonor.snRNAseq
namesFractRegion <- unique(
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos)[
order(unique(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))]
namesFractRegion <- paste0(namesFractRegion, "Fraction")
# as.data.frame(table(snRNASeq[,!duplicated(snRNASeq$BrNum)]$sex))[,1]
fractSexBySample.snRNASeq <-
snRNASeq[,!duplicated(snRNASeq$BrNum)]$sex |>
list() |>
sapply(function(item){table(item)}) |>
as.data.frame() |>
sapply(function(value){value/numSamples.snRNASeq}) |>
as.vector()
fractSexBySample.snRNASeq
namesFractSex.snRNASeq <- unique(
snRNASeq[,!duplicated(snRNASeq$BrNum)]$sex)
namesFractSex.snRNASeq
newSummaryTablePre <- data.frame(
numDonors.snRNASeq,
numSamples.snRNASeq
)
newSummaryTablePre <- data.frame(
numDonors.snRNASeq,
numSamples.snRNASeq
)
newSummaryTablePre <- data.frame(
numSamples.snRNASeq
)
newSummaryTablePre <- fractRegionByDonor.snRNAseq |>
matrix(nrow=1) |>
cbind(newSummaryTablePre)
newSummaryTablePre <- namesFractSex.snRNAseq |>
matrix(nrow=1) |>
cbind(newSummaryTablePre)
# output table
newSummaryTablePre <- data.frame(
numSamples.snRNASeq
)
newSummaryTablePre <- fractRegionBySample.snRNAseq |>
matrix(nrow=1) |>
cbind(newSummaryTablePre)
fractRegionBySample.snRNAseq
# donors map samples
numSamples.snRNASeq <- unique(snRNASeq$BrNum) |> length()
# fract region
# CHECK/CONVINCE
# as.data.frame(table(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))[,1]
#
fractRegionBySample.snRNAseq <-
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos |>
list() |>
sapply(function(item){table(item)}) |>
as.data.frame() |> sapply(function(value){value/numSamples.snRNASeq}) |>
as.vector()
# names fract region
# CHECK/CONVINCE
# names(table(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))==unique(
# snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos)[
#  order(unique(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))]
#
#
namesFractRegion <- unique(
snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos)[
order(unique(snRNASeq[,!duplicated(snRNASeq$BrNum)]$pos))]
namesFractRegion <- paste0(namesFractRegion, "Fraction")
# fractSexByDonor
# CHECK/CONVINCE
# as.data.frame(table(snRNASeq[,!duplicated(snRNASeq$BrNum)]$sex))[,1]
fractSexBySample.snRNASeq <-
snRNASeq[,!duplicated(snRNASeq$BrNum)]$sex |>
list() |>
sapply(function(item){table(item)}) |>
as.data.frame() |>
sapply(function(value){value/numSamples.snRNASeq}) |>
as.vector()
# names fract sex
namesFractSex.snRNASeq <- unique(
snRNASeq[,!duplicated(snRNASeq$BrNum)]$sex)
namesFractSex.snRNASeq
newSummaryTablePre
newSummaryTablePre <- data.frame(
numSamples.snRNASeq
)
newSummaryTablePre <- fractRegionBySample.snRNAseq |>
matrix(nrow=1) |>
cbind(newSummaryTablePre)
newSummaryTablePre <- fractSexBySample.snRNASeq |>
matrix(nrow=1) |>
cbind(newSummaryTablePre)
newSummaryTablePre
newSummaryTableOut <- newSummaryTablePre[,c(6,7,1,2,3,4,5)]
newSummaryTablePre
colnames(newSummaryTablePre)
ncol(newSummaryTablePre)
newSummaryTablePre[,c(5,6,1,2,3,4)]
newSummaryTablePre
newSummaryTablePre
newSummaryTablePre
newSummaryTableOut
newSummaryTableOut
namesFractSex.snRNASeq
newSummaryTablePre
newSummaryTablePre
newSummaryTablePre
