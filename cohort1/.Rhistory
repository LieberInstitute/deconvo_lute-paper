setwd("C:/Users/User/Documents/GitHub/cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata()
BiocManager::install("ExperimentHubData")
ExperimentHubData::makeExperimentHubMetadata()
cd ..
setwd("C:/Users/User/Documents/GitHub")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
?.checkValidViews
?AnnotationHubData:::.checkValidViews
getSubTerms(biocViewsVocab, term="Technology")
library(biocViews)
getSubTerms(biocViewsVocab, term="software")
data(biocViewsVocab)
reposPath <- system.file("doc", package="biocViews")
reposUrl <- paste("file://", reposPath, sep="")
biocViews <- getBiocSubViews(reposUrl, biocViewsVocab, topTerm="Software")
biocViews
data(biocViewsVocab)
reposPath <- system.file("doc", package="biocViews")
reposUrl <- paste("file://", reposPath, sep="")
biocViews <- getBiocSubViews(reposUrl, biocViewsVocab, topTerm="ExperimentData")
biocViews
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
load("~/GitHub/deconvo_method-paper/cohort1/env/08_adjustment/02_run_2sample_script.RData")
gc()
load("~/GitHub/deconvo_method-paper/cohort1/env/09_fast/03_run_adjustment_realbulk_all_script.RData")
dfs.param
gc()
gc()
setwd("C:/Users/User/Documents/GitHub/deconvo_method-paper/cohort1")
#!/usr/bin/env R
# Author: Sean Maden
#
# Run successive iterations of S optimization. Use the real bulk data.
#
libv <- c("MultiAssayExperiment", "ggplot2", "gridExtra")
sapply(libv, library, character.only = T)
source("./source/00_dataset_summaries.R")
source("./source/00_deconvo_plots.R")
source("./source/00_sopt.R")
# load
mae <- get(load("./outputs/01_mae/mae_analysis_append.rda"))
mae <- mae[,colData(mae)$sample.id=="Br8492_mid",]
# new run
dfs.param <- data.frame(
s.min = c(1, NA, NA, NA),
s.max = c(80, NA, NA, NA),
s.step = c(1, 1e-2, 1e-3, 1e-4),
s.diff = c(NA, 1e-1, 1e-2, 1e-3)
)
sample.id.vector <- "Br8492_mid"
df.true.list <- metadata(mae[[1]])[["list.df.true.k2"]]
y.unadj <- mae[["bulk.rnaseq"]][,1]
sce <- mae[[1]]
list.res <- run_sopt_series(dfs.param, sample.id.vector = sample.id.vector,
df.true.list = df.true.list, y.unadj = y.unadj,
sce = sce)
identical(list.res$iter1$df.res,
list.res$iter2$df.res)
list.res.plots <- plot_sopt_series(list.res)
save.image(file = "./env/09_fast/01_run_bulk_1sample_script.RData")
list.res.plots$min.error.neuron
list.res.plots$min.s.neuron
#!/usr/bin/env R
# Author: Sean Maden
#
# Run successive iterations of S optimization. Use the real bulk data.
#
libv <- c("MultiAssayExperiment", "ggplot2", "gridExtra")
sapply(libv, library, character.only = T)
source("./source/00_dataset_summaries.R")
source("./source/00_deconvo_plots.R")
source("./source/00_sopt.R")
# load
mae <- get(load("./outputs/01_mae/mae_analysis_append.rda"))
mae <- mae[,colData(mae)$sample.id=="Br8492_mid",]
# new run
dfs.param <- data.frame(
s.min = c(1, NA, NA, NA),
s.max = c(80, NA, NA, NA),
s.step = c(1, 1e-2, 1e-3, 1e-4),
s.diff = c(NA, 2e-1, 2e-2, 2e-3)
)
sample.id.vector <- "Br8492_mid"
df.true.list <- metadata(mae[[1]])[["list.df.true.k2"]]
y.unadj <- mae[["bulk.rnaseq"]][,1]
sce <- mae[[1]]
list.res <- run_sopt_series(dfs.param, sample.id.vector = sample.id.vector,
df.true.list = df.true.list, y.unadj = y.unadj,
sce = sce)
identical(list.res$iter1$df.res,
list.res$iter2$df.res)
list.res.plots <- plot_sopt_series(list.res)
save.image(file = "./env/06_estimate/01_run_bulk_1sample_script.RData")
list.res.plots$min.s.neuron
list.res.plots$min.error.neuron
#!/usr/bin/env R
# Author: Sean Maden
#
# Run successive iterations of S optimization. Use the real bulk data.
#
libv <- c("MultiAssayExperiment", "ggplot2", "gridExtra")
sapply(libv, library, character.only = T)
source("./source/00_dataset_summaries.R")
source("./source/00_deconvo_plots.R")
source("./source/00_sopt.R")
# load
mae <- get(load("./outputs/01_mae/mae_analysis_append.rda"))
mae <- mae[,colData(mae)$sample.id=="Br8492_mid",]
# new run
dfs.param <- data.frame(
s.min = c(1, NA, NA, NA, NA),
s.max = c(80, NA, NA, NA, NA),
s.step = c(1, 1e-1, 1e-2, 1e-3, 1e-4),
s.diff = c(NA, 2, 2e-1, 2e-2, 2e-3)
)
sample.id.vector <- "Br8492_mid"
df.true.list <- metadata(mae[[1]])[["list.df.true.k2"]]
y.unadj <- mae[["bulk.rnaseq"]][,1]
sce <- mae[[1]]
list.res <- run_sopt_series(dfs.param, sample.id.vector = sample.id.vector,
df.true.list = df.true.list, y.unadj = y.unadj,
sce = sce)
identical(list.res$iter1$df.res,
list.res$iter2$df.res)
list.res.plots <- plot_sopt_series(list.res)
save.image(file = "./env/06_estimate/01_run_bulk_1sample_script.RData")
save.image(file = "./env/06_estimate/01_run_bulk_1sample_convergent_script.RData")
library(gridExtra)
knitr::opts_chunk$set(echo = TRUE)
setwd("..")
setwd("..")
load("./env/06_estimate/01_run_bulk_1sample_convergent_script.RData")
gc()
