setwd("C:/Users/User/Documents/GitHub/cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata()
BiocManager::install("ExperimentHubData")
ExperimentHubData::makeExperimentHubMetadata()
cd ..
setwd("C:/Users/User/Documents/GitHub")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
?.checkValidViews
?AnnotationHubData:::.checkValidViews
getSubTerms(biocViewsVocab, term="Technology")
library(biocViews)
getSubTerms(biocViewsVocab, term="software")
data(biocViewsVocab)
reposPath <- system.file("doc", package="biocViews")
reposUrl <- paste("file://", reposPath, sep="")
biocViews <- getBiocSubViews(reposUrl, biocViewsVocab, topTerm="Software")
biocViews
data(biocViewsVocab)
reposPath <- system.file("doc", package="biocViews")
reposUrl <- paste("file://", reposPath, sep="")
biocViews <- getBiocSubViews(reposUrl, biocViewsVocab, topTerm="ExperimentData")
biocViews
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
setwd("C:/Users/User/Documents/GitHub")
setwd("C:/Users/User/Documents/GitHub/deconvo_method-paper/cohort1")
knitr::opts_chunk$set(echo = TRUE)
libv <- c("dplyr", "ggplot2", "GGally", "ggcorrplot")
sapply(libv, library, character.only = TRUE)
setwd("..")
setwd("..")
load("./env/07_summary/01_sizes_script.RData")
knitr::opts_chunk$set(echo = TRUE)
libv <- c("dplyr", "ggplot2", "GGally", "ggcorrplot")
sapply(libv, library, character.only = TRUE)
setwd("..")
setwd("..")
load("./env/07_summary/01_sizes_script.RData")
#!/usr/bin/env R
#
# Get cell type proportions
#
libv <- c("dplyr", "ggplot2")
sapply(libv, library, character.only = TRUE)
folder.name <- "08_sizes"
source(file.path("./scripts/",folder.name,"/00_size.R"))
# load
mae <- get(load("./outputs/01_mae/mae_allsamples.rda"))
sn <- mae[["snrnaseq.k2.all"]]
names(ame)
names(mae)
class(mae)
sn <- mae[["snrnaseq.k2.all"]]
folder.name <- "08_sizes"
source(file.path("./scripts/",folder.name,"/00_size.R"))
# load
mae <- get(load("./outputs/01_mae/mae_allsamples.rda"))
sn <- mae[["snrnaseq.k2.all"]]
sample.id.variable <- unique(sn[["Sample"]])
mae <- mae[,colData(mae)$sample.id %in% sample.id.variable,]
# sopt cell size factors
sopt <- get(load("./outputs/06_estimate/train_result.rda"))
#----------------
# get cell sizes
#----------------
list.dfp <- list_dfp_wide_tall_size(mae)
# get factors from optimizations
df.sopt <- do.call(rbind, lapply(unique(sopt$sample.id), function(sample.id){
sf <- sopt[sopt$sample.id==sample.id,]
c(sample.id, mean(sf$s.glial), mean(sf$s.neuron))
}))
# save env
rm(mae)
save.image(file.path("./env/",folder.name,"/01_sizes_script.RData"))
gc()
gc()
knitr::opts_chunk$set(echo = TRUE)
libv <- c("dplyr", "ggplot2", "GGally", "ggcorrplot")
sapply(libv, library, character.only = TRUE)
setwd("..")
setwd("..")
load("./env/08_sizes/01_sizes_script.RData")
dfp.wide <- list.dfp$dfp.wide
dfp.tall <- list.dfp$dfp.tall
df.cor <- dfp.wide[,c("sn.neuron", "rn.neuron", "br.region", "subject.id")]
df.region <-
aggregate(df.cor, by = list(br.region=df.cor$br.region), FUN = median)
df.sample <-
aggregate(df.cor, by = list(subject.id=df.cor$subject.id), FUN = median)
ggcorrplot(cor(df.region[,c("sn.neuron", "rn.neuron")]))
ggcorrplot(cor(df.sample[,c("sn.neuron", "rn.neuron")]))
ggpairs(dfp.wide[,c("sn.neuron", "rn.neuron")])
ggplot(dfp.tall, aes(x = subject.id, y = neuron)) +
geom_jitter() + geom_boxplot(alpha = 0, color = "cyan") + facet_wrap(~size.type.label) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(dfp.tall, aes(x = br.region, y = neuron)) +
geom_jitter() + geom_boxplot(alpha = 0, color = "cyan") + facet_wrap(~size.type.label) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
head(dfp.tall)
#!/usr/bin/env R
#
# Get cell type proportions
#
libv <- c("dplyr", "ggplot2")
sapply(libv, library, character.only = TRUE)
folder.name <- "08_sizes"
source(file.path("./scripts/",folder.name,"/00_size.R"))
# load
mae <- get(load("./outputs/01_mae/mae_allsamples.rda"))
sn <- mae[["snrnaseq.k2.all"]]
sample.id.variable <- unique(sn[["Sample"]])
mae <- mae[,colData(mae)$sample.id %in% sample.id.variable,]
# sopt cell size factors
sopt <- get(load("./outputs/06_estimate/train_result.rda"))
#----------------
# get cell sizes
#----------------
list.dfp <- list_dfp_wide_tall_size(mae)
# get factors from optimizations
df.sopt <- do.call(rbind, lapply(unique(sopt$sample.id), function(sample.id){
sf <- sopt[sopt$sample.id==sample.id,]
c(sample.id, mean(sf$s.glial), mean(sf$s.neuron))
}))
# get pr
dfp.tall$ratio.glial.neuron <- dfp.tall$glial/dfp.tall$neuron
dfp.tall$ratio.neuron.glial <- dfp.tall$neuron/dfp.tall$glial
#------
# save
#------
# save env
rm(mae)
save.image(file.path("./env/",folder.name,"/01_sizes_script.RData"))
head(dfp.tall)
ggplot(dfp.tall, aes(x = br.region, y = neuron)) +
geom_jitter() + geom_boxplot(alpha = 0, color = "cyan") + facet_wrap(~size.type.label) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(dfp.tall, aes(x = br.region, y = ratio.glial.neuron)) +
geom_jitter() + geom_boxplot(alpha = 0, color = "cyan") + facet_wrap(~size.type.label) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(dfp.tall, aes(x = br.region, y = ratio.neuron.glial)) +
geom_jitter() + geom_boxplot(alpha = 0, color = "cyan") + facet_wrap(~size.type.label) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(dfp.tall, aes(x = br.region, y = ratio.glial.neuron)) +
geom_jitter() + geom_boxplot(alpha = 0, color = "cyan") + facet_wrap(~size.type.label) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(intercept = 0)
ggplot(dfp.tall, aes(x = br.region, y = ratio.glial.neuron)) +
geom_jitter() + geom_boxplot(alpha = 0, color = "cyan") + facet_wrap(~size.type.label) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept = 0)
ggplot(dfp.tall, aes(x = br.region, y = ratio.neuron.glial)) +
geom_jitter() + geom_boxplot(alpha = 0, color = "cyan") + facet_wrap(~size.type.label) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept = 0)
ratio.yintercept.ref = 1
ggplot(dfp.tall, aes(x = br.region, y = ratio.glial.neuron)) +
geom_jitter() + geom_boxplot(alpha = 0, color = "cyan") + facet_wrap(~size.type.label) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept = ratio.yintercept.ref)
ggplot(dfp.tall, aes(x = br.region, y = ratio.neuron.glial)) +
geom_jitter() + geom_boxplot(alpha = 0, color = "cyan") + facet_wrap(~size.type.label) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept = ratio.yintercept.ref)
setwd("..")
setwd("..")
new.plot.path <- "./figures/08_sizes/supplemental_figure_boxplots_ratio_neuron_glial.jpg"
jpeg(new.plot.path, width = 5, height = 3)
new.plot1
new.plot1 <- ggplot(dfp.tall, aes(x = br.region, y = ratio.neuron.glial)) +
geom_jitter() + geom_boxplot(alpha = 0, color = "cyan") + facet_wrap(~size.type.label) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept = ratio.yintercept.ref)
new.plot1
setwd("..")
setwd("..")
new.plot.path <- "./figures/08_sizes/supplemental_figure_boxplots_ratio_neuron_glial.jpg"
jpeg(new.plot.path, width = 5, height = 3)
new.plot1
dev.off()
new.plot1
new.plot1 <- ggplot(dfp.tall, aes(x = br.region, y = ratio.neuron.glial)) +
geom_jitter() + geom_boxplot(alpha = 0, color = "cyan") + facet_wrap(~size.type.label) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept = ratio.yintercept.ref)
new.plot1
setwd("..")
setwd("..")
new.plot.path <- "./figures/08_sizes/supplemental_figure_boxplots_ratio_neuron_glial.jpg"
jpeg(new.plot.path, width = 5, height = 3, res = 400, units = "in")
new.plot1
dev.off()
setwd("..")
setwd("..")
list.files()
new.plot.path <- "./figures/08_sizes/supplemental_figure_boxplots_ratio_neuron_glial.jpg"
jpeg(new.plot.path, width = 5, height = 3, res = 400, units = "in")
new.plot1
dev.off()
setwd("..")
setwd("..")
load("./env/08_sizes/01_sizes_script.RData")
dfp.wide <- list.dfp$dfp.wide
dfp.tall <- list.dfp$dfp.tall
annotations <- load("data/09_quality/rnascope_quality_annotations.csv")
?center
gc()
#!/usr/bin/env R
# Author: Sean Maden
#
# Get cell type proportions
#
libv <- c("dplyr", "ggplot2")
sapply(libv, library, character.only = TRUE)
folder.name <- "08_sizes"
#------
# load
#------
load(file.path("./env/",folder.name,"/01_sizes_script.RData"))
#-----------------------------------
# pca cluster sizes, color by region
#-----------------------------------
dfp.tall$neuron
prcomp()
gc()
gc()
gc()
