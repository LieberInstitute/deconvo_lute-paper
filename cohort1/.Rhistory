# save point values for simulation start barplot
ggsave(filename =
paste0("./figures/09_example_plots/",
"sim_start_expr05_barplot.jpg"),
plot = barplotStart05,
device = "jpeg", width = 3, height = 3,
units = "in", dpi = 400)
# save multipanel change plots
ggsave(filename =
paste0("./figures/09_example_plots/",
"multipanel_change_expr05_barplots.jpg"),
plot = listMultiPlot05$ggMulti,
device = "jpeg", width = 12, height = 4,
units = "in", dpi = 400)
# save marker expression barplots
# save multipanel plots
# save
jpeg(paste0("./figures/09_example_plots/",
"multipanel_example_barplots_marker05.jpg"), width = 11,
height = 4, units = "in", res = 400)
grid.arrange(barplotStart05, listMultiPlot05$ggMulti, nrow = 1,
layout_matrix = matrix(c(1,2,2,2),nrow=1))
dev.off()
jpeg(paste0("./figures/09_example_plots/",
"multipanel_example_barplots_marker1.jpg"), width = 11,
height = 4, units = "in", res = 400)
grid.arrange(barplotStart1, listMultiPlot1$ggMulti, nrow = 1,
layout_matrix = matrix(c(1,2,2,2),nrow=1))
dev.off()
jpeg(paste0("./figures/09_example_plots/",
"multipanel_example_barplots_marker2.jpg"), width = 11,
height = 4, units = "in", res = 400)
grid.arrange(barplotStart2, listMultiPlot2$ggMulti, nrow = 1,
layout_matrix = matrix(c(1,2,2,2),nrow=1))
dev.off()
# save image
save.image(
"./env/09_example_plots/01_example_plots_value_changes_script.RData")
#!/usr/bin/env R
libv <- c("ggplot2", "reshape2")
sapply(libv, library, character.only = T)
# Author: Sean Maden
#
# Plot to show direction change in expression and prediction with scale factor change.
#
#
#
#
#
source("./scripts/09_example_plots/00_param.R")
#--------------------------------------------------
# multiple panels -- marker expression start is 0.5
#--------------------------------------------------
# get multiple panels
# view facet of multi panel plots
# marker expression start is 0.5
listMultiPlot05 <- multiPanelPlots(markerExpressionStart = 0.5)
barplotStart05 <-
listMultiPlot05$resultsList$Decrease$result$valuesList$ggBarplotStart
grid.arrange(barplotStart05, listMultiPlot05$ggMulti, nrow = 1,
layout_matrix = matrix(c(1,2,2,2),nrow=1))
# marker expression start is 1
listMultiPlot1 <- multiPanelPlots(markerExpressionStart = 1)
barplotStart1 <-
listMultiPlot1$resultsList$Decrease$result$valuesList$ggBarplotStart
grid.arrange(barplotStart1, listMultiPlot1$ggMulti, nrow = 1,
layout_matrix = matrix(c(1,2,2,2),nrow=1))
# marker expression start is 2
listMultiPlot2 <- multiPanelPlots(markerExpressionStart = 2)
barplotStart2 <-
listMultiPlot2$resultsList$Decrease$result$valuesList$ggBarplotStart
grid.arrange(barplotStart2, listMultiPlot2$ggMulti, nrow = 1,
layout_matrix = matrix(c(1,2,2,2),nrow=1))
#--------------------------
# save
#--------------------------
# save single panel plots
# note: save this once, because it does not change across conditions
jpeg(paste0("./figures/09_example_plots/",
"scalefactors_example_barplots_marker05.jpg"), width = 5,
height = 3, units = "in", res = 400)
listMultiPlot05$ggBarCellScaleFactors
dev.off()
# save point values for simulation start barplot
ggsave(filename =
paste0("./figures/09_example_plots/",
"sim_start_expr05_barplot.jpg"),
plot = barplotStart05,
device = "jpeg", width = 3, height = 3,
units = "in", dpi = 400)
# save multipanel change plots
ggsave(filename =
paste0("./figures/09_example_plots/",
"multipanel_change_expr05_barplots.jpg"),
plot = listMultiPlot05$ggMulti,
device = "jpeg", width = 12, height = 4,
units = "in", dpi = 400)
# save marker expression barplots
# save multipanel plots
# save
jpeg(paste0("./figures/09_example_plots/",
"multipanel_example_barplots_marker05.jpg"), width = 11,
height = 4, units = "in", res = 400)
grid.arrange(barplotStart05, listMultiPlot05$ggMulti, nrow = 1,
layout_matrix = matrix(c(1,2,2,2),nrow=1))
dev.off()
jpeg(paste0("./figures/09_example_plots/",
"multipanel_example_barplots_marker1.jpg"), width = 11,
height = 4, units = "in", res = 400)
grid.arrange(barplotStart1, listMultiPlot1$ggMulti, nrow = 1,
layout_matrix = matrix(c(1,2,2,2),nrow=1))
dev.off()
jpeg(paste0("./figures/09_example_plots/",
"multipanel_example_barplots_marker2.jpg"), width = 11,
height = 4, units = "in", res = 400)
grid.arrange(barplotStart2, listMultiPlot2$ggMulti, nrow = 1,
layout_matrix = matrix(c(1,2,2,2),nrow=1))
dev.off()
# save image
save.image(
"./env/09_example_plots/01_example_plots_value_changes_script.RData")
#!/usr/bin/env R
libv <- c("ggplot2", "reshape2")
sapply(libv, library, character.only = T)
# Author: Sean Maden
#
# Plot to show direction change in expression and prediction with scale factor change.
#
#
#
#
#
source("./scripts/09_example_plots/00_param.R")
#--------------------------------------------------
# multiple panels -- marker expression start is 0.5
#--------------------------------------------------
# get multiple panels
# view facet of multi panel plots
# marker expression start is 0.5
listMultiPlot05 <- multiPanelPlots(markerExpressionStart = 0.5)
barplotStart05 <-
listMultiPlot05$resultsList$Decrease$result$valuesList$ggBarplotStart
grid.arrange(barplotStart05, listMultiPlot05$ggMulti, nrow = 1,
layout_matrix = matrix(c(1,2,2,2),nrow=1))
# marker expression start is 1
listMultiPlot1 <- multiPanelPlots(markerExpressionStart = 1)
barplotStart1 <-
listMultiPlot1$resultsList$Decrease$result$valuesList$ggBarplotStart
grid.arrange(barplotStart1, listMultiPlot1$ggMulti, nrow = 1,
layout_matrix = matrix(c(1,2,2,2),nrow=1))
# marker expression start is 2
listMultiPlot2 <- multiPanelPlots(markerExpressionStart = 2)
barplotStart2 <-
listMultiPlot2$resultsList$Decrease$result$valuesList$ggBarplotStart
grid.arrange(barplotStart2, listMultiPlot2$ggMulti, nrow = 1,
layout_matrix = matrix(c(1,2,2,2),nrow=1))
#--------------------------
# save
#--------------------------
# save single panel plots
# note: save this once, because it does not change across conditions
jpeg(paste0("./figures/09_example_plots/",
"scalefactors_example_barplots_marker05.jpg"), width = 5,
height = 3, units = "in", res = 400)
listMultiPlot05$ggBarCellScaleFactors
dev.off()
# save point values for simulation start barplot
ggsave(filename =
paste0("./figures/09_example_plots/",
"sim_start_expr05_barplot.jpg"),
plot = barplotStart05,
device = "jpeg", width = 3, height = 3,
units = "in", dpi = 400)
# save multipanel change plots
ggsave(filename =
paste0("./figures/09_example_plots/",
"multipanel_change_expr05_barplots.jpg"),
plot = listMultiPlot05$ggMulti,
device = "jpeg", width = 12, height = 4,
units = "in", dpi = 400)
# save marker expression barplots
# save multipanel plots
# save
jpeg(paste0("./figures/09_example_plots/",
"multipanel_example_barplots_marker05.jpg"), width = 11,
height = 4, units = "in", res = 400)
grid.arrange(barplotStart05, listMultiPlot05$ggMulti, nrow = 1,
layout_matrix = matrix(c(1,2,2,2),nrow=1))
dev.off()
jpeg(paste0("./figures/09_example_plots/",
"multipanel_example_barplots_marker1.jpg"), width = 11,
height = 4, units = "in", res = 400)
grid.arrange(barplotStart1, listMultiPlot1$ggMulti, nrow = 1,
layout_matrix = matrix(c(1,2,2,2),nrow=1))
dev.off()
jpeg(paste0("./figures/09_example_plots/",
"multipanel_example_barplots_marker2.jpg"), width = 11,
height = 4, units = "in", res = 400)
grid.arrange(barplotStart2, listMultiPlot2$ggMulti, nrow = 1,
layout_matrix = matrix(c(1,2,2,2),nrow=1))
dev.off()
# save image
save.image(
"./env/09_example_plots/01_example_plots_value_changes_script.RData")
#!/usr/bin/env R
libv <- c("ggplot2", "reshape2", "gridExtra", "cowplot")
sapply(libv, library, character.only = T)
# Author: Sean Maden
#
# Plots the simulation values barplots
#
#
#
#
#------
# load
#------
source("./scripts/09_example_plots/00_param.R")
load("./env/09_example_plots/01_example_plots_value_changes_script.RData")
#-------------------
# get barplot values
#-------------------
# get iterations labels
dfIter <- listMultiPlot05$dfPlotAll
changeLabels <- unique(gsub("\\..*", "", rownames(dfIter)))
variablesVector <- c("cellScaleFactor", "markerExpressionScaled",
"predictedProportion", "bias", "error")
# get plots data list
lgg <- lapply(changeLabels, function(changeLabel){
valuesPlot <-
listMultiPlot05$resultsList[[changeLabel]]$result$valuesList
deconvoResultNew <-
listMultiPlot05$resultsList[[changeLabel]]$result$deconvoResult
deconvoResultNew <- deconvoResultNew@predictionsTable
cellScaleFactor <- valuesPlot$cellScaleFactorNew
markerExpressionScaled <- valuesPlot$zrefExampleScaled[1,1]
trueProportion <- valuesPlot$trueProportionValue
predictedProportion <- deconvoResultNew[1,1]
biasValue <- trueProportion-predictedProportion
errorValue <- abs(biasValue)
dfPlot <- data.frame(
values = c(cellScaleFactor, markerExpressionScaled,
predictedProportion, biasValue, errorValue),
variables = variablesVector,
variableType = c(rep("condition", 2), rep("result", 3))
)
dfPlot$variables <-
factor(dfPlot$variables, levels = variablesVector)
dfPlot$type <- changeLabel
dfPlot$value <- round(dfPlot$value, 2)
newBarPlot <-
ggplot(dfPlot, aes(x = variables, y = value, color = variableType)) +
geom_abline(intercept = 0, slope = 0) +
geom_text(aes(label = value),
vjust = ifelse(dfPlot$value >= 0, -1.2, 1.2)) +
geom_bar(stat = "identity", size = 1.2) + theme_bw() +
scale_color_manual(breaks = c("condition", "result"),
values=c("#44AA99", "#332288")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle(changeLabel) +
ylim(min(dfPlot$value)-1.2, max(dfPlot$value)+1.2)
return(list(dfPlot = dfPlot,
plot = newBarPlot))
})
# bind together all plot dfs
dfPlotAll <- do.call(rbind, lapply(lgg, function(item){
return(item$dfPlot)
}))
#--------------------------
#
#
# get single composite plot
#
#
#--------------------------
# Example, one legend, six plots
plot1 <- barplotStart05
plot2 <- lgg$plot[[1]] + theme(legend.position = "none")
plot3 <- lgg$plot[[2]] + theme(legend.position = "none")
plot4 <- lgg$plot[[3]] + theme(legend.position = "none")
plot5 <- lgg$plot[[4]] + theme(legend.position = "none")
plot6 <- lgg$plot[[5]] + theme(legend.position = "none")
plotLegend <- get_legend(lgg[[1]])
grid.arrange(plot1, plot2, plot3, plot4,
plot5, plot6, plotLegend,
layout_matrix = matrix(c(1,2,3,4,5,6,7,7), nrow = 2))
# facet barplots
newFacetBarplots <-
ggplot(dfPlotAll, aes(x = variables, y = value, color = variableType)) +
geom_abline(intercept = 0, slope = 0) +
geom_text(aes(label = value),
vjust = ifelse(dfPlotAll$value >= 0, -1.2, 1.2)) +
geom_bar(stat = "identity", size = 1.2) + theme_bw() +
scale_color_manual(breaks = c("condition", "result"),
values=c("#44AA99", "#332288")) +
theme(axis.text.x = element_text(angle = 65, hjust = 1)) +
ylim(min(dfPlotAll$values)-1.2, max(dfPlotAll$values)+1.2) +
facet_wrap(~type)
ggsave(filename =
paste0("./figures/09_example_plots/",
"multipanel_simulation_values_barplots.jpg"),
plot = newFacetBarplots,
device = "jpeg", width = 10, height = 5, units = "in", dpi = 400)
#--------
# save
#--------
save.image("./env/09_example_plots/02_simulation_values_barplots_script.RData")
# starting marker expression 1
ggsave(filename =
paste0("./figures/09_example_plots/",
"multipanel_change_expr1_barplots.jpg"),
plot = listMultiPlot05$ggMulti,
device = "jpeg", width = 12, height = 4,
units = "in", dpi = 400)
valuesPlot$zrefExampleScaled
valuesPlot$zrefExample
valuesPlot$markerExpressionStartScaled
#!/usr/bin/env R
libv <- c("ggplot2", "reshape2")
sapply(libv, library, character.only = T)
# Author: Sean Maden
#
# Plot to show direction change in expression and prediction with scale factor change.
#
#
#
#
#
source("./scripts/09_example_plots/00_param.R")
#--------------------------------------------------
# multiple panels -- marker expression start is 0.5
#--------------------------------------------------
# get multiple panels
# view facet of multi panel plots
# marker expression start is 0.5
listMultiPlot05 <- multiPanelPlots(markerExpressionStart = 0.5)
barplotStart05 <-
listMultiPlot05$resultsList$Decrease$result$valuesList$ggBarplotStart
grid.arrange(barplotStart05, listMultiPlot05$ggMulti, nrow = 1,
layout_matrix = matrix(c(1,2,2,2),nrow=1))
# marker expression start is 1
listMultiPlot1 <- multiPanelPlots(markerExpressionStart = 1)
barplotStart1 <-
listMultiPlot1$resultsList$Decrease$result$valuesList$ggBarplotStart
grid.arrange(barplotStart1, listMultiPlot1$ggMulti, nrow = 1,
layout_matrix = matrix(c(1,2,2,2),nrow=1))
# marker expression start is 2
listMultiPlot2 <- multiPanelPlots(markerExpressionStart = 2)
barplotStart2 <-
listMultiPlot2$resultsList$Decrease$result$valuesList$ggBarplotStart
grid.arrange(barplotStart2, listMultiPlot2$ggMulti, nrow = 1,
layout_matrix = matrix(c(1,2,2,2),nrow=1))
#--------------------------
# save
#--------------------------
# save single panel plots
# note: save this once, because it does not change across conditions
jpeg(paste0("./figures/09_example_plots/",
"scalefactors_example_barplots_marker05.jpg"), width = 5,
height = 3, units = "in", res = 400)
listMultiPlot05$ggBarCellScaleFactors
dev.off()
# save point values for simulation start barplot
ggsave(filename =
paste0("./figures/09_example_plots/",
"sim_start_expr05_barplot.jpg"),
plot = barplotStart05,
device = "jpeg", width = 3, height = 3,
units = "in", dpi = 400)
# save multipanel change plots
# starting marker expression 05
ggsave(filename =
paste0("./figures/09_example_plots/",
"multipanel_change_expr05_barplots.jpg"),
plot = listMultiPlot05$ggMulti,
device = "jpeg", width = 12, height = 4,
units = "in", dpi = 400)
# starting marker expression 1
ggsave(filename =
paste0("./figures/09_example_plots/",
"multipanel_change_expr1_barplots.jpg"),
plot = listMultiPlot05$ggMulti,
device = "jpeg", width = 12, height = 4,
units = "in", dpi = 400)
# save marker expression barplots
# save multipanel plots
# save
jpeg(paste0("./figures/09_example_plots/",
"multipanel_example_barplots_marker05.jpg"), width = 11,
height = 4, units = "in", res = 400)
grid.arrange(barplotStart05, listMultiPlot05$ggMulti, nrow = 1,
layout_matrix = matrix(c(1,2,2,2),nrow=1))
dev.off()
jpeg(paste0("./figures/09_example_plots/",
"multipanel_example_barplots_marker1.jpg"), width = 11,
height = 4, units = "in", res = 400)
grid.arrange(barplotStart1, listMultiPlot1$ggMulti, nrow = 1,
layout_matrix = matrix(c(1,2,2,2),nrow=1))
dev.off()
jpeg(paste0("./figures/09_example_plots/",
"multipanel_example_barplots_marker2.jpg"), width = 11,
height = 4, units = "in", res = 400)
grid.arrange(barplotStart2, listMultiPlot2$ggMulti, nrow = 1,
layout_matrix = matrix(c(1,2,2,2),nrow=1))
dev.off()
# save image
save.image(
"./env/09_example_plots/01_example_plots_value_changes_script.RData")
listMultiPlot05$resultsList$Decrease$result$valuesList$zrefNewScaled
#!/usr/bin/env R
libv <- c("ggplot2", "reshape2", "gridExtra", "cowplot")
sapply(libv, library, character.only = T)
# Author: Sean Maden
#
# Plots the simulation values barplots
#
#
#
#
#------
# load
#------
source("./scripts/09_example_plots/00_param.R")
load("./env/09_example_plots/01_example_plots_value_changes_script.RData")
#-------------------
# get barplot values
#-------------------
# get iterations labels
dfIter <- listMultiPlot05$dfPlotAll
changeLabels <- unique(gsub("\\..*", "", rownames(dfIter)))
variablesVector <- c("cellScaleFactor", "markerExpressionScaled",
"predictedProportion", "bias", "error")
# get plots data list
lgg <- lapply(changeLabels, function(changeLabel){
valuesPlot <-
listMultiPlot05$resultsList[[changeLabel]]$result$valuesList
deconvoResultNew <-
listMultiPlot05$resultsList[[changeLabel]]$result$deconvoResult
deconvoResultNew <- deconvoResultNew@predictionsTable
cellScaleFactor <- valuesPlot$cellScaleFactorNew
markerExpressionScaled <- valuesPlot$zrefNewScaled[1,1]
trueProportion <- valuesPlot$trueProportionValue
predictedProportion <- deconvoResultNew[1,1]
biasValue <- trueProportion-predictedProportion
errorValue <- abs(biasValue)
dfPlot <- data.frame(
values = c(cellScaleFactor, markerExpressionScaled,
predictedProportion, biasValue, errorValue),
variables = variablesVector,
variableType = c(rep("condition", 2), rep("result", 3))
)
dfPlot$variables <-
factor(dfPlot$variables, levels = variablesVector)
dfPlot$type <- changeLabel
dfPlot$value <- round(dfPlot$value, 2)
newBarPlot <-
ggplot(dfPlot, aes(x = variables, y = value, color = variableType)) +
geom_abline(intercept = 0, slope = 0) +
geom_text(aes(label = value),
vjust = ifelse(dfPlot$value >= 0, -1.2, 1.2)) +
geom_bar(stat = "identity", size = 1.2) + theme_bw() +
scale_color_manual(breaks = c("condition", "result"),
values=c("#44AA99", "#332288")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle(changeLabel) +
ylim(min(dfPlot$value)-1.2, max(dfPlot$value)+1.2)
return(list(dfPlot = dfPlot,
plot = newBarPlot))
})
# bind together all plot dfs
dfPlotAll <- do.call(rbind, lapply(lgg, function(item){
return(item$dfPlot)
}))
#--------------------------
#
#
# get single composite plot
#
#
#--------------------------
# Example, one legend, six plots
plot1 <- barplotStart05
plot2 <- lgg$plot[[1]] + theme(legend.position = "none")
plot3 <- lgg$plot[[2]] + theme(legend.position = "none")
plot4 <- lgg$plot[[3]] + theme(legend.position = "none")
plot5 <- lgg$plot[[4]] + theme(legend.position = "none")
plot6 <- lgg$plot[[5]] + theme(legend.position = "none")
plotLegend <- get_legend(lgg[[1]])
grid.arrange(plot1, plot2, plot3, plot4,
plot5, plot6, plotLegend,
layout_matrix = matrix(c(1,2,3,4,5,6,7,7), nrow = 2))
# facet barplots
newFacetBarplots <-
ggplot(dfPlotAll, aes(x = variables, y = value, color = variableType)) +
geom_abline(intercept = 0, slope = 0) +
geom_text(aes(label = value),
vjust = ifelse(dfPlotAll$value >= 0, -1.2, 1.2)) +
geom_bar(stat = "identity", size = 1.2) + theme_bw() +
scale_color_manual(breaks = c("condition", "result"),
values=c("#44AA99", "#332288")) +
theme(axis.text.x = element_text(angle = 65, hjust = 1)) +
ylim(min(dfPlotAll$values)-1.2, max(dfPlotAll$values)+1.2) +
facet_wrap(~type)
ggsave(filename =
paste0("./figures/09_example_plots/",
"multipanel_simulation_values_barplots.jpg"),
plot = newFacetBarplots,
device = "jpeg", width = 10, height = 5, units = "in", dpi = 400)
#--------
# save
#--------
save.image("./env/09_example_plots/02_simulation_values_barplots_script.RData")
