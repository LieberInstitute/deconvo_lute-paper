setwd("C:/Users/User/Documents/GitHub/cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata()
BiocManager::install("ExperimentHubData")
ExperimentHubData::makeExperimentHubMetadata()
cd ..
setwd("C:/Users/User/Documents/GitHub")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
?.checkValidViews
?AnnotationHubData:::.checkValidViews
getSubTerms(biocViewsVocab, term="Technology")
library(biocViews)
getSubTerms(biocViewsVocab, term="software")
data(biocViewsVocab)
reposPath <- system.file("doc", package="biocViews")
reposUrl <- paste("file://", reposPath, sep="")
biocViews <- getBiocSubViews(reposUrl, biocViewsVocab, topTerm="Software")
biocViews
data(biocViewsVocab)
reposPath <- system.file("doc", package="biocViews")
reposUrl <- paste("file://", reposPath, sep="")
biocViews <- getBiocSubViews(reposUrl, biocViewsVocab, topTerm="ExperimentData")
biocViews
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
setwd("C:/Users/User/Documents/GitHub")
setwd("C:/Users/User/Documents/GitHub/deconvo_method-paper/cohort1")
libv <- c("ggplot2", "reshape2")
sapply(libv, library, character.only = TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd("..")
setwd("..")
load("./outputs/01_mae/sample_qc_df.rda")
filter.low <- cd.id$confidence.circle=="Low" & cd.id$confidence.star=="Low"
mean(na.omit(as.numeric(cd.id[filter.low,]$size.sn.neuron)))
mean(na.omit(as.numeric(cd.id[!filter.low,]$size.sn.neuron)))
ggplot(cd.id, aes(x = size.sn.neuron, y = size.sn.glial)) +
geom_point() + facet_wrap(~confidence.star)
gc()
libv <- c("ggplot2", "reshape2")
sapply(libv, library, character.only = TRUE)
load("./outputs/01_mae/mae_allsamples_append.rda")
combo.id.variable <- "SAMPLE_ID"
confidence.variable <- "Confidence"
cd.id <- as.data.frame(colData(mae))
for(sample.id in cd.id$sample.id){
message(sample.id)
filter.sample.rnascope <- cd.rnascope$Sample==sample.id
cd.rnascope.iter <- cd.rnascope[filter.sample.rnascope,]
cd.id[cd.id$sample.id==sample.id,]$confidence.circle <- cd.rnascope.iter[cd.rnascope.iter$combo=="CIRCLE",]$Confidence[1]
cd.id[cd.id$sample.id==sample.id,]$confidence.star <- cd.rnascope.iter[cd.rnascope.iter$combo=="STAR",]$Confidence[1]
cell.sizes.iter <- cell.sizes[cell.sizes$sample.id==sample.id,]
filter.glial <- cell.sizes.iter[,2]=="glial"
filter.neuron <- cell.sizes.iter[,2]=="neuron"
cd.id[cd.id$sample.id==sample.id,]$size.sn.glial <- cell.sizes.iter[filter.glial,]$size[1]
cd.id[cd.id$sample.id==sample.id,]$size.sn.neuron <- cell.sizes.iter[filter.neuron,]$size[1]
if(sample.id %in% names(cell.proportions)){
cd.id[cd.id$sample.id==sample.id,]$proportion.sn.glial <- cell.proportions[[sample.id]][["glial"]]
cd.id[cd.id$sample.id==sample.id,]$proportion.sn.neuron <- cell.proportions[[sample.id]][["neuron"]]
}
}
libv <- c("ggplot2", "reshape2")
sapply(libv, library, character.only = TRUE)
load("./outputs/01_mae/mae_allsamples_append.rda")
combo.id.variable <- "SAMPLE_ID"
confidence.variable <- "Confidence"
cd.id <- as.data.frame(colData(mae))
cd.id$confidence.circle <- cd.id$confidence.star <- "NA"
sce.img <- mae[["sce.img"]]
cd.rnascope <- colData(sce.img)
cd.rnascope$combo <- gsub(".*_", "", cd.rnascope$SAMPLE_ID)
table(cd.rnascope$combo)
cell.sizes <- metadata(mae[["snrnaseq.k2.all"]])[["cell.sizes"]]
cell.sizes <- cell.sizes[cell.sizes$ktype=="k2",]
cell.proportions <- metadata(mae[["snrnaseq.k2.all"]])[["list.df.true.k2"]]
cd.id$size.sn.glial <- cd.id$size.sn.neuron <- "NA"
cd.id$proportion.sn.glial <- cd.id$proportion.sn.neuron <- "NA"
for(sample.id in cd.id$sample.id){
message(sample.id)
filter.sample.rnascope <- cd.rnascope$Sample==sample.id
cd.rnascope.iter <- cd.rnascope[filter.sample.rnascope,]
cd.id[cd.id$sample.id==sample.id,]$confidence.circle <- cd.rnascope.iter[cd.rnascope.iter$combo=="CIRCLE",]$Confidence[1]
cd.id[cd.id$sample.id==sample.id,]$confidence.star <- cd.rnascope.iter[cd.rnascope.iter$combo=="STAR",]$Confidence[1]
cell.sizes.iter <- cell.sizes[cell.sizes$sample.id==sample.id,]
filter.glial <- cell.sizes.iter[,2]=="glial"
filter.neuron <- cell.sizes.iter[,2]=="neuron"
cd.id[cd.id$sample.id==sample.id,]$size.sn.glial <- cell.sizes.iter[filter.glial,]$size[1]
cd.id[cd.id$sample.id==sample.id,]$size.sn.neuron <- cell.sizes.iter[filter.neuron,]$size[1]
if(sample.id %in% names(cell.proportions)){
cd.id[cd.id$sample.id==sample.id,]$proportion.sn.glial <- cell.proportions[[sample.id]][["glial"]]
cd.id[cd.id$sample.id==sample.id,]$proportion.sn.neuron <- cell.proportions[[sample.id]][["neuron"]]
}
}
head(cd.id)
class(cd.id)
summary(cd.id)
for(c in c(2,3,4,5,6,7)){cd.id[,c] <- as.numeric(as.character(cd.id[,c]))}
summary(cd.id)
save(cd.id, file = "./outputs/01_mae/sample_qc_df.rda")
libv <- c("ggplot2", "reshape2")
sapply(libv, library, character.only = TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd("..")
setwd("..")
load("./outputs/01_mae/sample_qc_df.rda")
libv <- c("ggplot2", "reshape2")
sapply(libv, library, character.only = TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd("..")
setwd("..")
load("./outputs/01_mae/sample_qc_df.rda")
summary(cd.id)
filter.low <- cd.id$confidence.circle=="Low" & cd.id$confidence.star=="Low"
mean(na.omit(as.numeric(cd.id[filter.low,]$size.sn.neuron)))
mean(na.omit(as.numeric(cd.id[!filter.low,]$size.sn.neuron)))
ggplot(cd.id, aes(x = size.sn.neuron, y = size.sn.glial)) +
geom_point() + facet_wrap(~confidence.star)
head(cd.id)
class(cd.id$confidence.star)
cd.id$confidence.star
gc()
libv <- c("ggplot2", "reshape2")
sapply(libv, library, character.only = TRUE)
load("./outputs/01_mae/mae_allsamples_append.rda")
gc()
gc()
gc()
gc()
libv <- c("ggplot2", "reshape2")
sapply(libv, library, character.only = TRUE)
load("./outputs/01_mae/mae_allsamples_append.rda")
setwd("C:/Users/User/Documents/GitHub/deconvo_method-paper/cohort1")
knitr::opts_chunk$set(echo = TRUE)
libv <- c("dplyr", "ggplot2", "GGally", "ggcorrplot")
sapply(libv, library, character.only = TRUE)
setwd("..")
setwd("..")
load("./env/08_sizes/01_sizes_script.RData")
dfp.wide <- list.dfp$dfp.wide
dfp.tall <- list.dfp$dfp.tall
summary(dfp.wide$sn.neuron)
summary(dfp.wide$rn.neuron)
summary(dfp.wide$rn.neuron)
sd(dfp.wide$rn.neuron)
summary(dfp.wide$sn.neuron)
sd()
summary(dfp.wide$sn.neuron)
sd(dfp.wide$sn.neuron)
summary(dfp.wide$rn.glial)
sd(dfp.wide$rn.glial)
summary(dfp.wide$sn.glial)
sd(dfp.wide$sn.glial)
dfp.wide <- dfp.wide[order(dfp.wide$sn.neuron),]
dfp.wide$rank.snrnaseq <- seq(nrow(dfp.wide))
dfp.wide <- dfp.wide[order(dfp.wide$rn.neuron),]
dfp.wide$rank.rnascope <- seq(nrow(dfp.wide))
dfp.wide$rank.difference.snranseq.rnascope <- dfp.wide$rank.snrnaseq-dfp.wide$rank.rnascope
dfp.wide$abs.rank.difference.snranseq.rnascope <- abs(dfp.wide$rank.difference.snranseq.rnascope)
summary(dfp.wide$abs.rank.difference.snranseq.rnascope)
sd(dfp.wide$abs.rank.difference.snranseq.rnascope)
1/12
table(dfp.tall$size.type.label)
3/17
6/7
dfp.wide <- dfp.wide[order(dfp.wide$sn.neuron),]
dfp.wide$rank.snrnaseq <- seq(nrow(dfp.wide))
dfp.wide <- dfp.wide[order(dfp.wide$rn.neuron),]
dfp.wide$rank.rnascope <- seq(nrow(dfp.wide))
dfp.wide$rank.difference.snranseq.rnascope <- dfp.wide$rank.snrnaseq-dfp.wide$rank.rnascope
dfp.wide$abs.rank.difference.snranseq.rnascope <- abs(dfp.wide$rank.difference.snranseq.rnascope)
summary(dfp.wide$abs.rank.difference.snranseq.rnascope)
sd(dfp.wide$abs.rank.difference.snranseq.rnascope)
columns.keep <- c(1:2, 5:6, 9:13)
dfp.wide <- dfp.wide[,columns.keep]
dfp.wide$sn.ratio.glial.neuron <- dfp.wide$sn.glial/dfp.wide$sn.neuron
dfp.wide$rn.ratio.glial.neuron <- dfp.wide$rn.glial/dfp.wide$rn.neuron
dfp.tall$ratio.glial.neuron <- dfp.tall$glial/dfp.tall$neuron
dfp.wide[dfp.wide$br.region=="post",]
