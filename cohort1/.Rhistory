setwd("C:/Users/User/Documents/GitHub/cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata()
BiocManager::install("ExperimentHubData")
ExperimentHubData::makeExperimentHubMetadata()
cd ..
setwd("C:/Users/User/Documents/GitHub")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
?.checkValidViews
?AnnotationHubData:::.checkValidViews
getSubTerms(biocViewsVocab, term="Technology")
library(biocViews)
getSubTerms(biocViewsVocab, term="software")
data(biocViewsVocab)
reposPath <- system.file("doc", package="biocViews")
reposUrl <- paste("file://", reposPath, sep="")
biocViews <- getBiocSubViews(reposUrl, biocViewsVocab, topTerm="Software")
biocViews
data(biocViewsVocab)
reposPath <- system.file("doc", package="biocViews")
reposUrl <- paste("file://", reposPath, sep="")
biocViews <- getBiocSubViews(reposUrl, biocViewsVocab, topTerm="ExperimentData")
biocViews
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
ExperimentHubData::makeExperimentHubMetadata("cellScaleFactors")
setwd("C:/Users/User/Documents/GitHub")
setwd("C:/Users/User/Documents/GitHub/deconvo_method-paper/cohort1")
libv <- c("ggplot2", "reshape2")
sapply(libv, library, character.only = TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd("..")
setwd("..")
load("./outputs/01_mae/sample_qc_df.rda")
filter.low <- cd.id$confidence.circle=="Low" & cd.id$confidence.star=="Low"
mean(na.omit(as.numeric(cd.id[filter.low,]$size.sn.neuron)))
mean(na.omit(as.numeric(cd.id[!filter.low,]$size.sn.neuron)))
ggplot(cd.id, aes(x = size.sn.neuron, y = size.sn.glial)) +
geom_point() + facet_wrap(~confidence.star)
gc()
libv <- c("ggplot2", "reshape2")
sapply(libv, library, character.only = TRUE)
load("./outputs/01_mae/mae_allsamples_append.rda")
combo.id.variable <- "SAMPLE_ID"
confidence.variable <- "Confidence"
cd.id <- as.data.frame(colData(mae))
for(sample.id in cd.id$sample.id){
message(sample.id)
filter.sample.rnascope <- cd.rnascope$Sample==sample.id
cd.rnascope.iter <- cd.rnascope[filter.sample.rnascope,]
cd.id[cd.id$sample.id==sample.id,]$confidence.circle <- cd.rnascope.iter[cd.rnascope.iter$combo=="CIRCLE",]$Confidence[1]
cd.id[cd.id$sample.id==sample.id,]$confidence.star <- cd.rnascope.iter[cd.rnascope.iter$combo=="STAR",]$Confidence[1]
cell.sizes.iter <- cell.sizes[cell.sizes$sample.id==sample.id,]
filter.glial <- cell.sizes.iter[,2]=="glial"
filter.neuron <- cell.sizes.iter[,2]=="neuron"
cd.id[cd.id$sample.id==sample.id,]$size.sn.glial <- cell.sizes.iter[filter.glial,]$size[1]
cd.id[cd.id$sample.id==sample.id,]$size.sn.neuron <- cell.sizes.iter[filter.neuron,]$size[1]
if(sample.id %in% names(cell.proportions)){
cd.id[cd.id$sample.id==sample.id,]$proportion.sn.glial <- cell.proportions[[sample.id]][["glial"]]
cd.id[cd.id$sample.id==sample.id,]$proportion.sn.neuron <- cell.proportions[[sample.id]][["neuron"]]
}
}
libv <- c("ggplot2", "reshape2")
sapply(libv, library, character.only = TRUE)
load("./outputs/01_mae/mae_allsamples_append.rda")
combo.id.variable <- "SAMPLE_ID"
confidence.variable <- "Confidence"
cd.id <- as.data.frame(colData(mae))
cd.id$confidence.circle <- cd.id$confidence.star <- "NA"
sce.img <- mae[["sce.img"]]
cd.rnascope <- colData(sce.img)
cd.rnascope$combo <- gsub(".*_", "", cd.rnascope$SAMPLE_ID)
table(cd.rnascope$combo)
cell.sizes <- metadata(mae[["snrnaseq.k2.all"]])[["cell.sizes"]]
cell.sizes <- cell.sizes[cell.sizes$ktype=="k2",]
cell.proportions <- metadata(mae[["snrnaseq.k2.all"]])[["list.df.true.k2"]]
cd.id$size.sn.glial <- cd.id$size.sn.neuron <- "NA"
cd.id$proportion.sn.glial <- cd.id$proportion.sn.neuron <- "NA"
for(sample.id in cd.id$sample.id){
message(sample.id)
filter.sample.rnascope <- cd.rnascope$Sample==sample.id
cd.rnascope.iter <- cd.rnascope[filter.sample.rnascope,]
cd.id[cd.id$sample.id==sample.id,]$confidence.circle <- cd.rnascope.iter[cd.rnascope.iter$combo=="CIRCLE",]$Confidence[1]
cd.id[cd.id$sample.id==sample.id,]$confidence.star <- cd.rnascope.iter[cd.rnascope.iter$combo=="STAR",]$Confidence[1]
cell.sizes.iter <- cell.sizes[cell.sizes$sample.id==sample.id,]
filter.glial <- cell.sizes.iter[,2]=="glial"
filter.neuron <- cell.sizes.iter[,2]=="neuron"
cd.id[cd.id$sample.id==sample.id,]$size.sn.glial <- cell.sizes.iter[filter.glial,]$size[1]
cd.id[cd.id$sample.id==sample.id,]$size.sn.neuron <- cell.sizes.iter[filter.neuron,]$size[1]
if(sample.id %in% names(cell.proportions)){
cd.id[cd.id$sample.id==sample.id,]$proportion.sn.glial <- cell.proportions[[sample.id]][["glial"]]
cd.id[cd.id$sample.id==sample.id,]$proportion.sn.neuron <- cell.proportions[[sample.id]][["neuron"]]
}
}
head(cd.id)
class(cd.id)
summary(cd.id)
for(c in c(2,3,4,5,6,7)){cd.id[,c] <- as.numeric(as.character(cd.id[,c]))}
summary(cd.id)
save(cd.id, file = "./outputs/01_mae/sample_qc_df.rda")
libv <- c("ggplot2", "reshape2")
sapply(libv, library, character.only = TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd("..")
setwd("..")
load("./outputs/01_mae/sample_qc_df.rda")
libv <- c("ggplot2", "reshape2")
sapply(libv, library, character.only = TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd("..")
setwd("..")
load("./outputs/01_mae/sample_qc_df.rda")
summary(cd.id)
filter.low <- cd.id$confidence.circle=="Low" & cd.id$confidence.star=="Low"
mean(na.omit(as.numeric(cd.id[filter.low,]$size.sn.neuron)))
mean(na.omit(as.numeric(cd.id[!filter.low,]$size.sn.neuron)))
ggplot(cd.id, aes(x = size.sn.neuron, y = size.sn.glial)) +
geom_point() + facet_wrap(~confidence.star)
head(cd.id)
class(cd.id$confidence.star)
cd.id$confidence.star
gc()
libv <- c("ggplot2", "reshape2")
sapply(libv, library, character.only = TRUE)
load("./outputs/01_mae/mae_allsamples_append.rda")
gc()
gc()
gc()
gc()
libv <- c("ggplot2", "reshape2")
sapply(libv, library, character.only = TRUE)
load("./outputs/01_mae/mae_allsamples_append.rda")
libv <- c("ggplot2")
sapply(libv, library, character.only = TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd("..")
setwd("..")
list.files()
load("./env/01_pseudobulk/01_k2_mrb_script.RData")
setwd("..")
setwd("..")
new.plot.name <- "fig2b_cohort2.jpg"
jpeg(file.path("./figures/01_pseudobulk/", new.plot.name),
width = 3, height = 3, units = "in", res = 400)
new.plot
# plot proportions panel -- no scale
new.plot <- ggplot(dfp.tall[dfp.tall$type=="noscale",],
aes(x = neuron.true, y = neuron.pred)) +
geom_point(size = 4, alpha = 0.5) +
geom_abline(slope = 1, intercept = 0) +
geom_hline(yintercept = 0.5) + geom_vline(xintercept = 0.5) + theme_bw() +
xlab("True") + ylab("Predicted") +
xlim(0, 1) + ylim(0, 1) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
setwd("..")
setwd("..")
new.plot.name <- "fig2b_cohort2.jpg"
jpeg(file.path("./figures/01_pseudobulk/", new.plot.name),
width = 3, height = 3, units = "in", res = 400)
new.plot
dev.off()
# plot proportions multipanel -- scale vs with scale
new.plot <- ggplot(dfp.tall, aes(x = neuron.true, y = neuron.pred)) +
geom_point(size = 4, alpha = 0.5) +
geom_abline(slope = 1, intercept = 0) +
geom_hline(yintercept = 0.5) + geom_vline(xintercept = 0.5) + theme_bw() +
xlab("True") + ylab("Predicted") +
xlim(0, 1) + ylim(0, 1) + facet_wrap(~type) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
setwd("..")
setwd("..")
new.plot.name <- "figs1d_cohort2.jpg"
jpeg(file.path("./figures/01_pseudobulk/", new.plot.name),
width = 4, height = 2.5, units = "in", res = 400)
new.plot
dev.off()
new.plot <- ggplot(dfp.tall, aes(x = type, y = neuron.abs.error)) +
geom_jitter(alpha = 0.5, size = 3) +
geom_boxplot(color = "cyan", alpha = 0) +
theme_bw() +
ylab("Error (neuron)")
setwd("..")
setwd("..")
new.plot.name <- "figs1c_cohort2.jpg"
jpeg(file.path("./figures/01_pseudobulk/", new.plot.name),
width = 3, height = 2, units = "in", res = 400)
new.plot
dev.off()
setwd("..")
setwd("..")
new.plot.name <- "figs1c_cohort2.jpg"
jpeg(file.path("./figures/01_pseudobulk/", new.plot.name),
width = 3, height = 3, units = "in", res = 400)
new.plot
dev.off()
gc()
gc()
gc()
libv <- c("ggplot2")
sapply(libv, library, character.only = TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd("..")
setwd("..")
list.files()
load("./env/01_pseudobulk/01_k3_mrb_script.RData")
# plot proportions multipanel -- scale vs with scale
new.plot <- ggplot(dfp.ct, aes(x = true.noscale, y = pred.noscale)) +
geom_point(size = 4, alpha = 0.5) +
geom_abline(slope = 1, intercept = 0) +
geom_hline(yintercept = 0.5) + geom_vline(xintercept = 0.5) + theme_bw() +
xlab("True") + ylab("Predicted") +
xlim(0, 1) + ylim(0, 1) + facet_wrap(~celltype) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# plot proportions multipanel -- scale vs with scale
new.plot <- ggplot(dfp.ct, aes(x = true.noscale, y = pred.noscale)) +
geom_point(size = 4, alpha = 0.5) +
geom_abline(slope = 1, intercept = 0) +
geom_hline(yintercept = 0.5) + geom_vline(xintercept = 0.5) + theme_bw() +
xlab("True") + ylab("Predicted") +
xlim(0, 1) + ylim(0, 1) + facet_wrap(~celltype) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
setwd("..")
setwd("..")
new.plot.name <- "figs1d_cohort2.jpg"
jpeg(file.path("./figures/01_pseudobulk/", new.plot.name),
width = 5.5, height = 2.5, units = "in", res = 400)
new.plot
dev.off()
setwd("..")
setwd("..")
new.plot.name <- "fig2d_cohort2.jpg"
jpeg(file.path("./figures/01_pseudobulk/", new.plot.name),
width = 5.5, height = 2.5, units = "in", res = 400)
new.plot
dev.off()
# jitterbox -- jittered points and boxplots of absolute errors
dfp.ae1 <- data.frame(celltype = dfp.ct$celltype,
abs.error = dfp.ct$abs.error.withscale)
dfp.ae1$type <- "withscale"
dfp.ae2 <- data.frame(celltype = dfp.ct$celltype,
abs.error = dfp.ct$abs.error.noscale)
dfp.ae2$type <- "noscale"
dfp.ae <- rbind(dfp.ae1, dfp.ae2)
new.plot <- ggplot(dfp.ae, aes(x = celltype, y = abs.error)) +
geom_jitter(alpha = 0.5, size = 2.5) +
geom_boxplot(color = "cyan", alpha = 0) + theme_bw() + facet_wrap(~type) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Error (neuron)")
setwd("..")
setwd("..")
new.plot.name <- "figs1f_cohort2.jpg"
jpeg(file.path("./figures/01_pseudobulk/", new.plot.name),
width = 4.5, height = 2.5, units = "in", res = 400)
new.plot
dev.off()
gc()
gc()
gc()
gc()
libv <- c("ggplot2")
sapply(libv, library, character.only = TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd("..")
setwd("..")
list.files()
load("./env/02_pseudobulk/02_k3.RData")
# plot proportions multipanel -- scale vs with scale
new.plot <- ggplot(dfp.ct, aes(x = true.noscale, y = pred.noscale)) +
geom_point(size = 4, alpha = 0.5) +
geom_abline(slope = 1, intercept = 0) +
geom_hline(yintercept = 0.5) + geom_vline(xintercept = 0.5) + theme_bw() +
xlab("True") + ylab("Predicted") +
xlim(0, 1) + ylim(0, 1) + facet_wrap(~celltype) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
setwd("..")
setwd("..")
new.plot.name <- "fig2c_cohort1.jpg"
jpeg(file.path("./figures/02_pseudobulk/", new.plot.name),
width = 6, height = 3, units = "in", res = 400)
new.plot
dev.off()
# jitterbox -- jittered points and boxplots of absolute errors
dfp.ae1 <- data.frame(celltype = dfp.ct$celltype,
abs.error = dfp.ct$abs.error.withscale)
dfp.ae1$type <- "withscale"
dfp.ae2 <- data.frame(celltype = dfp.ct$celltype,
abs.error = dfp.ct$abs.error.noscale)
dfp.ae2$type <- "noscale"
dfp.ae <- rbind(dfp.ae1, dfp.ae2)
new.plot <- ggplot(dfp.ae, aes(x = celltype, y = abs.error)) +
geom_jitter(alpha = 0.5, size = 2.5) +
geom_boxplot(color = "cyan", alpha = 0) + theme_bw() + facet_wrap(~type) +
ylab("Error (neuron)")
setwd("..")
setwd("..")
new.plot.name <- "figs1e_cohort1.jpg"
jpeg(file.path("./figures/02_pseudobulk/", new.plot.name),
width = 4, height = 2.5, units = "in", res = 400)
new.plot
dev.off()
gc()
gc()
libv <- c("ggplot2")
sapply(libv, library, character.only = TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd("..")
setwd("..")
list.files()
load("./env/02_pseudobulk/01_k2.RData")
head(dfp.ct)
dim(dfp.ct)
summary(dfp.ct$abs.error.noscale)
summary(dfp.ct$abs.error.withscale)
summary(dfp.ct$abs.error.noscale)
sd(dfp.ct$abs.error.noscale)
summary(dfp.ct$abs.error.withscale)
sd(dfp.ct$abs.error.withscale)
head(dfp.ct)
summary(dfp.ct[dfp.ct$celltype=="neuron",]$abs.error.noscale)
sd(dfp.ct[dfp.ct$celltype=="neuron",]$abs.error.noscale)
summary(dfp.ct[dfp.ct$celltype=="neuron",]$abs.error.withscale)
sd(dfp.ct[dfp.ct$celltype=="neuron",]$abs.error.withscale)
summary(dfp.ct[dfp.ct$celltype=="glial",]$abs.error.noscale)
sd(dfp.ct[dfp.ct$celltype=="glial",]$abs.error.noscale)
summary(dfp.ct[dfp.ct$celltype=="glial",]$abs.error.withscale)
sd(dfp.ct[dfp.ct$celltype=="glial",]$abs.error.withscale)
summary(dfp.ct[dfp.ct$celltype=="glial",]$abs.error.noscale)
sd(dfp.ct[dfp.ct$celltype=="glial",]$abs.error.noscale)
summary(dfp.ct[dfp.ct$celltype=="glial",]$abs.error.withscale)
sd(dfp.ct[dfp.ct$celltype=="glial",]$abs.error.withscale)
summary(dfp.ct[dfp.ct$celltype=="glial",]$abs.error.noscale)
sd(dfp.ct[dfp.ct$celltype=="glial",]$abs.error.noscale)
summary(dfp.ct[dfp.ct$celltype=="glial",]$abs.error.withscale)
sd(dfp.ct[dfp.ct$celltype=="glial",]$abs.error.withscale)
summary(dfp.ct[dfp.ct$celltype=="neuron",]$abs.error.noscale)
sd(dfp.ct[dfp.ct$celltype=="neuron",]$abs.error.noscale)
summary(dfp.ct[dfp.ct$celltype=="neuron",]$abs.error.withscale)
sd(dfp.ct[dfp.ct$celltype=="neuron",]$abs.error.withscale)
head(dfp.tall)
summary(dfp.tall[dfp.tall$type=="noscale",]$neuron.abs.error)
sd(dfp.tall[dfp.tall$type=="noscale",]$neuron.abs.error)
summary(dfp.tall[dfp.tall$type=="scale",]$neuron.abs.error)
sd(dfp.tall[dfp.tall$type=="scale",]$neuron.abs.error)
summary(dfp.tall[dfp.tall$type=="noscale",]$neuron.abs.error)
sd(dfp.tall[dfp.tall$type=="noscale",]$neuron.abs.error)
summary(dfp.tall[dfp.tall$type=="withscale",]$neuron.abs.error)
sd(dfp.tall[dfp.tall$type=="withscale",]$neuron.abs.error)
identical(dfp.tall$glial.abs.error)
identical(dfp.tall$glial.abs.error, dfp.tall$neuron.abs.error)
plot(dfp.tall$glial.abs.error, dfp.tall$neuron.abs.error)
gc()
gc()
gc()
libv <- c("ggplot2")
sapply(libv, library, character.only = TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd("..")
setwd("..")
list.files()
load("./env/01_pseudobulk/01_k2_mrb_script.RData")
summary(dfp.ct[dfp.ct$celltype=="neuron",]$abs.error.noscale)
head(dfp.tall)
summary(dfp.tall[dfp.tall$type=="noscale",]$neuron.abs.error)
sd(dfp.tall[dfp.tall$type=="noscale",]$neuron.abs.error)
summary(dfp.tall[dfp.tall$type=="noscale",]$neuron.abs.error)
sd(dfp.tall[dfp.tall$type=="noscale",]$neuron.abs.error)
summary(dfp.ct[dfp.ct$celltype=="neuron",]$abs.error.withscale)
summary(dfp.tall[dfp.tall$type=="noscale",]$neuron.abs.error)
sd(dfp.tall[dfp.tall$type=="noscale",]$neuron.abs.error)
summary(dfp.tall[dfp.tall$type=="withscale",]$neuron.abs.error)
sd(dfp.tall[dfp.tall$type=="withscale",]$neuron.abs.error)
packageVersion("lute")
?memory.limit
?install_github
library(devtools)
?install_github
packageVersion(lute)
packageVersion("lute")
packageVersion("lute")
devtools::install_github("metamaden/lute")
?install_version
knitr::opts_chunk$set(echo = TRUE)
setwd("..")
data <- get(load("./scdc/data/baron.rds"))
setwd("..")
list.files()
#data <- get(load("./scdc/data/baron.rds"))
setwd("..")
list.files("./scdc/data")
#data <- get(load("./scdc/data/baron.rds"))
setwd("..")
data <- get(load("./scdc/data/baron.rds"))
?load
setwd("..")
data <- readRDS("./scdc/data/baron.rds")
dim(data)
data
data
dim(data)
metadata(data)
attributes(data)
phenoData(data)
colData(data)
knitr::opts_chunk$set(echo = TRUE)
data.path <- "./scdc/data/baron.rds"
setwd("..")
list.files(data.path)
knitr::opts_chunk$set(echo = TRUE)
data.path <- "./scdc/data"
setwd("..")
list.files(data.path)
setwd("..")
data <- readRDS(file.path(data.path, "baron.rds"))
qc <- readRDS(file.path(data.path, "qc_baron.rds"))
qc
class(qc)
names(qc)
data
dim(data)
names(qc)
qc$prop.qc
class(qc$prop.qc)
names("qc_baron.rds")
names(qc$prop.qc)
rownames(qc$prop.qc)
dim(qc$prop.qc)
qc$sc.eset.qc
df.term <- data.frame(set.name = "3 cell lines",
z.term = "scRNAseq", z.file.name = "MIX3cl_scESET.rds",
y.term = "bulk RNAseq", y.file.name = "MIX3cl__bulkESET.rds")
knitr::kable(df.term)
setwd("..")
dataset <- "MIX3cl"
data.sc <- readRDS(file.path(data.path, paste0(dataset, "_scESEt.rds")))
data.bulk <- readRDS(file.path(data.path, paste0(dataset, "_bulkESET.rds")))
file.path(data.path, paste0(dataset, "_bulkESET.rds"))
data.bulk
setwd("..")
dataset <- "MIX3cl"
data.sc <- readRDS(file.path(data.path, paste0(dataset, "_scESEt.rds")))
data.bulk <- readRDS(file.path(data.path, paste0(dataset, "_bulkESET.rds")))
setwd("..")
dataset <- "MIX3cl"
data.sc <- readRDS(file.path(data.path, paste0(dataset, "_scESET.rds")))
data.bulk <- readRDS(file.path(data.path, paste0(dataset, "_bulkESET.rds")))
setwd("..")
dataset <- "MIX3cl"
data.sc <- readRDS(file.path(data.path, paste0(dataset, "_scESET.rds")))
data.bulk <- readRDS(file.path(data.path, paste0(dataset, "MIX3cl__bulkESET.rds")))
setwd("..")
dataset <- "MIX3cl"
data.sc <- readRDS(file.path(data.path, paste0(dataset, "_scESET.rds")))
data.bulk <- readRDS(file.path(data.path, "MIX3cl__bulkESET.rds"))
data.bulk
attributes(data.bulk)
phenoData(data.bulk)
as.data.frame(phenoData(data.bulk))
data.bulk@phenoData
data.bulk@phenoData@data
data.bulk@phenoData@varMetadata
data.bulk@phenoData
as.data.frame(data.bulk@phenoData)
data.bulk
experimentData(data.bulk)
ExpressionSet
?ExpressionSet
phenoData(data.bulk)
phenoData(data.bulk)$pdata
dim(data.bulk)
data.sc
colData(data.cs)
colData(data.sc)
phenoData(data.sc)
attributes(phenoData(data.sc))
phenoData(data.sc)@data
head(phenoData(data.sc)@data)
df.term <- data.frame(set.name = "3 cell lines",
z.term = "scRNAseq",
z.file.name = "MIX3cl_scESET.rds",
y.term = "bulk RNAseq",
y.file.name = "MIX3cl__bulkESET.rds",
p.true = "6:3:1",
p.true.celltypes = "hbc;MCF7;hf")
knitr::kable(df.term)
setwd("C:/Users/User/Documents/GitHub/deconvo_method-paper/cohort1")
knitr::opts_chunk$set(echo = TRUE)
libv <- c("snow", "ggplot2", "dplyr", "parallel",
"doParallel", "lute", "dplyr", "scuttle")
sapply(libv, library, character.only = T)
###
point.color <- "limegreen"
###
setwd("..")
setwd("..")
env.name <- "03_figfg_script.RData"
env.path <- file.path("env", "03_shuffle", env.name)
load(env.path)
length(unique(dfp.tall$sample.id))
gc()
load("~/GitHub/deconvo_method-paper/cohort1/data/01_mae/halo_all.Rdata")
colnames(halo_all)
unique(halo_all$SAMPLE_ID)
unique(halo_all$Sample)
