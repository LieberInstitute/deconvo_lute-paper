dfa.col <- data.frame(cell_type = lz1[,2])
rownames(dfa.col) <- colnames(hmi)
# "hmch-mr_withscale_coldefault_genemarkers-vs-donortype_dlpfc-ro1.png"
hm1 <- new_hm(hm.fpath = file.path(save.dpath, hm.png.fname1.1),
hmi = hmi,
rowlab = rowlab,
collab = collab,
legend.name = "Scaled\nMR_dk",
rescale = T,
show.col.names = F,
use.colpal = "ch",
append.rowanno = T,
rowanno = rowAnnotation(df = dfa.row),
append.colanno = T,
colanno = HeatmapAnnotation(df = dfa.col))
# "hmch-mr_noscale_coldefault_genemarkers-vs-donortype_dlpfc-ro1.png"
hm2 <- new_hm(hm.fpath = file.path(save.dpath, hm.png.fname1.2), hmi = hmi,
rowlab = rowlab, collab = collab, legend.name = "MR_dk",
rescale = F, show.col.names = F, use.colpal = "ch",
append.rowanno = T, rowanno = rowAnnotation(df = dfa.row),
append.colanno = T, colanno = HeatmapAnnotation(df = dfa.col, which = "column"))
# "hmch-mr_withscale_colphm_genemarkers-vs-donortype_dlpfc-ro1.png"
hm3 <- new_hm(hm.fpath = file.path(save.dpath, hm.png.fname1.3), hmi = hmi,
rowlab = rowlab, collab = collab, legend.name = "Scaled\nMR_dk",
rescale = T, show.col.names = F, use.colpal = "phm",
append.rowanno = T, rowanno = rowAnnotation(df = dfa.row),
append.colanno = T, colanno = columnAnnotation(df = dfa.col))
# "hmch-mr_noscale_colphm_genemarkers-vs-donortype_dlpfc-ro1.png"
hm4 <- new_hm(hm.fpath = file.path(save.dpath, hm.png.fname1.4), hmi = hmi,
rowlab = rowlab, collab = collab, legend.name = "MR_dk",
rescale = F, show.col.names = F, use.colpal = "phm",
append.rowanno = T, rowanno = rowAnnotation(df = dfa.row),
append.colanno = T, colanno = columnAnnotation(df = dfa.col))
#-----------
# z heatmaps
#-----------
hmi <- lz$z.final
rowlab <- paste0("Marker genes (N = ", nrow(hmi), ")")
collab <- paste0("Cell types (N = ",ncol(hmi),")")
# get rowanno
lz1 <- as.data.frame(lz[[1]])
lz1 <- lz1[order(match(lz1[,1], rownames(hmi))),]
cond <- identical(rownames(hmi), lz1[,1])
if(cond){
dfa.row <- data.frame(cell_type = lz1[,2])
rownames(dfa.row) <- rownames(hmi)
} else{dfa.row <- NA}
# "hmch-mr_withscale_coldefault_genemarkers-vs-celltype_dlpfc-ro1.png"
hm5 <- new_hm(hm.fpath = file.path(save.dpath, hm.png.fname2.1), hmi = hmi,
rowlab = rowlab, collab = collab, legend.name = "Scaled\nMR_k",
rescale = T, use.colpal = "ch", show.col.names = T,
png.width = 4, append.rowanno = T,
rowanno = rowAnnotation(df = dfa.row))
# "hmch-mr_noscale_coldefault_genemarkers-vs-celltype_dlpfc-ro1.png"
hm6 <- new_hm(hm.fpath = file.path(save.dpath, hm.png.fname2.2), hmi = hmi,
rowlab = rowlab, collab = collab, legend.name = "MR_k",
rescale = F, use.colpal = "ch", show.col.names = T,
png.width = 4, append.rowanno = T,
rowanno = rowAnnotation(df = dfa.row))
# "hmch-mr_withscale_colphm_genemarkers-vs-celltype_dlpfc-ro1.png"
hm7 <- new_hm(hm.fpath = file.path(save.dpath, hm.png.fname2.3), hmi = hmi,
rowlab = rowlab, collab = collab, legend.name = "Scaled\nMR_k",
rescale = T, use.colpal = "phm", show.col.names = T,
png.width = 4, append.rowanno = T,
rowanno = rowAnnotation(df = dfa.row))
# "hmch-mr_noscale_colphm_genemarkers-vs-celltype_dlpfc-ro1.png"
hm8 <- new_hm(hm.fpath = file.path(save.dpath, hm.png.fname2.4), hmi = hmi,
rowlab = rowlab, collab = collab, legend.name = "MR_k",
rescale = F, use.colpal = "phm", show.col.names = T,
png.width = 4, append.rowanno = T,
rowanno = rowAnnotation(df = dfa.row))
return(list(hm1, hm2, hm3, hm4, hm5, hm6, hm7, hm8))
}
get_lhm()
proj.dpath <- "deconvo_method-paper"
save.dpath <- file.path(proj.dpath, "outputs/02_test-source")
lz.fname <- "lz_mr_dlpfc-ro1.rda"
#-----
# load
#-----
lz <- get(load(file.path(save.dpath, lz.fname)))
library(ggplot2)
dfpi <- lz$top.marker.data
head(dfpi)
colnames(dfpi)
dfpi <- dfpi[,c(1,2,4,6,7)]
head(dfpi)
dfpi <- lz$top.marker.data
dfpi <- as.data.frame(dfpi[,c(1,2,4,6,7)])
ggplot(dfpi, aes(x = celltype.target, y = ratio)) + geom_violin(draw_quantiles = 0.5)
ggplot(dfpi, aes(x = celltype.target, y = ratio)) +
geom_violin(draw_quantiles = 0.5) +
theme(axis.text.x = element_text(angle = 45))
ggplot(dfpi, aes(x = celltype.target, y = ratio)) +
geom_violin(draw_quantiles = 0.5) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(dfpi, aes(x = celltype.target, y = ratio)) +
geom_violin(draw_quantiles = 0.5) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("MR_k") + xlab("cell_type")
ggplot(dfpi, aes(x = celltype.target, y = ratio)) +
geom_violin(draw_quantiles = 0.5) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("MR_k") + xlab("cell_type") +
geom_point(alpha = 0.1)
?geom_jitter
ggplot(dfpi, aes(x = celltype.target, y = ratio)) +
geom_violin(draw_quantiles = 0.5) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("MR_k") + xlab("cell_type") +
geom_jitter(alpha = 0.1)
ggplot(dfpi, aes(x = celltype.target, y = ratio)) +
geom_violin(draw_quantiles = 0.5) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("MR_k") + xlab("cell_type") +
geom_jitter(alpha = 1, size = 0.1)
ggvp <- ggplot(dfpi, aes(x = celltype.target, y = ratio)) +
geom_violin(draw_quantiles = 0.5) + ylab("MR_k") + xlab("cell_type") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggvp
ggjt <- ggplot(dfpi, aes(x = celltype.target, y = ratio)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("MR_k") + xlab("cell_type") + geom_jitter(alpha = 1, size = 0.1)
ggjt
ggbp <- ggplot(dfpi, aes(x = celltype.target, y = ratio)) +
geom_boxplot() + ylab("MR_k") + xlab("cell_type") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggbp
v
ggbp <- ggplot(dfpi, aes(x = celltype.target, y = ratio, col = celltype.target)) +
geom_boxplot() + ylab("MR_k") + xlab("cell_type") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggbp
ggbp <- ggplot(dfpi, aes(x = celltype.target, y = ratio, fill = celltype.target)) +
geom_boxplot() + ylab("MR_k") + xlab("cell_type") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
ggbp
ggvp <- ggplot(dfpi, aes(x = celltype.target, y = ratio,
fill = celltype.target)) +
geom_violin(draw_quantiles = 0.5) + ylab("MR_k") + xlab("cell_type") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggvp
ggjt <- ggplot(dfpi, aes(x = celltype.target, y = ratio,
fill = celltype.target)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none") +
ylab("MR_k") + xlab("cell_type") + geom_jitter(alpha = 1, size = 0.1)
ggjt
ggjt <- ggplot(dfpi, aes(x = celltype.target, y = ratio,
fill = celltype.target)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none") +
ylab("MR_k") + xlab("cell_type") + geom_jitter(alpha = 1, size = 0.2)
ggjt
ggplot(dfpi, aes(x = celltype.target, y = ratio,
fill = celltype.target)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none") +
ylab("MR_k") + xlab("cell_type") +
geom_jitter(alpha = 1, size = 1)
ggplot(dfpi, aes(x = celltype.target, y = ratio,
fill = celltype.target)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none") +
ylab("MR_k") + xlab("cell_type") +
geom_jitter(size = 1)
ggplot(dfpi, aes(x = celltype.target, y = ratio,
color = celltype.target)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none") +
ylab("MR_k") + xlab("cell_type") +
geom_jitter(size = 1, alpha = 0.5)
ggplot(dfpi, aes(x = celltype.target, y = ratio,
fill = celltype.target)) +
geom_violin(draw_quantiles = 0.5) + ylab("MR_k") + xlab("cell_type") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none") +
theme_bw()
ggplot(dfpi, aes(x = celltype.target, y = ratio, fill = celltype.target)) +
theme_bw() + geom_violin(draw_quantiles = 0.5) + ylab("MR_k") + xlab("cell_type") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
ggplot(dfpi, aes(x = celltype.target, y = ratio, color = celltype.target)) +
theme_bw() + ylab("MR_k") + xlab("cell_type") + geom_jitter(size = 1, alpha = 0.5) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "none")
ggplot(dfpi, aes(x = celltype.target, y = ratio, fill = celltype.target)) +
theme_bw() + geom_boxplot() + ylab("MR_k") + xlab("cell_type") +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "none")
library(gridExtra)
# plots for composite figures
ggvp2 <- ggplot(dfpi, aes(x = celltype.target, y = ratio, fill = celltype.target)) +
theme_bw() + geom_violin(draw_quantiles = 0.5) + ylab("MR_k") + xlab("cell_type") +
theme(axis.text.x = element_blank(), legend.position = "none",
axis.title.x = element_blank(), axis.title.y = element_blank())
ggjt2 <- ggplot(dfpi, aes(x = celltype.target, y = ratio, color = celltype.target)) +
theme_bw() + ylab("MR_k") + xlab("cell_type") + geom_jitter(size = 1, alpha = 0.5) +
theme(axis.text.x = element_blank(), legend.position = "none",
axis.title.x = element_blank(), axis.title.y = element_blank())
ggbp2 <- ggplot(dfpi, aes(x = celltype.target, y = ratio, fill = celltype.target)) +
theme_bw() + geom_boxplot() + ylab("MR_k") + xlab("cell_type") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank(), axis.title.y = element_blank(),
legend.position = "none")
grid.arrange(ggvp2, ggjt2, ggbp2, ncol = 1, left = "MR_k", bottom = "cell_type")
?grid.arrange
grid.arrange(ggvp2, ggjt2, ggbp2, ncol = 1,
layout_matrix = matrix(c(1,2,3,3),ncol=1), left = "MR_k", bottom = "cell_type")
grid.arrange(ggvp2, ggjt2, ggbp2, ncol = 1,
layout_matrix = matrix(c(1,2,3,3),ncol=1),
left = paste0(rep(" ", 10), "MR_k"),
bottom = "cell_type")
grid.arrange(ggvp2, ggjt2, ggbp2, ncol = 1,
layout_matrix = matrix(c(1,2,3,3),ncol=1),
left = paste0(rep(" ", 40), "MR_k"),
bottom = "cell_type")
grid.arrange(ggvp2, ggjt2, ggbp2, ncol = 1,
layout_matrix = matrix(c(1,2,3,3),ncol=1),
left = paste0(rep(" ", 40), "MR_k"),
bottom = "cell_type")
grid.arrange(ggvp2, ggjt2, ggbp2, ncol = 1,
layout_matrix = matrix(c(1,2,3,3),ncol=1),
left = paste0(rep(" ", 100), "MR_k"),
bottom = "cell_type")
paste0(rep(" ", 100), "MR_k")
paste(rep(" ", 100), "MR_k")
grid.arrange(ggvp2, ggjt2, ggbp2, ncol = 1,
layout_matrix = matrix(c(1,2,3,3),ncol=1),
left = paste0(paste0(rep(" ", 100)), "MR_k"),
bottom = "cell_type")
paste0(paste0(rep(" ", 100)), "MR_k")
paste0(rep(" ", 100))
paste(rep(" ", 100))
rep(" ", 10)
paste0(rep(" ", 10),collapse="")
grid.arrange(ggvp2, ggjt2, ggbp2, ncol = 1,
layout_matrix = matrix(c(1,2,3,3),ncol=1),
left = paste0(paste0(rep(" ", 100),collapse=""), "MR_k"),
bottom = "cell_type")
grid.arrange(ggvp2, ggjt2, ggbp2, ncol = 1,
layout_matrix = matrix(c(1,2,3,3),ncol=1),
left = paste0(paste0(rep(" ", 30),collapse=""), "MR_k"),
bottom = "cell_type")
grid.arrange(ggvp2, ggjt2, ggbp2, ncol = 1,
layout_matrix = matrix(c(1,2,3,3),ncol=1),
left = paste0(paste0(rep(" ", 20),collapse=""), "MR_k"),
bottom = "cell_type")
lm <- matrix(c(1,2,3,3),ncol=1) # adds extra space for xaxis labels
grid.arrange(ggvp2, ggjt2, ggbp2, ncol = 1, layout_matrix = lm,
left = paste0(paste0(rep(" ", 20),collapse=""), "MR_k"),
bottom = "cell_type")
# plots for composite figures
ggvp2 <- ggplot(dfpi, aes(x = celltype.target, y = ratio, fill = celltype.target)) +
theme_bw() + geom_violin(draw_quantiles = 0.5) + ylab("MR_k") + xlab("cell_type") +
theme(axis.text.x = element_blank(), legend.position = "none",
axis.title.x = element_blank(), axis.title.y = element_blank()) +
ggtitle("Violin plots")
ggjt2 <- ggplot(dfpi, aes(x = celltype.target, y = ratio, color = celltype.target)) +
theme_bw() + ylab("MR_k") + xlab("cell_type") + geom_jitter(size = 1, alpha = 0.5) +
theme(axis.text.x = element_blank(), legend.position = "none",
axis.title.x = element_blank(), axis.title.y = element_blank()) +
ggtitle("Jitter points")
ggbp2 <- ggplot(dfpi, aes(x = celltype.target, y = ratio, fill = celltype.target)) +
theme_bw() + geom_boxplot() + ylab("MR_k") + xlab("cell_type") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank(), axis.title.y = element_blank(),
legend.position = "none") +
ggtitle("Boxplots")
# save individual plots
# save composite plot
lm <- matrix(c(1,2,3,3),ncol=1) # adds extra space for xaxis labels
grid.arrange(ggvp2, ggjt2, ggbp2, ncol = 1, layout_matrix = lm,
left = paste0(paste0(rep(" ", 20),collapse=""), "MR_k"),
bottom = "cell_type")
lm <- matrix(c(1,1,2,2,3,3,3),ncol=1) # adds extra space for xaxis labels
grid.arrange(ggvp2, ggjt2, ggbp2, ncol = 1, layout_matrix = lm,
left = paste0(paste0(rep(" ", 20),collapse=""), "MR_k"),
bottom = "cell_type")
lm <- matrix(c(1,1,2,2,3,3,3),ncol=1) # adds extra space for xaxis labels
plot.comp.fname <- "mr-k_composite-vp-jt-bp.png"
plot.fpath <- file.path(save.dpath, plot.comp.fname)
png(plot.fpath, width = 4, height = 6, units = 'in', res = 400)
grid.arrange(ggvp2, ggjt2, ggbp2, ncol = 1, layout_matrix = lm,
left = paste0(paste0(rep(" ", 20),collapse=""), "MR_k"),
bottom = "cell_type")
dev.off()
ggvp1 <- ggplot(dfpi, aes(x = celltype.target, y = ratio, fill = celltype.target)) +
theme_bw() + geom_violin(draw_quantiles = 0.5) + ylab("MR_k") + xlab("cell_type") +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "none")
ggjt1 <- ggplot(dfpi, aes(x = celltype.target, y = ratio, color = celltype.target)) +
theme_bw() + ylab("MR_k") + xlab("cell_type") + geom_jitter(size = 1, alpha = 0.5) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "none")
ggbp1 <- ggplot(dfpi, aes(x = celltype.target, y = ratio, fill = celltype.target)) +
theme_bw() + geom_boxplot() + ylab("MR_k") + xlab("cell_type") +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "none")
lr <- list(single.plots = list(violin = ggvp1, jitter = ggjt1, box = ggbp1))
plot.single.fnamev <- c("mr-k_violin-plot.png",
"mr-k_jitter-plot.png",
"mr-k_box-plot.png")
png.width.splot <- 4
png.height.splot <- 3
png.units <- "in"
png.res <- 400
for(ii in seq(length(lr[[1]]))){
png(plot.single.fnamev[ii], width = png.width.splot,
height = png.height.splot, res = png.res, units = png.units)
lr[[1]][[ii]]; dev.off()
}
?ggsave\
?ggave
?ggsave
plot.single.fnamev <- c("mr-k_violin-plot.png", "mr-k_jitter-plot.png",
"mr-k_box-plot.png")
plot.fpathv <- file.path(save.dpath, plot.single.fnamev)
plot.fpathv
ggsave(plot.single.fnamev[ii], plot = lr[[1]][[ii]],
device = "png", path = plot.fpathv[ii])
ii=1
ggsave(plot.single.fnamev[ii], plot = lr[[1]][[ii]],
device = "png", path = plot.fpathv[ii],
dpi = png.res, width = png.width.splot,
height = png.height.splot,
units = png.units)
plot.fpathv[ii]
ggsave(plot.single.fnamev[ii], plot = lr[[1]][[ii]],
device = "png", path = plot.fpathv[ii],
dpi = png.res, width = png.width.splot,
height = png.height.splot,
units = png.units)
lr[[1]][[ii]]
ggsave(plot.single.fnamev[ii], plot = lr[[1]][[ii]],
device = "png", path = plot.fpathv[ii],
dpi = png.res, width = png.width.splot,
height = png.height.splot,
units = png.units)
dev.off()
ggsave(plot.single.fnamev[ii], plot = lr[[1]][[ii]],
device = "png", path = plot.fpathv[ii],
dpi = png.res, width = png.width.splot,
height = png.height.splot,
units = png.units)
dev.off()
dev.off()
dev.off()
ggsave(plot.single.fnamev[ii], plot = lr[[1]][[ii]],
device = "png", path = plot.fpathv[ii],
dpi = png.res, width = png.width.splot,
height = png.height.splot,
units = png.units)
?ggsave
ggsave(plot.single.fnamev[ii], plot = lr[[1]][[ii]],
device = png, path = plot.fpathv[ii],
dpi = png.res, width = png.width.splot,
height = png.height.splot,
units = png.units)
plot.single.fnamev <- c("mr-k_violin-plot.png", "mr-k_jitter-plot.png",
"mr-k_box-plot.png")
plot.fpathv <- file.path(save.dpath, plot.single.fnamev)
plot.fpathv
ggsave(plot.fpathv[ii], plot = lr[[1]][[ii]],
device = png, path = plot.fpathv[ii],
dpi = png.res, width = png.width.splot,
height = png.height.splot,
units = png.units)
ggsave(plot.fpathv[ii], plot = lr[[1]][[ii]],
device = "png", path = plot.fpathv[ii],
dpi = png.res, width = png.width.splot,
height = png.height.splot,
units = png.units)
ggsave(plot.fpathv[ii], plot = lr[[1]][[ii]],
device = "png", path = plot.fpathv[ii],
res = png.res, width = png.width.splot,
height = png.height.splot,
units = png.units)
ggsave(plot.fpathv[ii], plot = lr[[1]][[ii]],
device = "png", path = plot.fpathv[ii],
width = png.width.splot,
height = png.height.splot,
units = png.units)
ggsave(plot.fpathv[ii], plot = lr[[1]][[ii]],
device = "png", path = plot.fpathv[ii],
dpi = png.res, width = png.width.splot,
height = png.height.splot,
units = png.units)
ii=2
ggsave(plot.fpathv[ii], plot = lr[[1]][[ii]],
device = "png", path = plot.fpathv[ii],
dpi = png.res, width = png.width.splot,
height = png.height.splot,
units = png.units)
ggsave(plot.single.fnamev[ii], plot = lr[[1]][[ii]],
device = "png", path = plot.fpathv[ii],
dpi = png.res, width = png.width.splot,
height = png.height.splot,
units = png.units)
for(ii in seq(length(lr[[1]]))){
#ggsave(plot.single.fnamev[ii], plot = lr[[1]][[ii]],
#       device = "png", path = plot.fpathv[ii],
#       dpi = png.res, width = png.width.splot,
#       height = png.height.splot,
#       units = png.units)
png(plot.fpathv[ii], width = png.width.splot,
height = png.height.splot, res = png.res, units = png.units)
lr[[1]][[ii]]; dev.off()
}
for(ii in seq(length(lr[[1]]))){
#ggsave(plot.single.fnamev[ii], plot = lr[[1]][[ii]],
#       device = "png", path = plot.fpathv[ii],
#       dpi = png.res, width = png.width.splot,
#       height = png.height.splot,
#       units = png.units)
png(plot.fpathv[ii], width = png.width.splot,
height = png.height.splot, res = png.res, units = png.units)
print(lr[[1]][[ii]]); dev.off()
}
names(lz)
get_lgg_markers <- function(df.markers, save.new.plots = T,
png.fname.cplot = "mr-k_composite-vp-jt-bp.png",
plot.single.fnamev = c("mr-k_violin-plot.png",
"mr-k_jitter-plot.png",
"mr-k_box-plot.png"),
png.width.splot = 4,
png.height.splot = 3,
png.units = "in",
png.res = 400,
png.width.cplot = 4,
png.height.cplot = 6){
# Get a list of ggplots of gene marker mean ratio summaries. Also makes new
# figures.
#
# df.markers: "top.marker.data" object from lz outputs. This should have been
#   output from DeconvoBuddies::get_mean_ratio2().
# save.new.plots: Whether to save new plots of ggplot objects.
#
#
dfpi <- as.data.frame(df.markers[,c(1,2,4,6,7)]) # index colnames of interest
# mean ratio by cell type
# plots for individual figures
message("making objects for individual plots...")
ggvp1 <- ggplot(dfpi, aes(x = celltype.target, y = ratio, fill = celltype.target)) +
theme_bw() + geom_violin(draw_quantiles = 0.5) + ylab("MR_k") + xlab("cell_type") +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "none")
ggjt1 <- ggplot(dfpi, aes(x = celltype.target, y = ratio, color = celltype.target)) +
theme_bw() + ylab("MR_k") + xlab("cell_type") + geom_jitter(size = 1, alpha = 0.5) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "none")
ggbp1 <- ggplot(dfpi, aes(x = celltype.target, y = ratio, fill = celltype.target)) +
theme_bw() + geom_boxplot() + ylab("MR_k") + xlab("cell_type") +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "none")
# plots for composite figures
message("making objects for composite plot...")
ggvp2 <- ggplot(dfpi, aes(x = celltype.target, y = ratio, fill = celltype.target)) +
theme_bw() + geom_violin(draw_quantiles = 0.5) + ylab("MR_k") + xlab("cell_type") +
theme(axis.text.x = element_blank(), legend.position = "none",
axis.title.x = element_blank(), axis.title.y = element_blank()) +
ggtitle("Violin plots")
ggjt2 <- ggplot(dfpi, aes(x = celltype.target, y = ratio, color = celltype.target)) +
theme_bw() + ylab("MR_k") + xlab("cell_type") + geom_jitter(size = 1, alpha = 0.5) +
theme(axis.text.x = element_blank(), legend.position = "none",
axis.title.x = element_blank(), axis.title.y = element_blank()) +
ggtitle("Jitter points")
ggbp2 <- ggplot(dfpi, aes(x = celltype.target, y = ratio, fill = celltype.target)) +
theme_bw() + geom_boxplot() + ylab("MR_k") + xlab("cell_type") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank(), axis.title.y = element_blank(),
legend.position = "none") +
ggtitle("Boxplots")
# save plots
if(save.new.plots){
message("Saving new plot files...")
# save individual plots
plot.single.fnamev <- c("mr-k_violin-plot.png", "mr-k_jitter-plot.png",
"mr-k_box-plot.png")
plot.fpathv <- file.path(save.dpath, plot.single.fnamev)
for(ii in seq(length(lr[[1]]))){
message("saving new plot: ", plot.fpathv[ii])
png(plot.fpathv[ii], width = png.width.splot,
height = png.height.splot, res = png.res, units = png.units)
print(lr[[1]][[ii]]); dev.off()
}
# save composite plot
cplot.fpath <- file.path(save.dpath, png.fname.cplot)
message("saving new plot: ", cplot.fpath)
lm <- matrix(c(1,1,2,2,3,3,3),ncol=1) # adds extra space for xaxis labels
png(cplot.fpath, width = png.width.cplot,
height = png.height.cplot, units = png.units, res = png.res)
grid.arrange(ggvp2, ggjt2, ggbp2, ncol = 1, layout_matrix = lm,
left = paste0(paste0(rep(" ", 20),collapse=""), "MR_k"),
bottom = "cell_type")
dev.off()
}
# get return list
lr <- list(single.plots = list(violin = ggvp1, jitter = ggjt1, box = ggbp1),
composite.plots = list(violin = ggvp2, jitter = ggjt2, box = ggbp2))
return(lr)
}
get_lgg_markers(lz$top.marker.data)
lgg <- get_lgg_markers(lz$top.marker.data)
lgg$single.plots$violin
setwd("~/GitHub/deconvo_method-paper/source")
source("z_figures.R")
setwd("~/GitHub/deconvo_method-paper/source")
source("make_example_data.R")
source("z_transform.R")
ldecon <- ldecon_example()
ldecon
ldecon$pi_data
ldecon$pi_est
ldecon$y_original
head(ldecon$y_original)
head(ldecon$y_rescale)
head(ldecon$z_original)
head(ldecon$z_rescale)
