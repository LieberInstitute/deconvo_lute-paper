sce[["Sample"]]
source("deconvo_method-paper/code/06_var-and-covar-celltypes/00_parameters.R")
sapply(libv, library, character.only = T)
zlist.bydonor <- z_list_bydonor(sce, "Sample", c("glial" = 3, "neuron" = 10), "logcounts", "k2")
source("deconvo_method-paper/code/06_var-and-covar-celltypes/00_parameters.R")
sapply(libv, library, character.only = T)
zlist.bydonor <- z_list_bydonor(sce, "Sample", c("glial" = 3, "neuron" = 10), "logcounts", "k2")
zlist.bydonor <- z_list_bydonor(sce, "Sample", c("glial" = 3, "neuron" = 10), "logcounts", "k2")
source("deconvo_method-paper/code/06_var-and-covar-celltypes/00_parameters.R")
sapply(libv, library, character.only = T)
zlist.bydonor <- z_list_bydonor(sce, "Sample", c("glial" = 3, "neuron" = 10), "logcounts", "k2")
unique.sample.id.vector <- unique(sce[[sample.id]])
sample.id
sample.id = "Sample"
unique.sample.id.vector <- unique(sce[[sample.id]])
zlist.bydonor <- lapply(unique.sample.id.vector, function(sample.id){
z_list(sce[,sce[[sample.id]]==sample.id], s.vector, assay.name, celltype.variable)
})
celltype.variable = "k2"
unique.sample.id.vector <- unique(sce[[sample.id]])
zlist.bydonor <- lapply(unique.sample.id.vector, function(sample.id){
z_list(sce[,sce[[sample.id]]==sample.id], s.vector, assay.name, celltype.variable)
})
assay.name = "logcounts"
unique.sample.id.vector <- unique(sce[[sample.id]])
zlist.bydonor <- lapply(unique.sample.id.vector, function(sample.id){
z_list(sce[,sce[[sample.id]]==sample.id], s.vector, assay.name, celltype.variable)
})
assay.name
names(assays(sce))
.get_z_from_sce
lute:::.get_z_from_sce
dim(sce[,sce[[sample.id]]==sample.id])
sample.id
dim(sce)
unique(sce[["Sample"]])
unique.sample.id.vector <- unique(sce[[sample.id]])
zlist.bydonor <- lapply(unique.sample.id.vector, function(sample.id){
z_list(sce[,sce[[sample.id]]==sample.id], s.vector, assay.name, celltype.variable)
})
unique.sample.id.vector <- unique(sce[[sample.id]])
zlist.bydonor <- lapply(unique.sample.id.vector, function(sample.id){
message(sample.id)
z_list(sce[,sce[[sample.id]]==sample.id], s.vector, assay.name, celltype.variable)
})
sample.id
sce[[sample.id]]
table(sce[[sample.id]]==sample.id)
sample.id
source("deconvo_method-paper/code/06_var-and-covar-celltypes/00_parameters.R")
sapply(libv, library, character.only = T)
zlist.bydonor <- z_list_bydonor(sce, "Sample", c("glial" = 3, "neuron" = 10), "logcounts", "k2")
source("deconvo_method-paper/code/06_var-and-covar-celltypes/00_parameters.R")
sapply(libv, library, character.only = T)
zlist.bydonor <- z_list_bydonor(sce, "Sample", c("glial" = 3, "neuron" = 10), "logcounts", "k2")
zlist.bydonor <- z_list_bydonor(sce, "Sample", c("glial" = 3, "neuron" = 10), "logcounts", "k2")
dim(zlist.bydonor[[1]])
length(zlist.bydonor)
dim(zlist.bydonor[[2]])
dim(zlist.bydonor[[1]][[1]])
dim(zlist.bydonor[[1]][[2]])
zllist
zlist
zlist.cov <- lapply(zlist, function(item){cov(item)})
zlist.cov
zlist.bydonor.cov <- lapply(zlist.bydonor, function(item){
list("unadj" = cov(item[[1]]), "adj" = cov(item[[2]]))})
zlist.cov <- lapply(zlist, function(item){cov(item)})
zlist.bydonor.cov <- lapply(zlist.bydonor, function(item){
list("unadj" = cov(item[[1]]), "adj" = cov(item[[2]]))})
names(zlist.bydonor.cov) <- names(zlist.bydonor)
zlist.bydonor.cov[[1]]
class(zlist[[1]])
class(zlist[[1]])
is(zlist[[1]], "matrix")
covcor_summary <- function(zlist, type = "cov"){
if(is(zlist[[1]], "matrix")){
lcov <- lapply(zlist, function(item){cov(item)})
lcor <- lapply(zlist, function(item){cor(item)})
} else{
lcov <- lapply(zlist.bydonor, function(item){
list("unadj" = cov(item[[1]]), "adj" = cov(item[[2]]))})
lcor <- lapply(zlist.bydonor, function(item){
list("unadj" = cor(item[[1]]), "adj" = cor(item[[2]]))})
names(lcov) <- names(lcor) <- names(zlist.bydonor)
}
list(lcov = lcov, lcor = lcor)
}
covcor_from_zlist <- function(zlist, type = "cov"){
if(is(zlist[[1]], "matrix")){
lcov <- lapply(zlist, function(item){cov(item)})
lcor <- lapply(zlist, function(item){cor(item)})
} else{
lcov <- lapply(zlist.bydonor, function(item){
list("unadj" = cov(item[[1]]), "adj" = cov(item[[2]]))})
lcor <- lapply(zlist.bydonor, function(item){
list("unadj" = cor(item[[1]]), "adj" = cor(item[[2]]))})
names(lcov) <- names(lcor) <- names(zlist.bydonor)
}
list(lcov = lcov, lcor = lcor)
}
lstat <- covcor_from_zlist(zlist)s
lstat <- covcor_from_zlist(zlist)
lstat$lcov
lstat$lcor
lstat.bydonor <- covcor_from_zlist(zlist.bydonor)
lstat.bydonor$lcov
lstat
lstat$lcov$unadj - lstat$lcov$adj
covcor_from_zlist <- function(zlist, type = "cov"){
if(is(zlist[[1]], "matrix")){
lcov <- lapply(zlist, function(item){cov(item)})
lcor <- lapply(zlist, function(item){cor(item)})
lcov.diff.unadj.minus.adj <- lcov$unadj - lcov$adj
lcor.diff.unadj.minus.adj <- lcor$unadj - lcor$adj
} else{
lcov <- lapply(zlist.bydonor, function(item){
list("unadj" = cov(item[[1]]),
"adj" = cov(item[[2]]))})
lcor <- lapply(zlist.bydonor, function(item){
list("unadj" = cor(item[[1]]), "adj" = cor(item[[2]]))})
lcov.diff.unadj.minus.adj <- lapply(zlist.bydonor, function(item){
cov(item[[1]])-cov(item[[2]])})
lcor.diff.unadj.minus.adj <- lapply(zlist.bydonor, function(item){
cor(item[[1]])-cor(item[[2]])})
names(lcov) <- names(lcor) <-
names(lcov.diff.unadj.minus.adj) <-
names(lcor.diff.unadj.minus.adj) <- names(zlist.bydonor)
}
list(lcov = lcov, lcor = lcor,
lcov.diff.unadj.minus.adj = lcov.diff.unadj.minus.adj,
lcor.diff.unadj.minus.adj = lcor.diff.unadj.minus.adj)
}
lstat <- covcor_from_zlist(zlist)
lstat.bydonor <- covcor_from_zlist(zlist.bydonor)
lstat
Heatmap(lstat$lcov$unadj) + Heatmap(lstat$lcov$adj)
source("deconvo_method-paper/code/06_var-and-covar-celltypes/00_parameters.R")
sapply(libv, library, character.only = T)
Heatmap(lstat$lcov$unadj) + Heatmap(lstat$lcov$adj)
Heatmap(lstat$lcov.diff.unadj.minus.adj)
lstat$lcov.diff.unadj.minus.adj
as_tibble(lstat$lcov.diff.unadj.minus.adj)
pivot_longer(lstat$lcov.diff.unadj.minus.adj, names_to = "Var2", values_to = "value")
pheatmap(lstat$lcov.diff.unadj.minus.adj)
pheatmap(lstat$lcov.diff.unadj.minus.adj, display_numbers = T)
zlist.bydonor
head(zlist.bydonor[[1]])
pheatmap(lstat$lcor.diff.unadj.minus.adj, display_numbers = T)
lstat$lcor.diff.unadj.minus.adj
lstat$lcor$unadj
lstat$lcor$adj
lstat.bydonor$lcov$Br2720_mid
lstat.bydonor$lcov.diff.unadj.minus.adj$Br2720_mid
lstat.bydonor$lcov.diff.unadj.minus.adj$Br6471_mid
lstat.bydonor$lcov.diff.unadj.minus.adj$Br8492_post
lstat.bydonor$lcov.diff.unadj.minus.adj$Br3942_ant
lstat.bydonor$lcov.diff.unadj.minus.adj$Br2743_mid
cov.diff <- lapply(lstat.bydonor$lcov.diff.unadj.minus.adj, function(item){item[1,2]}) %>% unlist()
cov.diff
as.data.frame(cov.diff)
cor.diff <- lapply(lstat.bydonor$lcor.diff.unadj.minus.adj, function(item){item[1,2]}) %>% unlist() %>% as.data.frame()
cor.diff
rbind(cov.diff, cor.diff)
cbind(cor.diff, cov.diff)
# distribution of cov difference across donors
cov.diff <- lapply(lstat.bydonor$lcov.diff.unadj.minus.adj, function(item){item[1,2]}) %>% unlist() %>% as.data.frame()
cor.diff <- lapply(lstat.bydonor$lcor.diff.unadj.minus.adj, function(item){item[1,2]}) %>% unlist() %>% as.data.frame()
df.stat.bydonor <- cbind(cov.diff, cor.diff)
colnames(df.stat.bydonor) <- c("cov.diff", "cor.diff")
df.stat.bydonor$sample.id <- rownames(df.stat)
# distribution of cov difference across donors
cov.diff <- lapply(lstat.bydonor$lcov.diff.unadj.minus.adj, function(item){item[1,2]}) %>% unlist() %>% as.data.frame()
cor.diff <- lapply(lstat.bydonor$lcor.diff.unadj.minus.adj, function(item){item[1,2]}) %>% unlist() %>% as.data.frame()
df.stat.bydonor <- cbind(cov.diff, cor.diff)
colnames(df.stat.bydonor) <- c("cov.diff", "cor.diff")
df.stat.bydonor$sample.id <- rownames(df.stat.bydonor)
df.stat.bydonor
ggplot(df.stat.bydonor, aes(x = cov.diff, y = cor.diff)) + geom_point()
ggplot(df.stat.bydonor, aes(x = cov.diff, y = cor.diff)) + geom_point() +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0)
ggplot(df.stat.bydonor, aes(x = cov.diff, y = cor.diff)) +
theme_bw() + geom_point() + geom_label(label = sample.id) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0)
ggplot(df.stat.bydonor, aes(x = cov.diff, y = cor.diff)) +
theme_bw() + geom_point() + geom_label(aes(label = sample.id)) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0)
ggplot(df.stat.bydonor, aes(x = cov.diff, y = cor.diff)) +
theme_bw() + geom_point() + geom_text(aes(label = sample.id)) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0)
library(scuttle)
?findmarkers
library(scran)
?findMarkers
setwd("C:/Users/User/Documents/GitHub")
# load mae
new.mae.filename <- "mae_with-rpkm_additional-data_final.rda"
mae.final.filepath <- file.path("outputs", "01_prepare-datasets", new.mae.filename)
mae <- get(load(mae.final.filepath))
base.path <- file.path("code", "07_bulk-scale-abtest_dlpfc-cohort1")
# prep dependencies
source(file.path(base.path, "00_helper-functions.R"))
# prep data
source(file.path(base.path, "01-01_prepare-mae.R")) # prep mae data
source(file.path(base.path, "01-02_prep-s-vector.R"))
# run experiments
source(file.path(base.path, "02-01_rse-counts_shared-reference-experiments.R"))
base.path
"02-01_rse-counts_shared-reference-experiments.R"
expt <- data.frame(z.reference.type = c("shared", "within", "shared", "within"),
y.expression.scale = c("counts", "counts", "RPKM", "RPKM"))
expt <- do.call(rbind, lapply(seq(length(list.s.pred)), function(ii){
expt.iter <- expt
expt.iter$s.pred.set.name <- names(list.s.pred)[ii]
expt.iter$s.pred.set.values <- paste0(names(list.s.pred[[ii]]), ":",
list.s.pred[[ii]],collapse = ";")
expt.iter
}))
expt$cell.label.type <- "k2"
# table visualization
knitr::kable(expt)
data.dict <- list(z.reference.type = "What type of cell reference atlas was used. 'shared' is the same summary across donors and experiments, 'within' means a new reference was calculated based on each donor's own snRNAseq data.",
y.expression.scale = "What type of scaling was used in the bulk RNAseq expression data. 'counts' means unadjusted counts from SPEQeasy, 'RPKM' means the same as 'counts' but with RPKM-normalization, a type of gene/transcript-length normalization.",
s.pred.set.name = "Label of the s cell size scale factor set used (see plots).",
s.pred.set.values = "Values of the s cell size scale factor set used.",
cell.label.type = "Identifier of the cell type labels for experiments.")
data.dict <- do.call(rbind, lapply(seq(length(data.dict)), function(ii){c(names(data.dict)[ii], data.dict[[ii]])}))
knitr::kable(data.dict)
gc()
# load mae
new.mae.filename <- "mae_with-rpkm_additional-data_final.rda"
mae.final.filepath <- file.path("outputs", "01_prepare-datasets", new.mae.filename)
mae <- get(load(mae.final.filepath))
base.path <- file.path("code", "07_bulk-scale-abtest_dlpfc-cohort1")
# prep dependencies
source(file.path(base.path, "00_helper-functions.R"))
# prep data
source(file.path(base.path, "01-01_prepare-mae.R")) # prep mae data
source(file.path(base.path, "01-02_prep-s-vector.R"))
# run experiments
source(file.path(base.path, "02-01_rse-counts_shared-reference-experiments.R"))
base.path <- file.path("code", "07_bulk-scale-abtest_dlpfc-cohort1")
# prep dependencies
source(file.path(base.path, "00_helper-functions.R"))
# prep data
source(file.path(base.path, "01-01_prepare-mae.R")) # prep mae data
source(file.path(base.path, "01-02_prep-s-vector.R"))
# run experiments
source(file.path(base.path, "02-01-01_rse-counts_counts-yz_shared-reference-experiments.R"))
source(file.path(base.path, "02-01-02_rse-counts_lognorm-yz_shared-reference-experiments.R"))
# bind results
source(file.path(base.path, "03_prep-experiment-results.R"))
dim(df.s.k2.shared.counts)
dim(df.rn)
gc()
gc()
# load mae
new.mae.filename <- "mae_with-rpkm_additional-data_final.rda"
mae.final.filepath <- file.path("outputs", "01_prepare-datasets", new.mae.filename)
mae <- get(load(mae.final.filepath))
base.path <- file.path("code", "07_bulk-scale-abtest_dlpfc-cohort1")
# prep dependencies
source(file.path(base.path, "00_helper-functions.R"))
# prep data
source(file.path(base.path, "01-01_prepare-mae.R")) # prep mae data
source(file.path(base.path, "01-02_prep-s-vector.R"))
# run experiments
source(file.path(base.path, "02-01-01_rse-counts_counts-yz_shared-reference-experiments.R"))
source(file.path(base.path, "02-01-02_rse-counts_lognorm-yz_shared-reference-experiments.R"))
# bind results
source(file.path(base.path, "03_prep-experiment-results_rpkm-trail_cohort1.R"))
dim(df.k2)
head(df.k2)
df.k2 <- df.k2[df.k2$s.set.values=="glial=1,neuron=1",]
dim(df.k2)
table(df.k2$experiment.type)
table(df.k2$bulk.scale.type)
gc()
# load mae
new.mae.filename <- "mae_with-rpkm_additional-data_final.rda"
mae.final.filepath <- file.path("outputs", "01_prepare-datasets", new.mae.filename)
mae <- get(load(mae.final.filepath))
base.path <- file.path("code", "07_bulk-scale-abtest_dlpfc-cohort1")
# prep dependencies
source(file.path(base.path, "00_helper-functions.R"))
# prep data
source(file.path(base.path, "01-01_prepare-mae.R")) # prep mae data
source(file.path(base.path, "01-02_prep-s-vector.R"))
# run experiments
source(file.path(base.path, "02-01-01_rse-counts_counts-yz_shared-reference-experiments.R"))
source(file.path(base.path, "02-01-02_rse-rpkm_counts-yz_shared-reference-experiments.R"))
base.path <- file.path("code", "07_bulk-scale-abtest_dlpfc-cohort1")
# prep dependencies
source(file.path(base.path, "00_helper-functions.R"))
# prep data
source(file.path(base.path, "01-01_prepare-mae.R")) # prep mae data
source(file.path(base.path, "01-02_prep-s-vector.R"))
# run experiments
source(file.path(base.path, "02-01-01_rse-counts_counts-yz_shared-reference-experiments.R"))
source(file.path(base.path, "02-03-01_rse-rpkm_counts-yz_shared-reference-experiments.R"))
# bind results
source(file.path(base.path, "03_prep-experiment-results_rpkm-trail_cohort1.R"))
# filter relevant results
s.set.keep <- c("glial=1,neuron=1", "glial=3,neuron=10")
df.k2 <- df.k2[df.k2$s.set.values=="glial=1,neuron=1",]
s.set.keep
df.k2
dim(df.k2)
table(df.k2$experiment.type, df.k2$s.set.values)
s.set.keep <- c("glial=1,neuron=1", "glial=3,neuron=10")
df.k2 <- df.k2[df.k2$s.set.values %in% s.set.keep,]
df.k2
table(df.k2$experiment.type, df.k2$s.set.values)
base.path <- file.path("code", "07_bulk-scale-abtest_dlpfc-cohort1")
# prep dependencies
source(file.path(base.path, "00_helper-functions.R"))
# prep data
source(file.path(base.path, "01-01_prepare-mae.R")) # prep mae data
source(file.path(base.path, "01-02_prep-s-vector.R"))
# run experiments
source(file.path(base.path, "02-01-01_rse-counts_counts-yz_shared-reference-experiments.R"))
source(file.path(base.path, "02-03-01_rse-rpkm_counts-yz_shared-reference-experiments.R"))
# bind results
source(file.path(base.path, "03_prep-experiment-results_rpkm-trail_cohort1.R"))
# filter relevant results
s.set.keep <- c("glial=1,neuron=1", "glial=3,neuron=10")
df.k2 <- df.k2[df.k2$s.set.values %in% s.set.keep,]
gc()
setwd("C:/Users/User/Documents/GitHub")
setwd("C:/Users/User/Documents/GitHub/deconvo_method-paper")
# load mae
new.mae.filename <- "mae_with-rpkm_additional-data_final.rda"
mae.final.filepath <- file.path("outputs", "01_prepare-datasets", new.mae.filename)
mae <- get(load(mae.final.filepath))
base.path <- file.path("code", "07_bulk-scale-abtest_dlpfc-cohort1")
# prep dependencies
source(file.path(base.path, "00_helper-functions.R"))
# prep data
source(file.path(base.path, "01-01_prepare-mae.R")) # prep mae data
source(file.path(base.path, "01-02_prep-s-vector.R"))
# run experiments
source(file.path(base.path, "02-01-01_rse-counts_counts-yz_shared-reference-experiments.R"))
source(file.path(base.path, "02-03-01_rse-rpkm_counts-yz_shared-reference-experiments.R"))
# bind results
source(file.path(base.path, "03_prep-experiment-results_rpkm-trail_cohort1.R"))
s.set.keep <- c("glial=1,neuron=1", "glial=3,neuron=10")
df.k2 <- df.k2[df.k2$s.set.values %in% s.set.keep,]
table(df.k2$s.set.values, df.k2$experiment.type)
table(df.k2$s.set.values, df.k2$experiment.type, df.k2$bulk.scale.type)
table(df.k2$s.set.values, df.k2$experiment.type, df.k2$bulk.scale.type) %>% as.data.frame()
s.set.keep <- c("glial=1,neuron=1", "glial=3,neuron=10")
df.k2 <- df.k2[df.k2$s.set.values %in% s.set.keep,]
# show expt table
expt.table <- table(df.k2$s.set.values, df.k2$experiment.type, df.k2$bulk.scale.type) %>% as.data.frame()
colnames(expt.table) <- c("s.set.values", "reference.type", "bulk.scale.type", "num.results")
knitr::kable(expt.table)
head(df.k2)
names(assays(rse.rpkm))
names(assays(sce.iter))
# load mae
new.mae.filename <- "mae_with-rpkm_additional-data_final.rda"
mae.final.filepath <- file.path("outputs", "01_prepare-datasets", new.mae.filename)
mae <- get(load(mae.final.filepath))
base.path <- file.path("code", "07_bulk-scale-abtest_dlpfc-cohort1")
# prep dependencies
source(file.path(base.path, "00_helper-functions.R"))
# prep data
source(file.path(base.path, "01-01_prepare-mae.R")) # prep mae data
source(file.path(base.path, "01-02_prep-s-vector.R"))
# run experiments
source(file.path(base.path, "02-01-01_rse-counts_counts-yz_shared-reference-experiments.R"))
source(file.path(base.path, "02-03-01_rse-rpkm_counts-yz_shared-reference-experiments.R"))
# bind results
source(file.path(base.path, "03_prep-experiment-results_rpkm-trail_cohort1.R"))
s.set.keep <- c("glial=1,neuron=1", "glial=3,neuron=10")
df.k2 <- df.k2[df.k2$s.set.values %in% s.set.keep,]
# show expt table
expt.table <- table(df.k2$s.set.values, df.k2$experiment.type, df.k2$bulk.scale.type) %>% as.data.frame()
colnames(expt.table) <- c("s.set.values", "reference.type", "bulk.scale.type", "num.results")
knitr::kable(expt.table)
gc()
# load mae
new.mae.filename <- "mae_with-rpkm_additional-data_final.rda"
mae.final.filepath <- file.path("outputs", "01_prepare-datasets", new.mae.filename)
mae <- get(load(mae.final.filepath))
base.path <- file.path("code", "07_bulk-scale-abtest_dlpfc-cohort1")
# prep dependencies
source(file.path(base.path, "00_helper-functions.R"))
# prep data
source(file.path(base.path, "01-01_prepare-mae.R")) # prep mae data
source(file.path(base.path, "01-02_prep-s-vector.R"))
# run experiments
source(file.path(base.path, "02-01-01_rse-counts_counts-yz_shared-reference-experiments.R"))
source(file.path(base.path, "02-03-01_rse-rpkm_counts-yz_shared-reference-experiments.R"))
# bind results
source(file.path(base.path, "03_prep-experiment-results_rpkm-trail_cohort1.R"))
s.set.keep <- c("glial=1,neuron=1", "glial=3,neuron=10")
df.k2 <- df.k2[df.k2$s.set.values %in% s.set.keep,]
# show expt table
expt.table <- table(df.k2$s.set.values, df.k2$experiment.type, df.k2$bulk.scale.type) %>% as.data.frame()
colnames(expt.table) <- c("s.set.values", "reference.type", "bulk.scale.type", "num.results")
knitr::kable(expt.table)
s.set.keep <- c("glial=1,neuron=1", "glial=3,neuron=10")
df.k2 <- df.k2[df.k2$s.set.values %in% s.set.keep,]
# show expt table
expt.table <- table(df.k2$s.set.values, df.k2$experiment.type, df.k2$bulk.scale.type) %>% as.data.frame()
colnames(expt.table) <- c("s.set.values", "reference.type", "bulk.scale.type", "assay.name.lutearg", "num.results")
head(df.k2)
table(df.k2$assay.name.lutearg)
s.set.keep <- c("glial=1,neuron=1", "glial=3,neuron=10")
df.k2 <- df.k2[df.k2$s.set.values %in% s.set.keep,]
# show expt table
expt.table <- table(df.k2$s.set.values, df.k2$experiment.type,
df.k2$bulk.scale.type, df.k2$assay.name.lutearg) %>%
as.data.frame()
colnames(expt.table) <- c("s.set.values", "reference.type", "bulk.scale.type", "assay.name.lutearg", "num.results")
knitr::kable(expt.table)
ggplot(df.k2, aes(x = true.neuron, y = neuron, color = bulk.scale.type)) + theme_bw() +
geom_point(alpha = 0.5) + geom_abline(slope = 1, intercept = 0) +
facet_wrap(~experiment.type*s.set.label)
ggplot(df.k2, aes(x = true.neuron, y = neuron, color = bulk.scale.type)) + theme_bw() +
geom_point(alpha = 0.5) + geom_abline(slope = 1, intercept = 0) +
facet_wrap(~s.set.label)
names(assays(y.iter))
names(assays(rse.rpkm))
gc()
# load mae
new.mae.filename <- "mae_with-rpkm_additional-data_final.rda"
mae.final.filepath <- file.path("outputs", "01_prepare-datasets", new.mae.filename)
mae <- get(load(mae.final.filepath))
base.path <- file.path("code", "07_bulk-scale-abtest_dlpfc-cohort1")
# prep dependencies
source(file.path(base.path, "00_helper-functions.R"))
# prep data
source(file.path(base.path, "01-01_prepare-mae.R")) # prep mae data
source(file.path(base.path, "01-02_prep-s-vector.R"))
# run experiments
source(file.path(base.path, "02-01-01_rse-counts_counts-yz_shared-reference-experiments.R"))
source(file.path(base.path, "02-03-01_rse-rpkm_counts-yz_shared-reference-experiments.R"))
source(file.path(base.path, "02-01-02_rse-counts_counts-yz_shared-reference-experiments.R"))
base.path <- file.path("code", "07_bulk-scale-abtest_dlpfc-cohort1")
# prep dependencies
source(file.path(base.path, "00_helper-functions.R"))
# prep data
source(file.path(base.path, "01-01_prepare-mae.R")) # prep mae data
source(file.path(base.path, "01-02_prep-s-vector.R"))
# run experiments
source(file.path(base.path, "02-01-01_rse-counts_counts-yz_shared-reference-experiments.R"))
source(file.path(base.path, "02-03-01_rse-rpkm_counts-yz_shared-reference-experiments.R"))
source(file.path(base.path, "02-01-02_rse-counts_lognorm-yz_shared-reference-experiments.R"))
source(file.path(base.path, "02-03-02_rse-rpkm_lognorm-yz_shared-reference-experiments.R"))
# bind results
source(file.path(base.path, "03_prep-experiment-results_rpkm-trail_cohort1.R"))
s.set.keep <- c("glial=1,neuron=1", "glial=3,neuron=10")
df.k2 <- df.k2[df.k2$s.set.values %in% s.set.keep,]
# show expt table
expt.table <- table(df.k2$s.set.values, df.k2$experiment.type,
df.k2$bulk.scale.type, df.k2$assay.name.lutearg) %>%
as.data.frame()
colnames(expt.table) <- c("s.set.values", "reference.type", "bulk.scale.type", "assay.name.lutearg", "num.results")
knitr::kable(expt.table)
base.path <- file.path("code", "07_bulk-scale-abtest_dlpfc-cohort1")
# prep dependencies
source(file.path(base.path, "00_helper-functions.R"))
# prep data
source(file.path(base.path, "01-01_prepare-mae.R")) # prep mae data
source(file.path(base.path, "01-02_prep-s-vector.R"))
# run experiments
source(file.path(base.path, "02-01-01_rse-counts_counts-yz_shared-reference-experiments.R"))
source(file.path(base.path, "02-03-01_rse-rpkm_counts-yz_shared-reference-experiments.R"))
source(file.path(base.path, "02-01-02_rse-counts_lognorm-yz_shared-reference-experiments.R"))
source(file.path(base.path, "02-03-02_rse-rpkm_lognorm-yz_shared-reference-experiments.R"))
# bind results
source(file.path(base.path, "03_prep-experiment-results_rpkm-trail_cohort1.R"))
base.path <- file.path("code", "07_bulk-scale-abtest_dlpfc-cohort1")
# prep dependencies
source(file.path(base.path, "00_helper-functions.R"))
# prep data
source(file.path(base.path, "01-01_prepare-mae.R")) # prep mae data
source(file.path(base.path, "01-02_prep-s-vector.R"))
# run experiments
source(file.path(base.path, "02-01-01_rse-counts_counts-yz_shared-reference-experiments.R"))
source(file.path(base.path, "02-03-01_rse-rpkm_counts-yz_shared-reference-experiments.R"))
source(file.path(base.path, "02-01-02_rse-counts_logcounts-lutearg_shared-reference-experiments.R"))
source(file.path(base.path, "02-03-02_rse-rpkm_logcounts-lutearg_shared-reference-experiments.R"))
# bind results
source(file.path(base.path, "03_prep-experiment-results_rpkm-trail_cohort1.R"))
s.set.keep <- c("glial=1,neuron=1", "glial=3,neuron=10")
df.k2 <- df.k2[df.k2$s.set.values %in% s.set.keep,]
# show expt table
expt.table <- table(df.k2$s.set.values, df.k2$experiment.type,
df.k2$bulk.scale.type, df.k2$assay.name.lutearg) %>%
as.data.frame()
colnames(expt.table) <- c("s.set.values", "reference.type", "bulk.scale.type", "assay.name.lutearg", "num.results")
knitr::kable(expt.table)
data.dict <- list(z.reference.type = "What type of cell reference atlas was used. 'shared' is the same summary across donors and experiments, 'within' means a new reference was calculated based on each donor's own snRNAseq data.",
y.expression.scale = "What type of scaling was used in the bulk RNAseq expression data. 'counts' means unadjusted counts from SPEQeasy, 'RPKM' means the same as 'counts' but with RPKM-normalization, a type of gene/transcript-length normalization.",
s.pred.set.name = "Label of the s cell size scale factor set used (see plots).",
s.pred.set.values = "Values of the s cell size scale factor set used.",
cell.label.type = "Identifier of the cell type labels for experiments.")
data.dict <- do.call(rbind, lapply(seq(length(data.dict)), function(ii){c(names(data.dict)[ii], data.dict[[ii]])}))
knitr::kable(data.dict)
ggplot(df.k2, aes(x = true.neuron, y = neuron, color = bulk.scale.type)) + theme_bw() +
geom_point(alpha = 0.5) + geom_abline(slope = 1, intercept = 0) +
facet_wrap(~experiment.type*s.set.label)
ggplot(df.k2, aes(x = true.neuron, y = neuron)) + theme_bw() +
geom_point(alpha = 0.5) + geom_abline(slope = 1, intercept = 0) +
facet_wrap(~s.set.label*assay.name.lutearg*bulk.scale.type)
ggplot(df.k2, aes(x = true.neuron, y = neuron, color = bulk.scale.type)) + theme_bw() +
geom_point(alpha = 0.5) + geom_abline(slope = 1, intercept = 0) +
facet_wrap(~s.set.label*assay.name.lutearg)
gc()
