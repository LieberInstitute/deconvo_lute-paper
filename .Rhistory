num.cell.types <- length(cell.types)
df.tall.ct <- do.call(cbind, lapply(cell.types, function(cell.type){
df.tall[df.tall[,1]==cell.type, 2]
}))
colnames(df.tall.ct) <- "cell.types"
rep(df.tall$assay, num.cell.types)
cell.types <- c("glial", "neuron")
num.cell.types <- length(cell.types)
df.tall.ct <- do.call(cbind, lapply(cell.types, function(cell.type){
df.tall[df.tall[,1]==cell.type, 2]
}))
df.tall.ct <- as.data.frame(df.tall.ct)
colnames(df.tall.ct) <- "cell.types"
df.tall.ct$assay <- rep(df.tall$assay, num.cell.types)
cell.types <- c("glial", "neuron")
num.cell.types <- length(cell.types)
df.tall.ct <- do.call(cbind, lapply(cell.types, function(cell.type){
df.tall[df.tall[,1]==cell.type, 2]
}))
head(df.tall.ct)
dim(df.tall.ct)
dim(df.tall)
cell.types <- c("glial", "neuron")
num.cell.types <- length(cell.types)
num.entries.tall <- length(which(df.tall[,1]==cell.types[1]))
df.tall.ct <- do.call(cbind, lapply(cell.types, function(cell.type){
df.tall[df.tall[,1]==cell.type, 2]
}))
df.tall.ct <- as.data.frame(df.tall.ct)
colnames(df.tall.ct) <- "cell.types"
df.tall.ct$assay <- rep(df.tall$assay, num.entries.tall)
dim(df.tall.ct)
num.entries.tall
df.tall.ct <- as.data.frame(df.tall.ct)
colnames(df.tall.ct) <- "cell.types"
df.tall.ct$assay <- rep(df.tall$assay, num.cell.types)
cell.types <- c("glial", "neuron")
num.cell.types <- length(cell.types)
num.entries.tall <- length(which(df.tall[,1]==cell.types[1]))
df.tall.ct <- do.call(cbind, lapply(cell.types, function(cell.type){
df.tall[df.tall[,1]==cell.type, 2]
}))
df.tall.ct <- as.data.frame(df.tall.ct)
colnames(df.tall.ct) <- "cell.types"
df.tall.ct$assay <- rep(df.tall[df.tall[,1]==cell.types[1],]$assay, num.cell.types)
length(df.tall[df.tall[,1]==cell.types[1],]$assay)
num.cell.types
dim(df.tall.ct)
cell.types <- c("glial", "neuron")
num.cell.types <- length(cell.types)
num.entries.tall <- length(which(df.tall[,1]==cell.types[1]))
df.tall.ct <- do.call(cbind, lapply(cell.types, function(cell.type){
df.tall[df.tall[,1]==cell.type, 2]
}))
df.tall.ct <- as.data.frame(df.tall.ct)
colnames(df.tall.ct) <- "cell.types"
df.tall.ct$assay <- df.tall[df.tall[,1]==cell.types[1],]$assay
df.tall.ct$group.id <- df.tall[df.tall[,1]==cell.types[1],]$group.id
head(df.tall.ct)
cell.types <- c("glial", "neuron")
num.cell.types <- length(cell.types)
num.entries.tall <- length(which(df.tall[,1]==cell.types[1]))
df.tall.ct <- do.call(cbind, lapply(cell.types, function(cell.type){
df.tall[df.tall[,1]==cell.type, 2]
}))
df.tall.ct <- as.data.frame(df.tall.ct)
colnames(df.tall.ct) <- cell.types
colnames(df.tall.ct) <- "cell.types"
df.tall.ct$assay <- df.tall[df.tall[,1]==cell.types[1],]$assay
df.tall.ct$group.id <- df.tall[df.tall[,1]==cell.types[1],]$group.id
head(df.tall.ct)
cell.types <- c("glial", "neuron")
num.cell.types <- length(cell.types)
num.entries.tall <- length(which(df.tall[,1]==cell.types[1]))
df.tall.ct <- do.call(cbind, lapply(cell.types, function(cell.type){
df.tall[df.tall[,1]==cell.type, 2]
}))
df.tall.ct <- as.data.frame(df.tall.ct)
colnames(df.tall.ct) <- cell.types
df.tall.ct$assay <- df.tall[df.tall[,1]==cell.types[1],]$assay
df.tall.ct$group.id <- df.tall[df.tall[,1]==cell.types[1],]$group.id
head(df.tall.ct)
# STUFF TO GO INTO THE ARGS
assay.name1 <- "sn1.rnaseq"
assay.name2 <- "rnascope.image"
sce.counts <- get_group_cell_counts(mae[[1]], "Sample", "k2")
rnascope.counts <- get_group_cell_counts(mae[["rnascope.image"]], "Sample", "k2")
assay.name.vector <- c(assay.name1, assay.name2)
cell.types <- c("glial", "neuron")
# get tall df
df.tall <- do.call(rbind, lapply(assay.name.vector, function(assay.name.iter){
df.iter <- get_group_cell_counts(mae[[assay.name.iter]], "Sample", "k2")
df.iter$assay <- assay.name.iter
return(df.iter)
}))
# df.tall.ct
num.cell.types <- length(cell.types)
num.entries.tall <- length(which(df.tall[,1]==cell.types[1]))
df.tall.ct <- do.call(cbind, lapply(cell.types, function(cell.type){
df.tall[df.tall[,1]==cell.type, 2]
}))
df.tall.ct <- as.data.frame(df.tall.ct)
colnames(df.tall.ct) <- cell.types
df.tall.ct$assay <- df.tall[df.tall[,1]==cell.types[1],]$assay
df.tall.ct$group.id <- df.tall[df.tall[,1]==cell.types[1],]$group.id
head(df.tall.ct)
?prcomp
pca <- prcomp(data = df.tall.ct)
dim(pca)
pca <- prcomp(x = df.tall.ct)
mat.pca <- df.tall.ct[,seq(num.cell.types)] %>% as.numeric()
mat.pca <- as.numeric(df.tall.ct[,seq(num.cell.types)])
as.numeric(df.tall.ct[,seq(num.cell.types)])
library(dplyr)
mat.pca <- df.tall.ct[,seq(num.cell.types)] %>% as.numeric()
head(mat.pca)
mat.pca <- df.tall.ct[,seq(num.cell.types)]
pca <- prcomp(x = mat.pca)
pca
mat.pca <- t(df.tall.ct[,seq(num.cell.types)])
pca <- prcomp(x = mat.pca)
pca
head(pca)
pca.res <- pca$x
head(pca.res)
head(pca$)
pca.res <- pca$x
ggplot(pca.res, aes(x = PC1, y = PC2)) + geom_point()
library(dplyr)
library(ggplot2)
mat.pca <- t(df.tall.ct[,seq(num.cell.types)])
pca <- prcomp(x = mat.pca)
pca.res <- pca$x
ggplot(pca.res, aes(x = PC1, y = PC2)) + geom_point()
pca.res <- pca$x %>% as.data.frame()
ggplot(pca.res, aes(x = PC1, y = PC2)) + geom_point()
head(pca.res)
mat.pca <- df.tall.ct[,seq(num.cell.types)]
pca <- prcomp(x = mat.pca)
head(pca)
dim(mat.pca)
dim(prcomp(df.tall.ct[,seq(num.cell.types)])$x)
dim(prcomp(t(df.tall.ct[,seq(num.cell.types)]))$x)
res1 <- prcomp(df.tall.ct[,seq(num.cell.types)])$x
res2 <- prcomp(t(df.tall.ct[,seq(num.cell.types)]))$x
res1
head(res)
heatmap(res1)
dim(res1)
dim(res2)
head(df.tall)
head(df.tall.ct)
head(df.tall)
head(df.tall.ct)
gc()
setwd("C:/Users/User/Documents/GitHub/deconvo_method-paper")
knitr::opts_chunk$set(echo = TRUE)
setwd("..")
setwd("..")
mae <- get(load(file.path("outputs", "01_prepare-datasets", "mae_with-rpkm_additional-data_final.rda")))
get_cell_counts <- function(sce.iter, variable){as.data.frame(table(sce.iter[[variable]]))}
get_group_cell_counts <- function(sce, group.variable, celltype.variable){
group.id.vector <- unique(sce[[group.variable]])
do.call(rbind, lapply(group.id.vector, function(group.id){
sce.iter <- sce[,sce[[group.variable]]==group.id]
counts.iter <- get_cell_counts(sce.iter, celltype.variable)
counts.iter$group.id <- group.id
counts.iter
}))
}
get_group_cell_counts(mae[[1]], "Sample", "k2")
mae_celltype_counts_by_assay <- function(
mae,
assay.name.vector = c("sn1.rnaseq", "rnascope.image"),
sample.id.variable = "Sample",
celltype.variable = "k2"){
# make a table of the following:
# SAMPLES (ROWS) X ASSAY-CELLTYPE (COLUMNS)
categories <- paste0()
# STUFF TO GO INTO THE ARGS
assay.name1 <- "sn1.rnaseq"
assay.name2 <- "rnascope.image"
sce.counts <- get_group_cell_counts(mae[[1]], "Sample", "k2")
rnascope.counts <- get_group_cell_counts(mae[["rnascope.image"]], "Sample", "k2")
assay.name.vector <- c(assay.name1, assay.name2)
cell.types <- c("glial", "neuron")
# get tall df
df.tall <- do.call(rbind, lapply(assay.name.vector, function(assay.name.iter){
df.iter <- get_group_cell_counts(mae[[assay.name.iter]], "Sample", "k2")
df.iter$assay <- assay.name.iter
return(df.iter)
}))
df.tall$ct.assay.label <- paste0(df.tall[,1], ";", df.tall$assay)
# df.tall.ct
num.cell.types <- length(cell.types)
num.entries.tall <- length(which(df.tall[,1]==cell.types[1]))
df.tall.ct <- do.call(cbind, lapply(cell.types, function(cell.type){
df.tall[df.tall[,1]==cell.type, 2]
}))
df.tall.ct <- as.data.frame(df.tall.ct)
colnames(df.tall.ct) <- cell.types
df.tall.ct$assay <- df.tall[df.tall[,1]==cell.types[1],]$assay
df.tall.ct$group.id <- df.tall[df.tall[,1]==cell.types[1],]$group.id
return(list(df.tall, df.tall.ct))
}
df.tall <- mae_celltype_counts_by_assay[["df.tall"]]
get_cell_counts <- function(sce.iter, variable){as.data.frame(table(sce.iter[[variable]]))}
get_group_cell_counts <- function(sce, group.variable, celltype.variable){
group.id.vector <- unique(sce[[group.variable]])
do.call(rbind, lapply(group.id.vector, function(group.id){
sce.iter <- sce[,sce[[group.variable]]==group.id]
counts.iter <- get_cell_counts(sce.iter, celltype.variable)
counts.iter$group.id <- group.id
counts.iter
}))
}
get_group_cell_counts(mae[[1]], "Sample", "k2")
mae_celltype_counts_by_assay <- function(
mae,
assay.name.vector = c("sn1.rnaseq", "rnascope.image"),
sample.id.variable = "Sample",
celltype.variable = "k2"){
# make a table of the following:
# SAMPLES (ROWS) X ASSAY-CELLTYPE (COLUMNS)
categories <- paste0()
# STUFF TO GO INTO THE ARGS
assay.name1 <- "sn1.rnaseq"
assay.name2 <- "rnascope.image"
sce.counts <- get_group_cell_counts(mae[[1]], "Sample", "k2")
rnascope.counts <- get_group_cell_counts(mae[["rnascope.image"]], "Sample", "k2")
assay.name.vector <- c(assay.name1, assay.name2)
cell.types <- c("glial", "neuron")
# get tall df
df.tall <- do.call(rbind, lapply(assay.name.vector, function(assay.name.iter){
df.iter <- get_group_cell_counts(mae[[assay.name.iter]], "Sample", "k2")
df.iter$assay <- assay.name.iter
return(df.iter)
}))
df.tall$ct.assay.label <- paste0(df.tall[,1], ";", df.tall$assay)
# df.tall.ct
num.cell.types <- length(cell.types)
num.entries.tall <- length(which(df.tall[,1]==cell.types[1]))
df.tall.ct <- do.call(cbind, lapply(cell.types, function(cell.type){
df.tall[df.tall[,1]==cell.type, 2]
}))
df.tall.ct <- as.data.frame(df.tall.ct)
colnames(df.tall.ct) <- cell.types
df.tall.ct$assay <- df.tall[df.tall[,1]==cell.types[1],]$assay
df.tall.ct$group.id <- df.tall[df.tall[,1]==cell.types[1],]$group.id
return(list(df.tall, df.tall.ct))
}
df.tall <- mae_celltype_counts_by_assay(mae)[["df.tall"]]
head(df.tall)
dim(df.tall)
get_cell_counts <- function(sce.iter, variable){as.data.frame(table(sce.iter[[variable]]))}
get_group_cell_counts <- function(sce, group.variable, celltype.variable){
group.id.vector <- unique(sce[[group.variable]])
do.call(rbind, lapply(group.id.vector, function(group.id){
sce.iter <- sce[,sce[[group.variable]]==group.id]
counts.iter <- get_cell_counts(sce.iter, celltype.variable)
counts.iter$group.id <- group.id
counts.iter
}))
}
mae_celltype_counts_by_assay <- function(
mae,
assay.name.vector = c("sn1.rnaseq", "rnascope.image"),
sample.id.variable = "Sample",
celltype.variable = "k2",
cell.types = c("glial", "neuron")){
#
# make a table of the following:
# SAMPLES (ROWS) X ASSAY-CELLTYPE (COLUMNS)
#
#
# get tall df
df.tall <- do.call(rbind, lapply(assay.name.vector, function(assay.name.iter){
df.iter <- get_group_cell_counts(mae[[assay.name.iter]], "Sample", "k2")
df.iter$assay <- assay.name.iter
return(df.iter)
}))
df.tall$ct.assay.label <- paste0(df.tall[,1], ";", df.tall$assay)
# df.tall.ct
num.cell.types <- length(cell.types)
num.entries.tall <- length(which(df.tall[,1]==cell.types[1]))
df.tall.ct <- do.call(cbind, lapply(cell.types, function(cell.type){
df.tall[df.tall[,1]==cell.type, 2]
}))
df.tall.ct <- as.data.frame(df.tall.ct)
colnames(df.tall.ct) <- cell.types
df.tall.ct$assay <- df.tall[df.tall[,1]==cell.types[1],]$assay
df.tall.ct$group.id <- df.tall[df.tall[,1]==cell.types[1],]$group.id
return(list(df.tall, df.tall.ct))
}
df.tall <- mae_celltype_counts_by_assay(mae)[["df.tall"]]
head(df.tall)
mae_celltype_counts_by_assay
assay.name.vector = c("sn1.rnaseq", "rnascope.image")
sample.id.variable = "Sample"
celltype.variable = "k2"
cell.types = c("glial", "neuron")
# get tall df
df.tall <- do.call(rbind, lapply(assay.name.vector, function(assay.name.iter){
df.iter <- get_group_cell_counts(mae[[assay.name.iter]],
sample.id.variable, celltype.variable)
df.iter$assay <- assay.name.iter
return(df.iter)
}))
df.tall$ct.assay.label <- paste0(df.tall[,1], ";", df.tall$assay)
# df.tall.ct
num.cell.types <- length(cell.types)
num.entries.tall <- length(which(df.tall[,1]==cell.types[1]))
df.tall.ct <- do.call(cbind, lapply(cell.types, function(cell.type){
df.tall[df.tall[,1]==cell.type, 2]
}))
df.tall.ct <- as.data.frame(df.tall.ct)
colnames(df.tall.ct) <- cell.types
df.tall.ct$assay <- df.tall[df.tall[,1]==cell.types[1],]$assay
df.tall.ct$group.id <- df.tall[df.tall[,1]==cell.types[1],]$group.id
list(df.tall, df.tall.ct)
get_cell_counts <- function(sce.iter, variable){as.data.frame(table(sce.iter[[variable]]))}
get_group_cell_counts <- function(sce, group.variable, celltype.variable){
group.id.vector <- unique(sce[[group.variable]])
do.call(rbind, lapply(group.id.vector, function(group.id){
sce.iter <- sce[,sce[[group.variable]]==group.id]
counts.iter <- get_cell_counts(sce.iter, celltype.variable)
counts.iter$group.id <- group.id
counts.iter
}))
}
mae_celltype_counts_by_assay <- function(
mae,
assay.name.vector = c("sn1.rnaseq", "rnascope.image"),
sample.id.variable = "Sample",
celltype.variable = "k2",
cell.types = c("glial", "neuron")){
#
# make a table of the following:
# SAMPLES (ROWS) X ASSAY-CELLTYPE (COLUMNS)
#
#
# get tall df
df.tall <- do.call(rbind, lapply(assay.name.vector, function(assay.name.iter){
df.iter <- get_group_cell_counts(mae[[assay.name.iter]],
sample.id.variable, celltype.variable)
df.iter$assay <- assay.name.iter
return(df.iter)
}))
df.tall$ct.assay.label <- paste0(df.tall[,1], ";", df.tall$assay)
# df.tall.ct
num.cell.types <- length(cell.types)
num.entries.tall <- length(which(df.tall[,1]==cell.types[1]))
df.tall.ct <- do.call(cbind, lapply(cell.types, function(cell.type){
df.tall[df.tall[,1]==cell.type, 2]
}))
df.tall.ct <- as.data.frame(df.tall.ct)
colnames(df.tall.ct) <- cell.types
df.tall.ct$assay <- df.tall[df.tall[,1]==cell.types[1],]$assay
df.tall.ct$group.id <- df.tall[df.tall[,1]==cell.types[1],]$group.id
return(list(df.tall = df.tall, df.tall.ct = df.tall.ct))
}
df.tall <- mae_celltype_counts_by_assay(mae)[["df.tall"]]
head(df.tall)
celltypes.assays <- unique(df.tall$ct.assay.label)
num.cell.types <- length(cell.types)
num.entries.tall <- length(unique(df.tall$group.id))
celltype.assay
celltypes.assays
celltype.assay=celltypes.assays[1]
df.tall[df.tall[,5]==celltype.assay, 2]
num.entries.tall
celltype.assay
dim(df.tall[df.tall[,5]==celltype.assay, 2])
celltype.assay
df.tall[df.tall[,5]==celltype.assay, 2]
length(df.tall[df.tall[,5]==celltype.assay, 2])
dim(df.tall)
celltypes.assays <- unique(df.tall$ct.assay.label)
num.cell.types <- length(cell.types)
num.entries.tall <- length(unique(df.tall$group.id))*num.cell.types
df.tall.ct <- do.call(cbind, lapply(celltypes.assays, function(celltype.assay){
df.tall[df.tall[,5]==celltype.assay, 2]
}))
df.tall.ct
head(df.tall.ct)
num.entries.tall
dim(df.tall.ct)
dim(df.tall)
# df.tall.ct.assay
celltypes.assays <- unique(df.tall$ct.assay.label)
num.cell.types <- length(cell.types)
num.entries.tall <- length(unique(df.tall$group.id))*num.cell.types
df.tall.ct.assay <- do.call(cbind, lapply(celltypes.assays, function(celltype.assay){
df.tall[df.tall[,5]==celltype.assay, 2]
}))
df.tall.ct.assay <- as.data.frame(df.tall.ct.assay)
colnames(df.tall.ct.assay) <- cell.types
df.tall.ct.assay$assay <- df.tall[df.tall[,1]==cell.types[1],]$assay
head(df.tall.ct.assay)
num.entries.tall
celltypes.assays <- unique(df.tall$ct.assay.label)
num.cell.types <- length(cell.types)
num.entries.tall <- length(unique(df.tall$group.id))*num.cell.types
num.entries.tall
celltypes.assays
# df.tall.ct.assay
celltypes.assays <- unique(df.tall$ct.assay.label)
num.cell.types <- length(cell.types)
num.entries.tall <- length(unique(df.tall$group.id))*num.cell.types
df.tall.filt <- df.tall[df.tall$Var1 %in% cell.types,]
df.tall.ct.assay <- do.call(cbind, lapply(celltypes.assays, function(celltype.assay){
df.tall[df.tall[,5]==celltype.assay, 2]
}))
df.tall.ct.assay <- as.data.frame(df.tall.ct.assay)
df.tall.ct.assay
dim(df.tall.ct.assay)
head(df.tall.ct.assay)
celltype.assay
df.tall[df.tall[,5]==celltype.assay, 2]
length(df.tall[df.tall[,5]==celltype.assay, 2])
# df.tall.ct.assay
celltypes.assays <- unique(df.tall$ct.assay.label)
num.cell.types <- length(cell.types)
num.entries.tall <- length(unique(df.tall$group.id))
df.tall.filt <- df.tall[df.tall$Var1 %in% cell.types,]
df.tall.ct.assay <- do.call(cbind, lapply(celltypes.assays, function(celltype.assay){
df.tall[df.tall[,5]==celltype.assay, 2]
}))
df.tall.ct.assay <- as.data.frame(df.tall.ct.assay)
dim(df.tall.ct.assay)
df.tall.ct.assay
length9 df.tall[df.tall[,5]==celltype.assay, 2]
length( df.tall[df.tall[,5]==celltype.assay, 2])
head(df.tall)
celltypes.assays <- unique(df.tall$ct.assay.label)
num.cell.types <- length(cell.types)
num.entries.tall <- length(unique(df.tall$group.id))
df.tall.filt <- df.tall[df.tall$Var1 %in% cell.types,]
df.tall.ct.assay <- do.call(cbind, lapply(celltypes.assays, function(celltype.assay){
df.tall.filt[df.tall.filt[,5]==celltype.assay, 2]
}))
dim(df.tall.ct.assay)
unique(df.tall.ct.assay)
unique(df.tall.ct.assay)df.tall.ct.assay <- do.call(cbind, lapply(celltypes.assays, function(celltype.assay){
length(celltypes.assays)
head(df.tall.filt)
df.tall.filt[df.tall.filt[,5]==celltype.assay, ]
unique(df.tall.filt[df.tall.filt[,5]==celltype.assay, ]$group.id)
length(unique(df.tall.filt[df.tall.filt[,5]==celltype.assay, ]$group.id))
# get tall df
df.tall <- do.call(rbind, lapply(assay.name.vector, function(assay.name.iter){
df.iter <- get_group_cell_counts(mae[[assay.name.iter]],
sample.id.variable, celltype.variable)
df.iter$assay <- assay.name.iter
return(df.iter)
}))
df.tall$ct.assay.label <- paste0(df.tall[,1], ";", df.tall$assay)
df.tall <- df.tall[df.tall$Var1 %in% cell.types,]
celltypes.assays <- unique(df.tall$ct.assay.label)
num.cell.types <- length(cell.types)
num.entries.tall <- length(unique(df.tall$group.id))
df.tall.ct.assay <- do.call(cbind, lapply(celltypes.assays, function(celltype.assay){
df.tall[df.tall[,5]==celltype.assay, 2]
}))
df.tall.ct.assay <- as.data.frame(df.tall.ct.assay)
df.tall
dim(df.tall.ct.assay)
# get tall df
df.tall <- do.call(rbind, lapply(assay.name.vector, function(assay.name.iter){
df.iter <- get_group_cell_counts(mae[[assay.name.iter]],
sample.id.variable, celltype.variable)
df.iter$assay <- assay.name.iter
return(df.iter)
}))
df.tall$ct.assay.label <- paste0(df.tall[,1], ";", df.tall$assay)
df.tall <- df.tall[df.tall$Var1 %in% cell.types,]
dim(df.tall)
# df.tall.ct.assay
celltypes.assays <- unique(df.tall$ct.assay.label)
num.cell.types <- length(cell.types)
num.groups <- length(unique(df.tall$group.id))
num.groups
# df.tall.ct.assay
celltypes.assays <- unique(df.tall$ct.assay.label)
num.cell.types <- length(cell.types)
num.groups <- length(unique(df.tall$group.id))
df.tall.ct.assay <- do.call(cbind, lapply(celltypes.assays, function(celltype.assay){
df.tall[df.tall[,5]==celltype.assay, 2]
}))
df.tall[df.tall[,5]==celltype.assay, 2]
length9 df.tall[df.tall[,5]==celltype.assay, 2]
length( df.tall[df.tall[,5]==celltype.assay, 2])
unique(df.tall$group.id)
table(df.tall$group.id)
# get tall df
df.tall <- do.call(rbind, lapply(assay.name.vector, function(assay.name.iter){
df.iter <- get_group_cell_counts(mae[[assay.name.iter]],
sample.id.variable, celltype.variable)
df.iter$assay <- assay.name.iter
return(df.iter)
}))
unique(df.tall$group.id)
unique(mae[[1]]$Sample)
?MultiAssayExperiment
mae <- complete.cases(mae)
dim(mae)
complete.cases(mae)
?complete.cases
colData(mae)
sampleMap(mae)
mae[["sampleMap"]]
pData(mae)
