proportionsCohort2K3 <- proportionsCohort2K3[,c(1:8)]
colnames(proportionsCohort2K3) <- c(
paste0(cellTypesVector, "_known"),
paste0(cellTypesVector, "_predicted"),
c("condition.id", "sample.id")
)
# Cohort 1 bulk
load(file.path("./huuki-meyers-et-al-2023_dlpfc-cohort1/env/07_adjustment/03_run_adjustment_realbulk_all_script.RData"))
# nnls
proportionsBulk <-
data.frame(
glial_known = 1-dfp.wide$neuron.true,
neuron_known = dfp.wide$neuron.true,
glial__predicted = 1-dfp.wide$neuron.nnls.scale,
neuron_predicted = dfp.wide$neuron.nnls.scale,
sample.id = rownames(dfp.wide),
condition.id = rep("scale", nrow(dfp.wide)),
replicate.id = rep("nnls", nrow(dfp.wide))
)
proportionsBulk <- rbind(proportionsBulk,
data.frame(
glial_known = 1-dfp.wide$neuron.true,
neuron_known = dfp.wide$neuron.true,
glial__predicted = 1-dfp.wide$neuron.nnls.noscale,
neuron_predicted = dfp.wide$neuron.nnls.noscale,
sample.id = rownames(dfp.wide),
condition.id = rep("noscale", nrow(dfp.wide)),
replicate.id = rep("nnls", nrow(dfp.wide))
))
# music
proportionsBulk <- rbind(proportionsBulk,
data.frame(
glial_known = 1-dfp.wide$neuron.true,
neuron_known = dfp.wide$neuron.true,
glial__predicted = 1-dfp.wide$neuron.music.scale,
neuron_predicted = dfp.wide$neuron.music.scale,
sample.id = rownames(dfp.wide),
condition.id = rep("scale", nrow(dfp.wide)),
replicate.id = rep("music", nrow(dfp.wide))
))
proportionsBulk <- rbind(proportionsBulk,
data.frame(
glial_known = 1-dfp.wide$neuron.true,
neuron_known = dfp.wide$neuron.true,
glial__predicted = 1-dfp.wide$neuron.music.noscale,
neuron_predicted = dfp.wide$neuron.music.noscale,
sample.id = rownames(dfp.wide),
condition.id = rep("no", nrow(dfp.wide)),
replicate.id = rep("music", nrow(dfp.wide))
))
# bisque
proportionsBulk <- rbind(proportionsBulk,
data.frame(
glial_known = 1-dfp.wide$neuron.true,
neuron_known = dfp.wide$neuron.true,
glial__predicted = 1-dfp.wide$neuron.bisque.scale,
neuron_predicted = dfp.wide$neuron.bisque.scale,
sample.id = rownames(dfp.wide),
condition.id = rep("scale", nrow(dfp.wide)),
replicate.id = rep("bisque", nrow(dfp.wide))
))
proportionsBulk <- rbind(proportionsBulk,
data.frame(
glial_known = 1-dfp.wide$neuron.true,
neuron_known = dfp.wide$neuron.true,
glial__predicted = 1-dfp.wide$neuron.bisque.noscale,
neuron_predicted = dfp.wide$neuron.bisque.noscale,
sample.id = rownames(dfp.wide),
condition.id = rep("no", nrow(dfp.wide)),
replicate.id = rep("bisque", nrow(dfp.wide))
))
# Cohort 3 pseudobulk
load(file.path("./monaco-et-al-2019_pbmc-cohort1/env/01_pseudobulk/04_simulation.RData"))
proportionsCohort3 <- dfPseudobulk
#
colnames(proportionsCohort3) <- c(
"nonplasmablasts_predicted", "plasmablasts_predicted",
"condition.id", "plasmablasts_known", "nonplasmablasts_known",
"sample.id"
)
proportionsCohort3 <- proportionsCohort3[,c(1,2,4,5,6,3)]
# Cohort 1, proportions shuffle
load(file.path("./huuki-meyers-et-al-2023_dlpfc-cohort1/env/03_shuffle/02_figde_script.RData"))
proportionsShuffle <- dfp.tall
colnames(proportionsShuffle) <- c(
"glial_known", "neuron_known", "glial_predicted", "neuron_predicted",
"sample.id.shuffle.pred", "condition.id", "sample.id", "matched.id"
)
proportionsShuffle <- proportionsShuffle[,c(1,2,3,4,7,6)]
rm(dfp.tall)
# Run RMSE calculations
# K2 calculations
# cohorts 1 and 2,
listProportionsTablesK2 <- list(
proportionsCohort1K2, proportionsCohort2K2, proportionsShuffle
)
# 2 cell types
experimentLabelsVectorK2 <-
c("huuki-meyers-et-al-2023_dlpfc-cohort1_k2",
"tran-et-al-2021_dlpfc-cohort2_k2",
"huuki-meyers-et-al-2023_dlpfc-cohort1_shuffle")
cellTypesVectorK2 <- c("glial", "neuron")
rmseSuppTableK2Twotypes <- do.call(rbind,
lapply(seq(length(listProportionsTablesK2)),
function(index){
message(index)
proportionsData <- listProportionsTablesK2[[index]]
if(!"replicate.id" %in% colnames(proportionsData)){
proportionsData$replicate.id <- "rep1"
}
dataLabel <- experimentLabelsVectorK2[[index]]
returnList <- applyRmse(
proportionsData,
cellTypesVector=cellTypesVectorK2
)
returnTable <- returnList$returnRmseTall
returnTable$experimentLabel <- experimentLabelsVectorK2[index]
return(returnTable)
})) |>
as.data.frame()
# 1 cell types
experimentLabelsVectorK2 <-
c("huuki-meyers-et-al-2023_dlpfc-cohort1_neuron_k2",
"tran-et-al-2021_dlpfc-cohort2_neuron_k2",
"huuki-meyers-et-al-2023_dlpfc-cohort1_neuron_shuffle")
cellTypesVectorK2 <- c("neuron")
rmseSuppTableK2Neuron <- do.call(rbind,
lapply(seq(length(listProportionsTablesK2)),
function(index){
message(index)
proportionsData <- listProportionsTablesK2[[index]]
if(!"replicate.id" %in% colnames(proportionsData)){
proportionsData$replicate.id <- "rep1"
}
dataLabel <- experimentLabelsVectorK2[[index]]
returnList <- applyRmse(
proportionsData,
cellTypesVector=c("neuron")
)
returnTable <- returnList$returnRmseTall
returnTable$experimentLabel <- experimentLabelsVectorK2[index]
return(returnTable)
})) |>
as.data.frame()
experimentLabelsVectorK2 <-
c("huuki-meyers-et-al-2023_dlpfc-cohort1_glial_k2",
"tran-et-al-2021_dlpfc-cohort2_glial_k2",
"huuki-meyers-et-al-2023_dlpfc-cohort1_glial_shuffle")
cellTypesVectorK2 <- c("glial")
rmseSuppTableK2Glial <- do.call(rbind,
lapply(seq(length(listProportionsTablesK2)),
function(index){
message(index)
proportionsData <- listProportionsTablesK2[[index]]
if(!"replicate.id" %in% colnames(proportionsData)){
proportionsData$replicate.id <- "rep1"
}
dataLabel <- experimentLabelsVectorK2[[index]]
returnList <- applyRmse(
proportionsData,
cellTypesVector=c("glial")
)
returnTable <- returnList$returnRmseTall
returnTable$experimentLabel <- experimentLabelsVectorK2[index]
return(returnTable)
})) |>
as.data.frame()
# cohort 3,
# 2 cell types
cellTypesVectorK2 <- c("nonplasmablasts", "plasmablasts")
experimentLabelsVectorK2 <- c("monaco-et-al-2019_pbmc-cohort1_k2")
listProportionsTablesK2 <- list(
proportionsCohort3
)
rmseSuppTableK2Cohort3Twotypes <- do.call(rbind,
lapply(seq(length(listProportionsTablesK2)),
function(index){
message(index)
proportionsData <- listProportionsTablesK2[[index]]
if(!"replicate.id" %in% colnames(proportionsData)){
proportionsData$replicate.id <- "rep1"
}
dataLabel <- experimentLabelsVectorK2[[index]]
returnList <- applyRmse(
proportionsData,
cellTypesVector=cellTypesVectorK2
)
returnTable <- returnList$returnRmseTall
returnTable$experimentLabel <- experimentLabelsVectorK2[index]
return(returnTable)
})) |>
as.data.frame()
# 1 cell types
cellTypesVectorK2 <- c("nonplasmablasts")
experimentLabelsVectorK2 <- c("monaco-et-al-2019_pbmc-cohort1_nonplasmablasts_k2")
listProportionsTablesK2 <- list(
proportionsCohort3
)
rmseSuppTableK2Cohort3Nonplasmablasts <- do.call(rbind,
lapply(seq(length(listProportionsTablesK2)),
function(index){
message(index)
proportionsData <- listProportionsTablesK2[[index]]
if(!"replicate.id" %in% colnames(proportionsData)){
proportionsData$replicate.id <- "rep1"
}
dataLabel <- experimentLabelsVectorK2[[index]]
returnList <- applyRmse(
proportionsData,
cellTypesVector=cellTypesVectorK2
)
returnTable <- returnList$returnRmseTall
returnTable$experimentLabel <- experimentLabelsVectorK2[index]
return(returnTable)
})) |>
as.data.frame()
cellTypesVectorK2 <- c("plasmablasts")
experimentLabelsVectorK2 <- c("monaco-et-al-2019_pbmc-cohort1_plasmablasts_k2")
listProportionsTablesK2 <- list(
proportionsCohort3
)
rmseSuppTableK2Cohort3Plasmablasts <- do.call(rbind,
lapply(seq(length(listProportionsTablesK2)),
function(index){
message(index)
proportionsData <- listProportionsTablesK2[[index]]
if(!"replicate.id" %in% colnames(proportionsData)){
proportionsData$replicate.id <- "rep1"
}
dataLabel <- experimentLabelsVectorK2[[index]]
returnList <- applyRmse(
proportionsData,
cellTypesVector=cellTypesVectorK2
)
returnTable <- returnList$returnRmseTall
returnTable$experimentLabel <- experimentLabelsVectorK2[index]
return(returnTable)
})) |>
as.data.frame()
# try k2 from bulk
cellTypesVectorK2 <- c("glial", "neuron")
experimentLabelsVectorK2 <- c(
"huuki-meyers-et-al-2023_dlpfc-cohort1_k2_bulk_nnls",
"huuki-meyers-et-al-2023_dlpfc-cohort1_k2_bulk_music",
"huuki-meyers-et-al-2023_dlpfc-cohort1_k2_bulk_bisque")
listProportionsTablesK2 <- list(
proportionsBulk[proportionsBulk$replicate.id=="nnls",],
proportionsBulk[proportionsBulk$replicate.id=="music",],
proportionsBulk[proportionsBulk$replicate.id=="bisque",]
)
rmseSuppTableK2Bulk <- do.call(rbind,
lapply(seq(length(listProportionsTablesK2)),
function(index){
message(index)
proportionsData <- listProportionsTablesK2[[index]]
if(!"replicate.id" %in% colnames(proportionsData)){
proportionsData$replicate.id <- "rep1"
}
dataLabel <- experimentLabelsVectorK2[[index]]
returnList <- applyRmse(
proportionsData,
cellTypesVector=cellTypesVectorK2
)
returnTable <- returnList$returnRmseTall
returnTable$experimentLabel <- experimentLabelsVectorK2[index]
return(returnTable)
})) |>
as.data.frame()
# K3 calculations
# cohort 1 and cohort2
# 3 cell types
cellTypesVectorK3 <- c("glial", "Inhib", "Excit")
experimentLabelsVectorK3 <-
c("huuki-meyers-et-al-2023_k3", "tran-et-al-2021_dlpfc-cohort2_k3")
listProportionsTablesK3 <- list(
proportionsCohort1K3, proportionsCohort2K3
)
rmseSuppTableK3Threetypes <- do.call(rbind,
lapply(seq(length(listProportionsTablesK3)),
function(index){
message(index)
proportionsData <- listProportionsTablesK3[[index]]
if(!"replicate.id" %in% colnames(proportionsData)){
proportionsData$replicate.id <- "rep1"
}
dataLabel <- experimentLabelsVectorK3[[index]]
returnList <- applyRmse(
proportionsData,
cellTypesVector=cellTypesVectorK3
)
returnTable <- returnList$returnRmseTall
returnTable$experimentLabel <- experimentLabelsVectorK3[index]
return(returnTable)
})) |>
as.data.frame()
# 1 cell types
cellTypesVectorK3 <- c("glial")
experimentLabelsVectorK3 <-
c("huuki-meyers-et-al-2023_glial_k3", "tran-et-al-2021_dlpfc-cohort2_glial_k3")
rmseSuppTableK3Glial <- do.call(rbind,
lapply(seq(length(listProportionsTablesK3)),
function(index){
message(index)
proportionsData <- listProportionsTablesK3[[index]]
if(!"replicate.id" %in% colnames(proportionsData)){
proportionsData$replicate.id <- "rep1"
}
dataLabel <- experimentLabelsVectorK3[[index]]
returnList <- applyRmse(
proportionsData,
cellTypesVector=cellTypesVectorK3
)
returnTable <- returnList$returnRmseTall
returnTable$experimentLabel <- experimentLabelsVectorK3[index]
return(returnTable)
})) |>
as.data.frame()
cellTypesVectorK3 <- c("Inhib")
experimentLabelsVectorK3 <-
c("huuki-meyers-et-al-2023_Inhib_k3", "tran-et-al-2021_dlpfc-cohort2_Inhib_k3")
rmseSuppTableK3Inhib <- do.call(rbind,
lapply(seq(length(listProportionsTablesK3)),
function(index){
message(index)
proportionsData <- listProportionsTablesK3[[index]]
if(!"replicate.id" %in% colnames(proportionsData)){
proportionsData$replicate.id <- "rep1"
}
dataLabel <- experimentLabelsVectorK3[[index]]
returnList <- applyRmse(
proportionsData,
cellTypesVector=cellTypesVectorK3
)
returnTable <- returnList$returnRmseTall
returnTable$experimentLabel <- experimentLabelsVectorK3[index]
return(returnTable)
})) |>
as.data.frame()
cellTypesVectorK3 <- c("Excit")
experimentLabelsVectorK3 <-
c("huuki-meyers-et-al-2023_Excit_k3", "tran-et-al-2021_dlpfc-cohort2_Excit_k3")
rmseSuppTableK3Excit <- do.call(rbind,
lapply(seq(length(listProportionsTablesK3)),
function(index){
message(index)
proportionsData <- listProportionsTablesK3[[index]]
if(!"replicate.id" %in% colnames(proportionsData)){
proportionsData$replicate.id <- "rep1"
}
dataLabel <- experimentLabelsVectorK3[[index]]
returnList <- applyRmse(
proportionsData,
cellTypesVector=cellTypesVectorK3
)
returnTable <- returnList$returnRmseTall
returnTable$experimentLabel <- experimentLabelsVectorK3[index]
return(returnTable)
})) |>
as.data.frame()
# Get aggregated table
# Format values across tables on aggregation.
roundDigits <- 3
listRmseTables <- list(
rmseSuppTableK2Twotypes,
rmseSuppTableK2Neuron,
rmseSuppTableK2Glial,
rmseSuppTableK3Threetypes,
rmseSuppTableK3Excit,
rmseSuppTableK3Inhib,
rmseSuppTableK3Glial,
rmseSuppTableK2Bulk,
rmseSuppTableK2Cohort3Twotypes,
rmseSuppTableK2Cohort3Nonplasmablasts,
rmseSuppTableK2Cohort3Plasmablasts
)
# format rmse values
listRmseTables <- lapply(
listRmseTables, function(tableIteration){
tableIteration$rmseResult <- format(
tableIteration$rmseResult, digits = roundDigits,
scientific = TRUE
)
return(tableIteration)
}
)
#----------------
# get final table
#----------------
rmseSuppTableOut <- do.call(rbind,
lapply(listRmseTables, function(item){item})) |> as.data.frame()
removeSampleRmse <- !grepl("sample.id", rmseSuppTableOut$condition)
table(removeSampleRmse)
rmseSuppTableOut <- rmseSuppTableOut[removeSampleRmse,]
head(rmseSuppTableOut)
rmseSuppTableOut <- rmseSuppTableOut[!grepl('rep1;.*', rmseSuppTableOut$condition),]
rmseSuppTableOut$condition <- gsub("replicate.id:rep1", "all", rmseSuppTableOut$condition)
rmseSuppTableOut$condition <- gsub("replicate.id:", "", rmseSuppTableOut$condition)
rmseSuppTableOut$condition <- gsub("condition.id:", "", rmseSuppTableOut$condition)
rmseSuppTableOut
rmseSuppTableOut$condition <- gsub("^(scaled|scale)$", "withscale", rmseSuppTableOut$condition)
rmseSuppTableOut$condition <- gsub(";(scaled|scale)$", ";withscale", rmseSuppTableOut$condition)
rmseSuppTableOut$condition <- gsub("^(no|unscaled)$", "noscale", rmseSuppTableOut$condition)
rmseSuppTableOut$condition <- gsub(";(no|unscaled)$", ";noscale", rmseSuppTableOut$condition)
rmseSuppTableOut
# Save final RMSE table
rmseSupplement <- rmseSuppTableOut
# append columns
# append cohort
rmseSupplement$cohort <- ifelse(
grepl("huuki-meyers-et-al-2023", rmseSupplement$experimentLabel), "Huuki-Myers et al 2023",
ifelse(grepl("tran-et-al-2021", rmseSupplement$experimentLabel), "Tran et al 2021",
ifelse(grepl("monaco-et-al-2019", rmseSupplement$experimentLabel), "Monaco et al 2019", "NA")))
# append k
rmseSupplement$k <- ifelse(grepl("k2|shuffle", rmseSupplement$experimentLabel), "2",
ifelse(grepl("k3", rmseSupplement$experimentLabel), "3", "NA"))
# append num cell types
rmseSupplement$numCellTypes <- gsub("k", "", rmseSupplement$k)
singletonCellTypesVector <- c("neuron", "glial", "plasmablasts", "nonplasmablasts", "Inhib", "Excit")
singletonCellTypesVector <- paste0(".*_", singletonCellTypesVector, "_.*")
singletonCellTypesVector <- paste(singletonCellTypesVector, collapse = "|")
conditionCellTypes <- grepl(singletonCellTypesVector, rmseSupplement$experimentLabel)
rmseSupplement$numCellTypes[conditionCellTypes] <- 1
# append cell type strings
rmseSupplement$cellTypes <- ""
# k2
filterK2Brain <- rmseSupplement$k == "2" &
grepl("huuki-meyers-et-al-2023|tran-et-al-2021", rmseSupplement$experimentLabel)
filterK2Brain2Types <- filterK2Brain & rmseSupplement$numCellTypes=="2"
rmseSupplement$cellTypes[filterK2Brain2Types] <- "neuron;glial"
filterK2BrainNeuron <- filterK2Brain & grepl("neuron", rmseSupplement$experimentLabel)
rmseSupplement$cellTypes[filterK2BrainNeuron] <- "neuron"
filterK2BrainGlial <- filterK2Brain & grepl("glial", rmseSupplement$experimentLabel)
rmseSupplement$cellTypes[filterK2BrainGlial] <- "glial"
# k3
filterK3Brain <- rmseSupplement$k == "3" &
grepl("huuki-meyers-et-al-2023|tran-et-al-2021", rmseSupplement$experimentLabel)
filterK3Brain3Types <- filterK3Brain & rmseSupplement$numCellTypes==3
rmseSupplement$cellTypes[filterK3Brain3Types] <- "Excit;Inhib;glial"
filterK3BrainExcit <- filterK3Brain & grepl("Excit", rmseSupplement$experimentLabel)
rmseSupplement$cellTypes[filterK3BrainExcit] <- "Excit"
filterK3BrainInhib <- filterK3Brain & grepl("Inhib", rmseSupplement$experimentLabel)
rmseSupplement$cellTypes[filterK3BrainInhib] <- "Inhib"
filterK3BrainGlial <- filterK3Brain & grepl("glial", rmseSupplement$experimentLabel)
rmseSupplement$cellTypes[filterK3BrainGlial] <- "glial"
# k2 pbmc
filterK2Blood <- grepl("monaco-et-al-2019", rmseSupplement$experimentLabel)
filterK2Blood2Types <- filterK2Blood & rmseSupplement$numCellTypes==2
rmseSupplement$cellTypes[filterK2Blood2Types] <- "plasmablasts;nonplasmablasts"
filterK2BloodPlasmablasts <- filterK2Blood & grepl("plasmablasts", rmseSupplement$experimentLabel)
rmseSupplement$cellTypes[filterK2BloodPlasmablasts] <- "plasmablasts"
filterK2BloodNonplasmablasts <- filterK2Blood & grepl("nonplasmablasts", rmseSupplement$experimentLabel)
rmseSupplement$cellTypes[filterK2BloodNonplasmablasts] <- "nonplasmablasts"
# append formatted experiment label
elVector <- rmseSupplement$experimentLabel
rmseSupplement$experiment_label <- ifelse(grepl("bulk", elVector), "bulk",
ifelse(grepl("shuffle", elVector), "shuffle", "pseudobulk"))
# subset and rename columns
rmseSupplement <- rmseSupplement[,c(1,2,4:8)]
colnames(rmseSupplement) <-
c("condition", "rmse_result", "dataset", "k_total", "k_rmse", "cell_types", "experiment")
#-----
# save
#-----
#
#
save(
rmseSupplement,
file = "./software_manuscript/outputs/02_aggregateRMSE/rmseSupplement.rda"
)
knitr::opts_chunk$set(echo = TRUE)
setwd("..")
setwd("..")
load("outputs/02_aggregateRMSE/rmseSupplement.rda")
unique(rmseSupplement$condition)
unique(rmseSupplement$dataset)
unique(rmseSupplement$experiment)
unique(rmseSupplement$k_total)
table(rmseSupplement$k_total, rmseSupplement$k_rmse)
setwd("..")
setwd("..")
options(scipen=20)
write.csv(
rmseSupplement,
file = "outputs/02_aggregateRMSE/table_s3.csv",
row.names = FALSE)
options(scipen=0)  # restore the default
head(rmseSuppTableOut)
unique(rmseSuppTableOut$experimentLabel)
rmseSupplement[rmseSupplement$k_total==3,]
setwd("..")
setwd("..")
options(scipen=20)
write.csv(
rmseSupplement,
file = "outputs/02_aggregateRMSE/table_s3.csv",
row.names = FALSE)
options(scipen=0)  # restore the default
knitr::opts_chunk$set(echo = TRUE)
setwd("..")
setwd("..")
load("outputs/02_aggregateRMSE/rmseSupplement.rda")
head(rmseSupplement)
rmseSupplement[rmseSupplement$k_total==3,]
setwd("..")
setwd("..")
options(scipen=20)
write.csv(
rmseSupplement,
file = "outputs/02_aggregateRMSE/table_s3.csv",
row.names = FALSE)
options(scipen=0)  # restore the default
View(rmseSupplement)
