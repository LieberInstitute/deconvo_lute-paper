plot6 <- jbp.c2.k2 + ggtitle("") + ylim(0, 0.3) +
theme(axis.text.y = element_text(size = axisTextSize),
axis.text.x = element_text(size = axisTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize))
plot7 <- scatter.c1.k3.no + ggtitle("K3\n ") + ylab("") +
theme(axis.text.x =
element_text(angle = 45, hjust = 1, size = axisTextSize),
axis.text.y = element_text(size = axisTextSize),
title = element_text(size = titleTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize))
plot8 <- scatter.c1.k3.yes + ylab("") + ggtitle("") +
theme(axis.text.x =
element_text(angle = 45, hjust = 1, size = axisTextSize),
axis.text.y = element_text(size = axisTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize))
plot9 <- jbp.c1.k3 + ylab("") + ggtitle("") + ylim(0, 0.3) +
theme(axis.text.y = element_text(size = axisTextSize),
axis.text.x = element_text(size = axisTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize))
plot10 <- scatter.c2.k3.no + ggtitle("") + ylab("") +
theme(axis.text.x =
element_text(angle = 45, hjust = 1, size = axisTextSize),
axis.text.y = element_text(size = axisTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize),
title = element_text(size = titleTextSize))
plot11 <- scatter.c2.k3.yes + ylab("") + ggtitle("") +
theme(axis.text.x =
element_text(angle = 45, hjust = 1, size = axisTextSize),
axis.text.y = element_text(size = axisTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize))
plot12 <- jbp.c2.k3 + ylab("") + ggtitle("") + ylim(0, 0.3) +
theme(axis.text.y = element_text(size = axisTextSize),
axis.text.x = element_text(size = axisTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize))
# set layout matrix
repNorm <- 10
repTop <- 12
lmData <- c(
rep(1, repTop),
rep(2, repNorm),
rep(3, repNorm),
rep(4, repTop),
rep(5, repNorm),
rep(6, repNorm),
rep(7, repTop),
rep(8, repNorm),
rep(9, repNorm),
rep(10, repTop),
rep(11, repNorm),
rep(12, repNorm)
)
layoutMatrix <- matrix(lmData, ncol = 2)
# save
setwd("..")
setwd("..")
jpeg("./figures/01_multipanel/multi-pb_k2-k3_cohort-1-2.jpg",
width = 15, height = 25, units = "in", res = 400)
grid.arrange(plot1, plot2, plot3, plot4, plot5, plot6,
plot7, plot8, plot9, plot10, plot11, plot12,
layout_matrix = layoutMatrix)
dev.off()
head(dfp.tall.c1.k2)
xAxisLabel <- "True"
yAxisLabel <- "Predicted"
titleTextSize <- 35
axisTextSize <- 25
pointSize <- 10
# K2
# SCATTERPLOTS
scatter.c1.k2.no <- ggplot(dfp.tall.c1.k2[dfp.tall.c1.k2$type=="noscale",],
aes(x = glial.true, y = glial.pred)) +
geom_point(size = pointSize, alpha = 0.5) +
geom_abline(slope = 1, intercept = 0) +
geom_hline(yintercept = 0.5) + geom_vline(xintercept = 0.5) + theme_bw() +
xlab(xAxisLabel) + ylab(yAxisLabel) +
xlim(0, 1) + ylim(0, 1)
scatter.c1.k2.yes <- ggplot(dfp.tall.c1.k2[dfp.tall.c1.k2$type=="withscale",],
aes(x = glial.true, y = glial.pred)) +
geom_point(size = pointSize, alpha = 0.5) +
geom_abline(slope = 1, intercept = 0) +
geom_hline(yintercept = 0.5) + geom_vline(xintercept = 0.5) + theme_bw() +
xlab(xAxisLabel) + ylab(yAxisLabel) +
xlim(0, 1) + ylim(0, 1)
scatter.c2.k2.no <- ggplot(dfp.tall.c2.k2[dfp.tall.c2.k2$type=="noscale",],
aes(x = glial.true, y = glial.pred)) +
geom_point(size = pointSize, alpha = 0.5) +
geom_abline(slope = 1, intercept = 0) +
geom_hline(yintercept = 0.5) + geom_vline(xintercept = 0.5) + theme_bw() +
xlab(xAxisLabel) + ylab(yAxisLabel) +
xlim(0, 1) + ylim(0, 1)
scatter.c2.k2.yes <- ggplot(dfp.tall.c2.k2[dfp.tall.c2.k2$type=="withscale",],
aes(x = glial.true, y = glial.pred)) +
geom_point(size = pointSize, alpha = 0.5) +
geom_abline(slope = 1, intercept = 0) +
geom_hline(yintercept = 0.5) + geom_vline(xintercept = 0.5) + theme_bw() +
xlab(xAxisLabel) + ylab(yAxisLabel) +
xlim(0, 1) + ylim(0, 1)
# ERROR JITTERBOXPLOTS
jbp.c1.k2 <- ggplot(dfp.tall.c1.k2, aes(x = type, y = glial.abs.error)) +
geom_jitter(alpha = 0.5, size = pointSize) +
geom_boxplot(color = "cyan", alpha = 0) + theme_bw() +
ylab("Error (glial)") + ggtitle("Cohort1")
jbp.c2.k2 <- ggplot(dfp.tall.c2.k2, aes(x = type, y = glial.abs.error)) +
geom_jitter(alpha = 0.5, size = pointSize) +
geom_boxplot(color = "cyan", alpha = 0) + theme_bw() +
ylab("Error (glial)") + ggtitle("Cohort2")
# get glial summary from k3
newk_value_from_dfresult <- function(df,
operator = c("sum", "mean", "median")){
if(operator == "mean"){
result <- apply(df, 1, function(ri){
mean(c(as.numeric(ri)))
}) |> unlist()
} else if(operator=="median"){
result <- apply(df, 1, function(ri){
median(c(as.numeric(ri)))
}) |> unlist()
} else if(operator=="sum"){
result <- apply(df, 1, function(ri){
sum(c(as.numeric(ri)))
}) |> unlist()
} else{
stop("didn't recognize operator")
}
return(result)
}
# cohort1
dfp.tall.c1.k3$glial.true <-
newk_value_from_dfresult(dfp.tall.c1.k3[,c("Excit.true", "Inhib.true")], "sum")
dfp.tall.c1.k3$glial.pred <-
newk_value_from_dfresult(dfp.tall.c1.k3[,c("Excit.pred", "Inhib.pred")], "sum")
dfp.tall.c1.k3$glial.abs.error <-
newk_value_from_dfresult(dfp.tall.c1.k3[,c("Excit.abs.error", "Inhib.abs.error")], "sum")
# cohort2
dfp.tall.c2.k3$glial.true <-
newk_value_from_dfresult(dfp.tall.c2.k3[,c("Excit.true", "Inhib.true")], "sum")
dfp.tall.c2.k3$glial.pred <-
newk_value_from_dfresult(dfp.tall.c2.k3[,c("Excit.pred", "Inhib.pred")], "sum")
dfp.tall.c2.k3$glial.abs.error <-
newk_value_from_dfresult(dfp.tall.c2.k3[,c("Excit.abs.error", "Inhib.abs.error")], "sum")
# SCATTERPLOTS
scatter.c1.k3.no <- ggplot(dfp.tall.c1.k3[dfp.tall.c1.k3$type=="noscale",],
aes(x = glial.true, y = glial.pred)) +
geom_point(size = pointSize, alpha = 0.5) +
geom_abline(slope = 1, intercept = 0) +
geom_hline(yintercept = 0.5) + geom_vline(xintercept = 0.5) + theme_bw() +
xlab(xAxisLabel) + ylab(yAxisLabel) +
xlim(0, 1) + ylim(0, 1) + ggtitle("")
scatter.c1.k3.yes <- ggplot(dfp.tall.c1.k3[dfp.tall.c1.k3$type=="withscale",],
aes(x = glial.true, y = glial.pred)) +
geom_point(size = pointSize, alpha = 0.5) +
geom_abline(slope = 1, intercept = 0) +
geom_hline(yintercept = 0.5) + geom_vline(xintercept = 0.5) + theme_bw() +
xlab(xAxisLabel) + ylab(yAxisLabel) +
xlim(0, 1) + ylim(0, 1) + ggtitle("")
scatter.c2.k3.no <- ggplot(dfp.tall.c2.k3[dfp.tall.c2.k3$type=="noscale",],
aes(x = glial.true, y = glial.pred)) +
geom_point(size = pointSize, alpha = 0.5) +
geom_abline(slope = 1, intercept = 0) +
geom_hline(yintercept = 0.5) + geom_vline(xintercept = 0.5) + theme_bw() +
xlab(xAxisLabel) + ylab(yAxisLabel) +
xlim(0, 1) + ylim(0, 1) + ggtitle("")
scatter.c2.k3.yes <- ggplot(dfp.tall.c2.k3[dfp.tall.c2.k3$type=="withscale",],
aes(x = glial.true, y = glial.pred)) +
geom_point(size = pointSize, alpha = 0.5) +
geom_abline(slope = 1, intercept = 0) +
geom_hline(yintercept = 0.5) + geom_vline(xintercept = 0.5) + theme_bw() +
xlab(xAxisLabel) + ylab(yAxisLabel) +
xlim(0, 1) + ylim(0, 1) + ggtitle("")
# ERROR JITTERBOXPLOTS
jbp.c1.k3 <- ggplot(dfp.tall.c1.k3, aes(x = type, y = glial.abs.error)) +
geom_jitter(alpha = 0.5, size = pointSize) + ggtitle("") +
geom_boxplot(color = "cyan", alpha = 0) + theme_bw() +
ylab("Error (glial)")
jbp.c2.k3 <- ggplot(dfp.tall.c2.k3, aes(x = type, y = glial.abs.error)) +
geom_jitter(alpha = 0.5, size = pointSize) + ggtitle("") +
geom_boxplot(color = "cyan", alpha = 0) + theme_bw() +
ylab("Error (glial)")
plot1 <- scatter.c1.k2.no +
ggtitle("K2\nCohort1 glial") +
theme(axis.text.x =
element_text(angle = 45, hjust = 1, size = axisTextSize),
axis.text.y = element_text(size = axisTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize),
title = element_text(size = titleTextSize))
plot2 <- scatter.c1.k2.yes + ggtitle("") +
theme(axis.text.x =
element_text(angle = 45, hjust = 1, size = axisTextSize),
axis.text.y = element_text(size = axisTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize))
plot3 <- jbp.c1.k2 + ggtitle("") + ylim(0, 0.3) +
theme(axis.text.y = element_text(size = axisTextSize),
axis.text.x = element_text(size = axisTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize))
plot4 <- scatter.c2.k2.no + ggtitle("Cohort2 glial") +
theme(axis.text.x =
element_text(angle = 45, hjust = 1, size = axisTextSize),
axis.text.y = element_text(size = axisTextSize),
title = element_text(size = titleTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize))
plot5 <- scatter.c2.k2.yes + ggtitle("") +
theme(axis.text.x =
element_text(angle = 45, hjust = 1, size = axisTextSize),
axis.text.y = element_text(size = axisTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize))
plot6 <- jbp.c2.k2 + ggtitle("") + ylim(0, 0.3) +
theme(axis.text.y = element_text(size = axisTextSize),
axis.text.x = element_text(size = axisTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize))
plot7 <- scatter.c1.k3.no + ggtitle("K3\n ") + ylab("") +
theme(axis.text.x =
element_text(angle = 45, hjust = 1, size = axisTextSize),
axis.text.y = element_text(size = axisTextSize),
title = element_text(size = titleTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize))
plot8 <- scatter.c1.k3.yes + ylab("") + ggtitle("") +
theme(axis.text.x =
element_text(angle = 45, hjust = 1, size = axisTextSize),
axis.text.y = element_text(size = axisTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize))
plot9 <- jbp.c1.k3 + ylab("") + ggtitle("") + ylim(0, 0.3) +
theme(axis.text.y = element_text(size = axisTextSize),
axis.text.x = element_text(size = axisTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize))
plot10 <- scatter.c2.k3.no + ggtitle("") + ylab("") +
theme(axis.text.x =
element_text(angle = 45, hjust = 1, size = axisTextSize),
axis.text.y = element_text(size = axisTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize),
title = element_text(size = titleTextSize))
plot11 <- scatter.c2.k3.yes + ylab("") + ggtitle("") +
theme(axis.text.x =
element_text(angle = 45, hjust = 1, size = axisTextSize),
axis.text.y = element_text(size = axisTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize))
plot12 <- jbp.c2.k3 + ylab("") + ggtitle("") + ylim(0, 0.3) +
theme(axis.text.y = element_text(size = axisTextSize),
axis.text.x = element_text(size = axisTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize))
# set layout matrix
repNorm <- 10
repTop <- 12
lmData <- c(
rep(1, repTop),
rep(2, repNorm),
rep(3, repNorm),
rep(4, repTop),
rep(5, repNorm),
rep(6, repNorm),
rep(7, repTop),
rep(8, repNorm),
rep(9, repNorm),
rep(10, repTop),
rep(11, repNorm),
rep(12, repNorm)
)
layoutMatrix <- matrix(lmData, ncol = 2)
# save
setwd("..")
setwd("..")
jpeg("./figures/01_multipanel/multi-pb_glial_k2-k3_cohort-1-2.jpg",
width = 15, height = 25, units = "in", res = 400)
grid.arrange(plot1, plot2, plot3, plot4, plot5, plot6,
plot7, plot8, plot9, plot10, plot11, plot12,
layout_matrix = layoutMatrix)
dev.off()
libv <- c("here", "nlme", "lute", "ggplot2", "gridExtra",
"dplyr", "ggforce", "MultiAssayExperiment",
"SingleCellExperiment")
sapply(libv, library, character.only = TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd("..")
setwd("..")
list.files()
load("env/01_multipanel/01_pseudobulk_script.RData")
xAxisLabel <- "True"
yAxisLabel <- "Predicted"
titleTextSize <- 35
axisTextSize <- 25
pointSize <- 10
# K2
# SCATTERPLOTS
scatter.c1.k2.no <- ggplot(dfp.tall.c1.k2[dfp.tall.c1.k2$type=="noscale",],
aes(x = glial.true, y = glial.pred)) +
geom_point(size = pointSize, alpha = 0.5) +
geom_abline(slope = 1, intercept = 0) +
geom_hline(yintercept = 0.5) + geom_vline(xintercept = 0.5) + theme_bw() +
xlab(xAxisLabel) + ylab(yAxisLabel) +
xlim(0, 1) + ylim(0, 1)
scatter.c1.k2.yes <- ggplot(dfp.tall.c1.k2[dfp.tall.c1.k2$type=="withscale",],
aes(x = glial.true, y = glial.pred)) +
geom_point(size = pointSize, alpha = 0.5) +
geom_abline(slope = 1, intercept = 0) +
geom_hline(yintercept = 0.5) + geom_vline(xintercept = 0.5) + theme_bw() +
xlab(xAxisLabel) + ylab(yAxisLabel) +
xlim(0, 1) + ylim(0, 1)
scatter.c2.k2.no <- ggplot(dfp.tall.c2.k2[dfp.tall.c2.k2$type=="noscale",],
aes(x = glial.true, y = glial.pred)) +
geom_point(size = pointSize, alpha = 0.5) +
geom_abline(slope = 1, intercept = 0) +
geom_hline(yintercept = 0.5) + geom_vline(xintercept = 0.5) + theme_bw() +
xlab(xAxisLabel) + ylab(yAxisLabel) +
xlim(0, 1) + ylim(0, 1)
scatter.c2.k2.yes <- ggplot(dfp.tall.c2.k2[dfp.tall.c2.k2$type=="withscale",],
aes(x = glial.true, y = glial.pred)) +
geom_point(size = pointSize, alpha = 0.5) +
geom_abline(slope = 1, intercept = 0) +
geom_hline(yintercept = 0.5) + geom_vline(xintercept = 0.5) + theme_bw() +
xlab(xAxisLabel) + ylab(yAxisLabel) +
xlim(0, 1) + ylim(0, 1)
# ERROR JITTERBOXPLOTS
jbp.c1.k2 <- ggplot(dfp.tall.c1.k2, aes(x = type, y = glial.abs.error)) +
geom_jitter(alpha = 0.5, size = pointSize) +
geom_boxplot(color = "cyan", alpha = 0) + theme_bw() +
ylab("Error (glial)") + ggtitle("Cohort1")
jbp.c2.k2 <- ggplot(dfp.tall.c2.k2, aes(x = type, y = glial.abs.error)) +
geom_jitter(alpha = 0.5, size = pointSize) +
geom_boxplot(color = "cyan", alpha = 0) + theme_bw() +
ylab("Error (glial)") + ggtitle("Cohort2")
# SCATTERPLOTS
scatter.c1.k3.no <- ggplot(dfp.tall.c1.k3[dfp.tall.c1.k3$type=="noscale",],
aes(x = glial.true, y = glial.pred)) +
geom_point(size = pointSize, alpha = 0.5) +
geom_abline(slope = 1, intercept = 0) +
geom_hline(yintercept = 0.5) + geom_vline(xintercept = 0.5) + theme_bw() +
xlab(xAxisLabel) + ylab(yAxisLabel) +
xlim(0, 1) + ylim(0, 1) + ggtitle("")
scatter.c1.k3.yes <- ggplot(dfp.tall.c1.k3[dfp.tall.c1.k3$type=="withscale",],
aes(x = glial.true, y = glial.pred)) +
geom_point(size = pointSize, alpha = 0.5) +
geom_abline(slope = 1, intercept = 0) +
geom_hline(yintercept = 0.5) + geom_vline(xintercept = 0.5) + theme_bw() +
xlab(xAxisLabel) + ylab(yAxisLabel) +
xlim(0, 1) + ylim(0, 1) + ggtitle("")
scatter.c2.k3.no <- ggplot(dfp.tall.c2.k3[dfp.tall.c2.k3$type=="noscale",],
aes(x = glial.true, y = glial.pred)) +
geom_point(size = pointSize, alpha = 0.5) +
geom_abline(slope = 1, intercept = 0) +
geom_hline(yintercept = 0.5) + geom_vline(xintercept = 0.5) + theme_bw() +
xlab(xAxisLabel) + ylab(yAxisLabel) +
xlim(0, 1) + ylim(0, 1) + ggtitle("")
scatter.c2.k3.yes <- ggplot(dfp.tall.c2.k3[dfp.tall.c2.k3$type=="withscale",],
aes(x = glial.true, y = glial.pred)) +
geom_point(size = pointSize, alpha = 0.5) +
geom_abline(slope = 1, intercept = 0) +
geom_hline(yintercept = 0.5) + geom_vline(xintercept = 0.5) + theme_bw() +
xlab(xAxisLabel) + ylab(yAxisLabel) +
xlim(0, 1) + ylim(0, 1) + ggtitle("")
# ERROR JITTERBOXPLOTS
jbp.c1.k3 <- ggplot(dfp.tall.c1.k3, aes(x = type, y = glial.abs.error)) +
geom_jitter(alpha = 0.5, size = pointSize) + ggtitle("") +
geom_boxplot(color = "cyan", alpha = 0) + theme_bw() +
ylab("Error (glial)")
jbp.c2.k3 <- ggplot(dfp.tall.c2.k3, aes(x = type, y = glial.abs.error)) +
geom_jitter(alpha = 0.5, size = pointSize) + ggtitle("") +
geom_boxplot(color = "cyan", alpha = 0) + theme_bw() +
ylab("Error (glial)")
plot1 <- scatter.c1.k2.no +
ggtitle("K2\nCohort1 glial") +
theme(axis.text.x =
element_text(angle = 45, hjust = 1, size = axisTextSize),
axis.text.y = element_text(size = axisTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize),
title = element_text(size = titleTextSize))
plot2 <- scatter.c1.k2.yes + ggtitle("") +
theme(axis.text.x =
element_text(angle = 45, hjust = 1, size = axisTextSize),
axis.text.y = element_text(size = axisTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize))
plot3 <- jbp.c1.k2 + ggtitle("") + ylim(0, 0.3) +
theme(axis.text.y = element_text(size = axisTextSize),
axis.text.x = element_text(size = axisTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize))
plot4 <- scatter.c2.k2.no + ggtitle("Cohort2 glial") +
theme(axis.text.x =
element_text(angle = 45, hjust = 1, size = axisTextSize),
axis.text.y = element_text(size = axisTextSize),
title = element_text(size = titleTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize))
plot5 <- scatter.c2.k2.yes + ggtitle("") +
theme(axis.text.x =
element_text(angle = 45, hjust = 1, size = axisTextSize),
axis.text.y = element_text(size = axisTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize))
plot6 <- jbp.c2.k2 + ggtitle("") + ylim(0, 0.3) +
theme(axis.text.y = element_text(size = axisTextSize),
axis.text.x = element_text(size = axisTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize))
plot7 <- scatter.c1.k3.no + ggtitle("K3\n ") + ylab("") +
theme(axis.text.x =
element_text(angle = 45, hjust = 1, size = axisTextSize),
axis.text.y = element_text(size = axisTextSize),
title = element_text(size = titleTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize))
plot8 <- scatter.c1.k3.yes + ylab("") + ggtitle("") +
theme(axis.text.x =
element_text(angle = 45, hjust = 1, size = axisTextSize),
axis.text.y = element_text(size = axisTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize))
plot9 <- jbp.c1.k3 + ylab("") + ggtitle("") + ylim(0, 0.3) +
theme(axis.text.y = element_text(size = axisTextSize),
axis.text.x = element_text(size = axisTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize))
plot10 <- scatter.c2.k3.no + ggtitle("") + ylab("") +
theme(axis.text.x =
element_text(angle = 45, hjust = 1, size = axisTextSize),
axis.text.y = element_text(size = axisTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize),
title = element_text(size = titleTextSize))
plot11 <- scatter.c2.k3.yes + ylab("") + ggtitle("") +
theme(axis.text.x =
element_text(angle = 45, hjust = 1, size = axisTextSize),
axis.text.y = element_text(size = axisTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize))
plot12 <- jbp.c2.k3 + ylab("") + ggtitle("") + ylim(0, 0.3) +
theme(axis.text.y = element_text(size = axisTextSize),
axis.text.x = element_text(size = axisTextSize),
axis.title.x = element_text(size = axisTextSize),
axis.title.y = element_text(size = axisTextSize))
# set layout matrix
repNorm <- 10
repTop <- 12
lmData <- c(
rep(1, repTop),
rep(2, repNorm),
rep(3, repNorm),
rep(4, repTop),
rep(5, repNorm),
rep(6, repNorm),
rep(7, repTop),
rep(8, repNorm),
rep(9, repNorm),
rep(10, repTop),
rep(11, repNorm),
rep(12, repNorm)
)
layoutMatrix <- matrix(lmData, ncol = 2)
# save
setwd("..")
setwd("..")
jpeg("./figures/01_multipanel/multi-pb_glial_k2-k3_cohort-1-2.jpg",
width = 15, height = 25, units = "in", res = 400)
grid.arrange(plot1, plot2, plot3, plot4, plot5, plot6,
plot7, plot8, plot9, plot10, plot11, plot12,
layout_matrix = layoutMatrix)
dev.off()
libv <- c("here", "nlme", "lute", "ggplot2", "gridExtra",
"dplyr", "ggforce", "MultiAssayExperiment",
"SingleCellExperiment")
sapply(libv, library, character.only = TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd("..")
setwd("..")
list.files()
load("env/01_multipanel/01_pseudobulk_script.RData")
summary(dfp.tall.c1.k2$neuron.true)
summary(dfp.tall.c1.k2$glial.true)
summary(dfp.tall.c1.k3$Excit.true)
summary(dfp.tall.c1.k3$Inhib.true)
summary(dfp.tall.c1.k2$neuron.true)
summary(dfp.tall.c1.k2$glial.true)
load("~/GitHub/deconvo_method-paper/cohort1/outputs/00_preprocess/sce-rpkm-counts_dlpfc-cohort1.rda")
dim(sce.rpkm)
cd <- colData(sce.rpkm)
dim(sce.rpkm)
class(sce.rpkm)
load("~/GitHub/deconvo_method-paper/cohort1/outputs/01_mae/mae_analysis.rda")
names(mae)
sce <- mae[["snrnaseq.k4.all"]]
table(sce$cellType_broad_hc)
table(sce$cellType_broad_hc, sce$SAMPLE_ID)
table(sce$cellType_broad_hc, sce$Sample)
dfs <- table(sce$cellType_broad_hc, sce$Sample)
head(dfs)
median(dfs["Oligo",])
mean(dfs["Oligo",])
dfprop <- apply(dfs, 2, function(ci){ci/sum(ci)})
dfprop
median(dfprop["Oligo",])
mean(dfprop["Oligo",])
min(dfprop["Oligo",])
max(dfprop["Oligo",])
