median(sampleVector), # cells/nuclei
mean(sampleVector), # cells/nuclei
sd(sampleVector), # cells/nuclei
median(proportionsVector), # proportion per sample
mean(proportionsVector), # proportion per sample
sd(proportionsVector), # proportion per sample
mean(markerSizes), # marker library size
median(markerSizes), # marker library size
sd(markerSizes) # marker library size
)
}
})
do.call(rbind, variableValuesList) |> as.data.frame()
})
dfSummaries <- do.call(rbind, listSummaryValues) |> as.data.frame()
colnames(dfSummaries) <- c("k", "cellType",
"median_nuclei_per_sample",
"mean_nuclei_per_sample",
"sd_nuclei_per_sample",
"median_proportion_nuclei_per_sample",
"mean_proportion_nuclei_per_sample",
"sd_proportion_nuclei_per_sample",
"median_marker_library_size",
"mean_marker_library_size",
"sd_marker_library_size")
return(dfSummaries)
}
setwd("C:/Users/User/Documents/GitHub/deconvo_method-paper/cohort2")
gc()
gc()
#source("./cohort2/scripts/01_pseudobulk/00_parameters-pseudobulk.R")
#sapply(libv, library, character.only = T)
#------
# load
#------
load("~/GitHub/deconvo_method-paper/cohort2/env/01_pseudobulk/01_k2_mrb_script.RData")
dfSummary <- function(sce){
# dfSummary
#
# sce SingleCellExperiment
#
#
cd <- colData(sce)
variablesVector <- c("k2", "k3")
typeNames <- c("neuron", "glial", "Inhib", "Excit")
listSummaryValues <- lapply(variablesVector, function(variable){
# proportions
donorTableTotal <- table(cd$donor) |> as.data.frame()
variableValuesList <- lapply(typeNames, function(type){
message(type, "; ", variable)
if(type %in% cd[,variable]){
cdf <- cd[cd[,variable]==type,]
sampleCellCountsVector <-
table(cdf[,variable], cdf$donor) |> as.data.frame()
sampleVector <- sampleCellCountsVector[,3]
proportionsVector <-
sampleVector/donorTableTotal[,2]
markerSizes <- sce[,colData(sce)[,variable]==type] |> counts() |>
colSums(exprFilter)
summary(markerSizes)
c(variable,
type,
median(sampleVector), # cells/nuclei
mean(sampleVector), # cells/nuclei
sd(sampleVector), # cells/nuclei
median(proportionsVector), # proportion per sample
mean(proportionsVector), # proportion per sample
sd(proportionsVector), # proportion per sample
mean(markerSizes), # marker library size
median(markerSizes), # marker library size
sd(markerSizes) # marker library size
)
}
})
do.call(rbind, variableValuesList) |> as.data.frame()
})
dfSummaries <- do.call(rbind, listSummaryValues) |> as.data.frame()
colnames(dfSummaries) <- c("k", "cellType",
"median_nuclei_per_sample",
"mean_nuclei_per_sample",
"sd_nuclei_per_sample",
"median_proportion_nuclei_per_sample",
"mean_proportion_nuclei_per_sample",
"sd_proportion_nuclei_per_sample",
"median_marker_library_size",
"mean_marker_library_size",
"sd_marker_library_size")
return(dfSummaries)
}
dfSummary(sce.k2)
dfSummary <- function(sce, variablesVector = c("k2", "k3"),
typeNames = c("neuron", "glial", "Inhib", "Excit")){
# dfSummary
#
# sce SingleCellExperiment
# variablesVector vector of variables
# typeNames vector of celltypes
#
cd <- colData(sce)
listSummaryValues <- lapply(variablesVector, function(variable){
# proportions
donorTableTotal <- table(cd$donor) |> as.data.frame()
variableValuesList <- lapply(typeNames, function(type){
message(type, "; ", variable)
if(type %in% cd[,variable]){
cdf <- cd[cd[,variable]==type,]
sampleCellCountsVector <-
table(cdf[,variable], cdf$donor) |> as.data.frame()
sampleVector <- sampleCellCountsVector[,3]
proportionsVector <-
sampleVector/donorTableTotal[,2]
markerSizes <- sce[,colData(sce)[,variable]==type] |> counts() |>
colSums(exprFilter)
summary(markerSizes)
c(variable,
type,
median(sampleVector), # cells/nuclei
mean(sampleVector), # cells/nuclei
sd(sampleVector), # cells/nuclei
median(proportionsVector), # proportion per sample
mean(proportionsVector), # proportion per sample
sd(proportionsVector), # proportion per sample
mean(markerSizes), # marker library size
median(markerSizes), # marker library size
sd(markerSizes) # marker library size
)
}
})
do.call(rbind, variableValuesList) |> as.data.frame()
})
dfSummaries <- do.call(rbind, listSummaryValues) |> as.data.frame()
colnames(dfSummaries) <- c("k", "cellType",
"median_nuclei_per_sample",
"mean_nuclei_per_sample",
"sd_nuclei_per_sample",
"median_proportion_nuclei_per_sample",
"mean_proportion_nuclei_per_sample",
"sd_proportion_nuclei_per_sample",
"median_marker_library_size",
"mean_marker_library_size",
"sd_marker_library_size")
return(dfSummaries)
}
dfSummary(sce.k2)
dfSummary <- function(sce, variablesVector = c("k2", "k3"),
typeNames = c("neuron", "glial", "Inhib", "Excit")){
# dfSummary
#
# sce SingleCellExperiment
# variablesVector vector of variables
# typeNames vector of celltypes
#
cd <- colData(sce)
listSummaryValues <- lapply(variablesVector, function(variable){
# proportions
donorTableTotal <- table(cd$donor) |> as.data.frame()
variableValuesList <- lapply(typeNames, function(type){
message(type, "; ", variable)
if(type %in% cd[,variable]){
cdf <- cd[cd[,variable]==type,]
sampleCellCountsVector <-
table(cdf[,variable], cdf$donor) |> as.data.frame()
sampleVector <- sampleCellCountsVector[,3]
proportionsVector <-
sampleVector/donorTableTotal[,2]
markerSizes <- sce[,colData(sce)[,variable]==type] |>
counts() |> colSums()
summary(markerSizes)
c(variable,
type,
median(sampleVector), # cells/nuclei
mean(sampleVector), # cells/nuclei
sd(sampleVector), # cells/nuclei
median(proportionsVector), # proportion per sample
mean(proportionsVector), # proportion per sample
sd(proportionsVector), # proportion per sample
mean(markerSizes), # marker library size
median(markerSizes), # marker library size
sd(markerSizes) # marker library size
)
}
})
do.call(rbind, variableValuesList) |> as.data.frame()
})
dfSummaries <- do.call(rbind, listSummaryValues) |> as.data.frame()
colnames(dfSummaries) <- c("k", "cellType",
"median_nuclei_per_sample",
"mean_nuclei_per_sample",
"sd_nuclei_per_sample",
"median_proportion_nuclei_per_sample",
"mean_proportion_nuclei_per_sample",
"sd_proportion_nuclei_per_sample",
"median_marker_library_size",
"mean_marker_library_size",
"sd_marker_library_size")
return(dfSummaries)
}
dfSummary(sce.k2)
summaryK2 <- dfSummary(list.sce.markers[["k2"]], "k2", c("neuron", "glial"))
list.sce.markers[["k2"]]
class(list.sce.markers[["k2"]])
summaryK2 <- dfSummary(list.sce.markers[["k2"]], "k2", c("neuron", "glial"))
dfSummary <- function(sce,
sampleIdVariable = "donor",
variablesVector = c("k2", "k3"),
typeNames = c("neuron", "glial", "Inhib", "Excit")){
# dfSummary
#
# sce SingleCellExperiment
# variablesVector vector of variables
# typeNames vector of celltypes
#
cd <- colData(sce)
listSummaryValues <- lapply(variablesVector, function(variable){
# proportions
donorTableTotal <- table(cd[,sampleIdVariable]) |> as.data.frame()
variableValuesList <- lapply(typeNames, function(type){
message(type, "; ", variable)
if(type %in% cd[,variable]){
cdf <- cd[cd[,variable]==type,]
sampleCellCountsVector <-
table(cdf[,variable], cdf[,sampleIdVariable]) |> as.data.frame()
sampleVector <- sampleCellCountsVector[,3]
proportionsVector <-
sampleVector/donorTableTotal[,2]
markerSizes <- sce[,colData(sce)[,variable]==type] |>
counts() |> colSums()
summary(markerSizes)
c(variable,
type,
median(sampleVector), # cells/nuclei
mean(sampleVector), # cells/nuclei
sd(sampleVector), # cells/nuclei
median(proportionsVector), # proportion per sample
mean(proportionsVector), # proportion per sample
sd(proportionsVector), # proportion per sample
mean(markerSizes), # marker library size
median(markerSizes), # marker library size
sd(markerSizes) # marker library size
)
}
})
do.call(rbind, variableValuesList) |> as.data.frame()
})
dfSummaries <- do.call(rbind, listSummaryValues) |> as.data.frame()
colnames(dfSummaries) <- c("k", "cellType",
"median_nuclei_per_sample",
"mean_nuclei_per_sample",
"sd_nuclei_per_sample",
"median_proportion_nuclei_per_sample",
"mean_proportion_nuclei_per_sample",
"sd_proportion_nuclei_per_sample",
"median_marker_library_size",
"mean_marker_library_size",
"sd_marker_library_size")
return(dfSummaries)
}
summaryK2 <- dfSummary(list.sce.markers[["k2"]], "k2", c("neuron", "glial"))
traceback()
sceK2 <- list.sce.markers[["k2"]]
table(sceK2$k2)
sceK2 <- list.sce.markers[["k2"]]
sceK3 <- list.sce.markers[["k3"]]
table(sceK3$k3)
summaryK2 <- dfSummary(sceK2, "k2", c("neuron", "glial"))
cd <- colData(sce)
listSummaryValues <- lapply(variablesVector, function(variable){
# proportions
donorTableTotal <- table(cd[,sampleIdVariable]) |> as.data.frame()
variableValuesList <- lapply(typeNames, function(type){
message(type, "; ", variable)
if(type %in% cd[,variable]){
cdf <- cd[cd[,variable]==type,]
sampleCellCountsVector <-
table(cdf[,variable], cdf[,sampleIdVariable]) |> as.data.frame()
sampleVector <- sampleCellCountsVector[,3]
proportionsVector <-
sampleVector/donorTableTotal[,2]
markerSizes <- sce[,colData(sce)[,variable]==type] |>
counts() |> colSums()
summary(markerSizes)
c(variable,
type,
median(sampleVector), # cells/nuclei
mean(sampleVector), # cells/nuclei
sd(sampleVector), # cells/nuclei
median(proportionsVector), # proportion per sample
mean(proportionsVector), # proportion per sample
sd(proportionsVector), # proportion per sample
mean(markerSizes), # marker library size
median(markerSizes), # marker library size
sd(markerSizes) # marker library size
)
}
})
do.call(rbind, variableValuesList) |> as.data.frame()
})
summaryK2 <- dfSummary(sceK2, "donor", "k2", c("neuron", "glial"))
dfSummary <- function(sce,
sampleIdVariable = "donor",
variablesVector = c("k2", "k3"),
typeNames = c("neuron", "glial", "Inhib", "Excit")){
# dfSummary
#
# sce SingleCellExperiment
# variablesVector vector of variables
# typeNames vector of celltypes
#
cd <- colData(sce)
listSummaryValues <- lapply(variablesVector, function(variable){
# proportions
donorTableTotal <- table(cd[,sampleIdVariable]) |> as.data.frame()
variableValuesList <- lapply(typeNames, function(type){
message(type, "; ", variable)
if(type %in% cd[,variable]){
cdf <- cd[cd[,variable]==type,]
sampleCellCountsVector <-
table(cdf[,variable], cdf[,sampleIdVariable]) |> as.data.frame()
sampleVector <- sampleCellCountsVector[,3]
proportionsVector <-
sampleVector/donorTableTotal[,2]
markerSizes <- sce[,colData(sce)[,variable]==type] |>
counts() |> colSums()
summary(markerSizes)
c(variable,
type,
median(sampleVector), # cells/nuclei
mean(sampleVector), # cells/nuclei
sd(sampleVector), # cells/nuclei
median(proportionsVector), # proportion per sample
mean(proportionsVector), # proportion per sample
sd(proportionsVector), # proportion per sample
mean(markerSizes), # marker library size
median(markerSizes), # marker library size
sd(markerSizes) # marker library size
)
}
})
do.call(rbind, variableValuesList) |> as.data.frame()
})
dfSummaries <- do.call(rbind, listSummaryValues) |> as.data.frame()
colnames(dfSummaries) <- c("k", "cellType",
"median_nuclei_per_sample",
"mean_nuclei_per_sample",
"sd_nuclei_per_sample",
"median_proportion_nuclei_per_sample",
"mean_proportion_nuclei_per_sample",
"sd_proportion_nuclei_per_sample",
"median_marker_library_size",
"mean_marker_library_size",
"sd_marker_library_size")
return(dfSummaries)
}
summaryK2 <- dfSummary(sceK2, "donor", "k2", c("neuron", "glial"))
sampleIdVariable
sampleIdVariable="donor"
variablesVector="k2"
typeNames = "neuron"
cd <- colData(sce)
listSummaryValues <- lapply(variablesVector, function(variable){
# proportions
donorTableTotal <- table(cd[,sampleIdVariable]) |> as.data.frame()
variableValuesList <- lapply(typeNames, function(type){
message(type, "; ", variable)
if(type %in% cd[,variable]){
cdf <- cd[cd[,variable]==type,]
sampleCellCountsVector <-
table(cdf[,variable], cdf[,sampleIdVariable]) |> as.data.frame()
sampleVector <- sampleCellCountsVector[,3]
proportionsVector <-
sampleVector/donorTableTotal[,2]
markerSizes <- sce[,colData(sce)[,variable]==type] |>
counts() |> colSums()
summary(markerSizes)
c(variable,
type,
median(sampleVector), # cells/nuclei
mean(sampleVector), # cells/nuclei
sd(sampleVector), # cells/nuclei
median(proportionsVector), # proportion per sample
mean(proportionsVector), # proportion per sample
sd(proportionsVector), # proportion per sample
mean(markerSizes), # marker library size
median(markerSizes), # marker library size
sd(markerSizes) # marker library size
)
}
})
do.call(rbind, variableValuesList) |> as.data.frame()
})
dfSummaries <- do.call(rbind, listSummaryValues) |> as.data.frame()
dfSummaries
colnames(dfSummaries) <- c("k", "cellType",
"median_nuclei_per_sample",
"mean_nuclei_per_sample",
"sd_nuclei_per_sample",
"median_proportion_nuclei_per_sample",
"mean_proportion_nuclei_per_sample",
"sd_proportion_nuclei_per_sample",
"median_marker_library_size",
"mean_marker_library_size",
"sd_marker_library_size")
typeNames = c("neuron", "glial")
cd <- colData(sce)
listSummaryValues <- lapply(variablesVector, function(variable){
# proportions
donorTableTotal <- table(cd[,sampleIdVariable]) |> as.data.frame()
variableValuesList <- lapply(typeNames, function(type){
message(type, "; ", variable)
if(type %in% cd[,variable]){
cdf <- cd[cd[,variable]==type,]
sampleCellCountsVector <-
table(cdf[,variable], cdf[,sampleIdVariable]) |> as.data.frame()
sampleVector <- sampleCellCountsVector[,3]
proportionsVector <-
sampleVector/donorTableTotal[,2]
markerSizes <- sce[,colData(sce)[,variable]==type] |>
counts() |> colSums()
summary(markerSizes)
c(variable,
type,
median(sampleVector), # cells/nuclei
mean(sampleVector), # cells/nuclei
sd(sampleVector), # cells/nuclei
median(proportionsVector), # proportion per sample
mean(proportionsVector), # proportion per sample
sd(proportionsVector), # proportion per sample
mean(markerSizes), # marker library size
median(markerSizes), # marker library size
sd(markerSizes) # marker library size
)
}
})
do.call(rbind, variableValuesList) |> as.data.frame()
})
dfSummaries <- do.call(rbind, listSummaryValues) |> as.data.frame()
colnames(dfSummaries) <- c("k", "cellType",
"median_nuclei_per_sample",
"mean_nuclei_per_sample",
"sd_nuclei_per_sample",
"median_proportion_nuclei_per_sample",
"mean_proportion_nuclei_per_sample",
"sd_proportion_nuclei_per_sample",
"median_marker_library_size",
"mean_marker_library_size",
"sd_marker_library_size")
dfSummaries
dfSummary <- function(sce,
sampleIdVariable = "donor",
variablesVector = c("k2", "k3"),
typeNames = c("neuron", "glial", "Inhib", "Excit")){
# dfSummary
#
# sce SingleCellExperiment
# variablesVector vector of variables
# typeNames vector of celltypes
#
cd <- colData(sce)
listSummaryValues <- lapply(variablesVector, function(variable){
# proportions
donorTableTotal <- table(cd[,sampleIdVariable]) |> as.data.frame()
variableValuesList <- lapply(typeNames, function(type){
message(type, "; ", variable)
if(type %in% cd[,variable]){
cdf <- cd[cd[,variable]==type,]
sampleCellCountsVector <-
table(cdf[,variable], cdf[,sampleIdVariable]) |> as.data.frame()
sampleVector <- sampleCellCountsVector[,3]
proportionsVector <-
sampleVector/donorTableTotal[,2]
markerSizes <- sce[,colData(sce)[,variable]==type] |>
counts() |> colSums()
summary(markerSizes)
c(variable,
type,
median(sampleVector), # cells/nuclei
mean(sampleVector), # cells/nuclei
sd(sampleVector), # cells/nuclei
median(proportionsVector), # proportion per sample
mean(proportionsVector), # proportion per sample
sd(proportionsVector), # proportion per sample
mean(markerSizes), # marker library size
median(markerSizes), # marker library size
sd(markerSizes) # marker library size
)
}
})
do.call(rbind, variableValuesList) |> as.data.frame()
})
dfSummaries <- do.call(rbind, listSummaryValues) |> as.data.frame()
colnames(dfSummaries) <- c("k", "cellType",
"median_nuclei_per_sample",
"mean_nuclei_per_sample",
"sd_nuclei_per_sample",
"median_proportion_nuclei_per_sample",
"mean_proportion_nuclei_per_sample",
"sd_proportion_nuclei_per_sample",
"median_marker_library_size",
"mean_marker_library_size",
"sd_marker_library_size")
return(dfSummaries)
}
summaryK2 <- dfSummary(sceK2, "donor", "k2", c("neuron", "glial"))
table(sceK2$donor)
summaryK2 <- dfSummary(sceK2, "Sample", "k2", c("neuron", "glial"))
summaryK2
summaryK3 <- dfSummary(sceK3, "Sample", "k3", c("Inhib", "Excit", "glial"))
summaryK3
write.csv("./outputs/02_summaries/cohort2_nuclei_summaries.csv")
write.csv("./outputs/02_summaries/cohort2_nuclei_summaries.csv")
summaryTable <- rbind(summaryK2, summaryK3)
data.table::fwrite(summaryTable, "./outputs/02_summaries/cohort2_nuclei_summaries.csv")
